%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: aiw_sampler_trace.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: David Pfau
%%CreationDate: 6/3/10
%%BoundingBox: 0 0 955 457
%%HiResBoundingBox: 0 0 954.7198 456.7491
%%CropBox: 0 0 954.7198 456.7491
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x406 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 64 8%%BeginData: 10546 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD94FFA9A9FD7BFFA9A97F4F7FFD7AFF7F7F7F4F55FD60FFAEA8AE%FD18FFA953A87D7E7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87EA87DA8%7DA87DA87DA87DA87DA87DA8845F115E33FD18FF787EFD4EA87EA8A87E7E%A87EFD05A87DFD06A85A2E3A585FAEFD17FF7FFD40FFA9FD0DFFA9A9FFFF%A9A97FFD09FFA9FFFFFF7EA9FD15FFA9A955A9252B4FA9FD16FFA9FD0FFF%7FFFA9A9A9FD0BFFA9FFA9FF7F7FA9FFA9A9FD0AFFA37FA37F55A9FFA955%2B7FFFA9FFA9A9FFA9A9A97FFFCB547EFD16FFA3A37F4F4F79A9FD17FFA3%FD0EFF55A9A97FFFA9FFFFCBFFFFA3FFA9FFA3FF7F7FA97F2579FFFFA9FF%FFFFA9FF7FFFFFFFA9A94F4F4F554FFFA94FF9794FA97F7F7FFF2BA3A9A9%A9FF03A9FD1BFF79FD17FFFD04A9FD06FFA3FFA9FFFFA9254F4F557FA3FF%A92BA97F7F2B79794F55792B5525252BA97F79FFFFA9A9A3254FFFA92B4F%25252B2555A955FD04254F2B25797FF9554F797FA9247EFD1BFF7FA9FD06%FFCBFD06FFCBFD07FF7FFF7F557FFFFFFF55CBA9252B7FA97F2BFD04252B%25A34F4F557F2B25254FF9252B2B2525F925555525A3A9792555F92BA9A9%F925F925F9252B4F2525F925F92BF94F2555F94F2B4FF9792484FD1BFF79%A9FFFFA3FFFFFF7FFD05FFA9A9FD04FFA9FFFF7FA979F94F7FA97F4F7F7F%F9252B4F2525F925F925F9F92B25252BF925F925F925F925F925F925F92B%F9F92B4F25F9F92525552525F925F925F9F9F925F925F925F925F9252525%F92525F9F9037EFD1BFF7FA9FFFF797FFFFF7FCBFD04FFA9A9FF7FFFA94F%A97F55552B2525792B55F97979252525F9252525F9252525F92B2525F925%2525F9252525F9252525F925F925F9252525F9252525F9252525F925252B%F9FD04252BF925F9252525F9252525F92503A9FD1BFF7FA9FFFF2B2BFFCB%257FFFA9FFFF4F7F7F79A955F94FF955F925F925F9F92525254FF925F925%F925F925F925F925F925F925F925F925F925F925F92BF925F925F925F925%F925F925F925F925F925F92B4F25F9254F2B2525F925254FF925F925F925%F92B7EAE83AEFD13FFCBA3A9554F79A9FFA32BF97F7F4F55FF55A97F4F25%794F79F9252525F925F925F925F925F9252525F925F925F94F2B2B2525F9%25F925F92BF94FFD0425F925252B4F25F9252525F925F9252525F9252525%55552BA9252525A94F7F4F25F9252BFD04252BF9252F34103A33FD12FFA9%A3557F25252BA9FF4FF9254F4F254F5525254FF925F925F925F925F925F9%25F94FF925F925F925F925F925F94FA95525792525F9252525557F7F7925%4FF925797979A9FD0425F925F925257F4FF9F97925A97FA3FF4FF925A9A9%FFA9F925252BF94FF9792525257E345F5F83A8FD14FFA9FFFF7FFFA92525%F92BF925252BF9252525F925F925254F252BF925257FA94F2525252BF925%7F2525254FFF79557F7979252BFF4FA9FFFFA34F4F794FFF7FA9A979257F%2B79254F257FFFA9F92BA9A9FD04FF794F4FFFA9FFFF794FA37F4FA979FF%797FA97EA9FD1BFF7FA94F25F925F925F925F925F925F925F925F92B552B%5525254FFFFF2B792B7F2B2B4FA92B79557FFFA97FFF7FFF557FFF7FA9FF%A9A94FA9FFA9CBA9A9FFA97F7F7FCB7F2555FFFF7F4F4FFF7FFD05FFA3FF%A9A9FFFF7F79A9FF7FFFA9FF7FFFFF847EFD1BFFA35525F925F9252525F9%252525F9254F25F92525A9557979A97FFFA9A3FF4FA97F7FA9A9FD08FFA9%FD08FFA9A3FD09FFA97FFFA3797EAEFFFF7F55A9A9FD0CFFA3FD09FF7E84%FD1BFF7F4FF9252525F92BF925F92525F92BFF2525F955A9A97FA3A9FD05%FF55A97FCB7FCBFD1FFFA9A9A983FFFFFF79FFA9FD16FF847EFD1BFFA32B%254F7F7F794F4F2B4F4F4F25A9FF4F2BA97FFFA9CBA9FD0AFFA3A9FD21FF%AEAEFD1CFF7E84FD17FFA9797F4F4F254F7FA9FF7E845584557F7FFFFFFF%7FA9FFA9A9FFA9A9FD0AFF79CBFD20FFAE845FFD1CFF847EFD17FFA97F7F%5579F97FA8AEFFAE5E8484A3A9FD16FFA984FD21FF5F5F83FD07FF84FD13%FF7E85FD13FF557FFD06FF792555FF34FFA85E7DA879A9FD06FF58FD06FF%AEA8FD07FFAE5EFD06FFAEFD19FFA8333383A8FD05FFAE84A8FD0CFFAEAE%FD04FF7E59838383A8FD0FFF792BFD06FF7FF9A3FF3AFFFF33AE84CB83FD%06FF3383FFFFFFAEFFA8FD08FFAE11AFFD04FFAFAEFD19FFAF10335FFD06%FFAE5EFD0DFF5F8AFD04FF59340A3A11FD10FF554FFD06FF552BFFAE0AFF%83118383FF83A8FFFFFF84FF1083FFFF835FA88383FD07FF5F0A5FFD05FF%83FD19FF83100A5EFD06FF8333A8FD0CFF8358AEFFFFFF8459AE8384FD10%FF7F55FD06FF7979FFA833FF5E0A5F34FF83AFFFFFAEAE841083FFFF8958%FF118AFD06FFA85E0A83FD04FFA884FD19FF5E0A1033FD06FFAE1183FFFF%A8FD09FF5883AEAEAEFF7E85FD13FF5555FFFFA9FF7FA94F7FFF830AAE33%0A1033FF83A8FFFFFFA8840A83FFFF5F34A81134AEA8FD04FF830A0A33FD%04FFAE5FFD19FF330A0A34A8FD05FF831033FFA8AEFD09FF5834AE83AFFF%847EFFFFFFA83383FD0DFF2525FFA9797F25254F7FFF5F1183330A1111FF%83FFFFFFAEAF84105FFFFF8933AE113A83AEFD04FF5F110A1184FFFFFFA8%83FD19FF330A11335FAFFD04FF830A33AEFF5EFD05FFAEFFFFFF3333A8AE%AEFF7E85FFFFFFAE33FD0EFF2B2BA9FFA9A9797F55A9A85F0A830A100A10%A883A8FF83AE83830A83FFFF5E33830A1183A8FFAEFFFF5F0A0A0A3383FF%FF8458FD19FF11110A1011FFFFFFA8FF34100A83AE3383FD04FFA8A8FF5E%110A8A84FFAE357EFFFFFF831084FD0DFF7925FD06FF7F7FAE581034110A%110A8383AEFFAE845F3A0A58FFFF5E0A5E0A335EAEFFAEFFFF5E100A1011%AEFFFF8383AEFD17FFAE3334340A1184FFFF5FAE5E0A1083AE3383FFFF83%FFA8FFAE5E10105F8AAEFF0B85FFFFFF830AAEFD0DFF254FFD06FF79A983%5F0A110A110A0A5E835EFF5E3A33330A58FFFF33100A0A0A5E5FFF83FFA8%5E0A110A0A5FFF8383585F5FFD0AFFAEFD0CFF0B5F330A0A83FFFF33AE33%0A0A835F1058FFFF84A8AEA8FF34100A345EFFA80A7EFFFFFF5F0A83FD0E%FF7FFD06FFA3A9AE5F3A0A335F330A5E5883FF5E0A3A0A1058FFFF341011%0A335883FFAEA8835E335E330A8383835E5E115EFD09FF8A5EFD09FFAEFF%A834FF5E0A113AFFFF3A83330A10835F0A58FFFF84FF8383AE5F10111183%FFAE0AA9FFFFFF5F10AEFD0DFF554FA9FD05FF79FF5F5F5E1058FF0A1133%5858FF580A0A103483A85F0A330A0A0A3333FF835E113A83FF330A333A34%33341134FD08FFAE5E1158FFFFFFAEFFFFFFA8AEFFA833FF83100A3333A8%11830A330A5E33100AA8FFA8A8345FAFFD043358AE5E0A2E835E838383AE%FD0DFF7F25A9FFFFCBFFFF7FA9895F831083FF111133335EFF5E0A0A0AAE%AE83111133330A331133AF8958100AAEFF830A1011110A5E0A34FD04FFAE%8AFFFF5F5F0A83FD04FF83FFFF5F84FF845EFFAE340A0A10583434115E33%335E0A0A58FF34830A5E8310345E0A585E340A12335F33FD10FF7955A9A9%55A9254F55A9333383115FFF33830A1133AE330A0A0AA8AE58110A330A58%0A0A0AAE585E0A0A83FF84110A0A0A33330A33FD05FF5EFF835E580A58FF%A88384A8FFAE33AEFF8333FFA8830A100A330A100AAE113333100A5E5F11%58110A110A5E58100A34110A59AEA8AEFD10FFA34FFFA9A97F79797F5910%33FF1183FFFFA8101133835E0A110AFF835E101034115F340A3383333310%0AAEFFAE33110A11115E0A33FD04FFA88AFF83345E0A83FFAE33AE83FF83%3483FF835FFFAE83100A110A100A3AFF5E103A1010585F105F11110A0A83%831011333A0AA9FD13FF7F7FA9FD05FF7E340A33FF345EFFFFFF0A100A5F%11330A11AE8A330A0AAE33840B0A0A830A110A1184FFA85E0A0A0A333310%0A83AEFFFF835EFF34330A0A58FF5F115F83A883333383AE83FFAE84110A%0A110A0A33FF5F0A0A110A57111033110A0A0A8383110A330A0A7EFD1BFF%840B1033FF5F83FFFFFF110A103433333311FF84330A5EAE8384330A5E83%11103311FFFFFF835E0A111134343A33AFFFAE585EFF5E11100A333A5E10%5E33835E330A3A83AEFFFF845F0A0A0A110A83FF8A0A1011330A100A3311%0A0A11FFAE113310100BA9FD1BFF59110A33FF8358FFFFFF11330A330AA8%343AFF830A0A58FF83AE8310333410110A34FFFFFFAE83110A3A585E1111%83FF835E338434330A0A0A1133110A10115E0A0A1183A8FFFFFF83100A0A%1033A8FF83100A835E110A0A0A5E0A0A33FFA85F33330A2E7EFD1BFF840A%0A34FF8383FFFFFF5E333A1033FFFF5FFF5E330A8AFD04FF58830A111033%5FFFFFFFAEAE33118383843A108384AE3358833A331010330A110A110A11%5E330A1133FD05FF11330A5F83AEFFFF3333FFFF111010105E330A5FFFFF%A883111034A9FD17FFA3FF7FA3530A1083FF8A83FFFFFF585E583358FFAE%83FF5E331183FFFFFFA883A833111083FD06FF5F33FF83AE3310345E5833%33830A10335F0A0A0A330A100A5E0A100A11AFFFFFFF845F8333588383FF%A83A34FFFF340A330A830A3458FFFFAF583410357EFD16FFA3797F252553%0A34AEFF83AEFFFFFFAF835F1183FFFF5FFF5E5E1084FD04FF83FF0A8334%FD07FF5F83FFAEAE5F0A5E3333111033330A83AE100A105E330A3333100A%1011FD04FFAE83FF5F8383AEFFFF5F83FFFF33335F1183335FAEFFFFFFAE%333A59A9FD15FFA9FFA9A97FA3590A58FFFFFFA8FFFFFFA8835E3383FFAE%AEFF5F585F83FFFFFFA884A80A845FAEFD06FF835EFFA8FF830A0A110A10%0A100A3458FF0A100A830A100A110A330A11AFFFFFFFAEAEA88383A8A8FF%FFAE58FFFF8334FF588334AEFD05FFA85E5935AE83AEFD18FF830483FD08%FF838333AEFD04FF8383FD06FF83FF0AFF5EFD07FFA8AEFD04FF11111010%11330A335E8AFF5E3389A8583310113A333310FD07FF83FF84FD04FFAEFF%FFAFAEFFAEA8FD09FF5912103A11FD18FF590A5FFD07FFAEAE5E5EA8FD04%FF835EFD05FFA8AEFF33A88AFD0DFF5E0A100A83830A113A5FFF585883FF%5E830A3A84830A11AFFD09FFAEFD09FF83FD0AFF8535838383FD18FF830A%AEFD09FFAE83FD05FF83AEFD08FFAEFF83FD0DFF5F110A1183AE0A333AAE%FFAE5E8AAF83831133FFAE1183FD14FFAEAEFD09FF7EA9FD1BFF5858A8FD%0AFF83A8FD04FFAE84FD0BFFAFFD0CFF830A110A8384101184FFFF83AE83%FF83AE113AFFAE34FD15FFA8FD0AFF7E5AFD17FFA9A97955595FAEFD0AFF%83FD05FFA8AFFD18FF8333343A83AE115E84FD04FF8AAEFFAF5F5FFF8483%FD20FF7E85FD15FFA9A3557F25252E5FAEFD0AFFAEAEFD04FFAEA8FD19FF%5F5F83AEA8335EAEFD04FF83FFFFFF835FFFAE5EFD20FF7E7EFD18FFA9FF%CB595FFD2CFFAE5EFFFFFF5E8A83FD07FFAE8A5FFFAEAEFD20FF7E84FD1B%FF5984FD2CFF83AEFFFFFFAE8384FD08FF8383FD23FF847EFD1BFF84A9FD%2CFFAFFD04FFAEFFAEFD09FFA8FD23FF7E85FD1BFF59A9FD61FF842E835F%83FD18FF84AFFD61FF5912113A33FD18FF597D7DA87DA87DA87DA87DA87D%A8A87D7DA87DA87DA87DA87DA87DA87DA87D7D7DA87DA87DA87DA87DA87D%A87DA852A87DA87DA87DA87DA87DA87DA87D7D7DA87DA87DA87DA87DA87D%A87DA87D7DA8A87DA87DA87DA87DA87DA87DA852A87DA87DA8A15935AE83%A8A8FD17FFA82EFD0D5227FD0F5227FD0D5227FD0D52275227FD0D522752%525227FD1452FD29FF7D27522752A8FD09FF5252277D2727A8FD08FFA852%7D272727A8FD09FF525227275227FD09FF7D5252522727A8FD08FFA82752%27522752FD2DFF7D27525227FD0AFF7D5227525227FD09FFA8FD0552A8FD%09FF525227525252A8FD08FF7D5252275227A8FD08FFA8522752275252FD%2EFFA8FD0FFFA8FD0FFF27527D52277D527D7DFFFFFFA8FFA8FFA8FD0BFF%A8FFFFFFA8FD0BFFA8FFA8FFA8FD4FFF27277DF85252272752FD77FFA8FF%FFFFA8FFA8FFA8FDFCFFFD3CFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2010-06-03T12:13:30-04:00</xap:CreateDate>
         <xap:ModifyDate>2010-06-03T14:37:38-04:00</xap:ModifyDate>
         <xap:MetadataDate>2010-06-03T14:37:38-04:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>124</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAfAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FWD65+bnl7&#xA;TLS+uY4Z7xdMvp9Nvki4BkntrSa7YAM3xArBQe59jTd6bsHNllGJIjxwExfdKUY/778bItNvIeva&#xA;vr+hnWNQhgt4byZ30yK3ZnItKKqeqzABpC4c1X4StKZi9p6XHgy+HAkmI9V/zvLyque92kMizXK7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqh5NR0+KQxyXUKSL9pGkUEV&#xA;KjcE+LqPpGRMh3sDkiNiQiMkzdirsVdiqjeX1lZQme8uI7aAEAyzOsaVPQcmIGTx45TNRBJ8t1YZ&#xA;5g/ObyPoFtZ3GozXCJfy3kFsBA5LSWE5tpga04/vVoK/TTNzpfZ7VZ5SEAPSIk7jlOPEPsRaF8m6&#xA;HoPmPT73Upb/AFC4uH1XVVf0dW1GFURdQuEhX0YbiNIwIONF4j4cxu1cBxZQK4f3eP8A6Zxv/ZX8&#xA;VDIF8gaCihEuNWVVACqNa1YAAdAB9azWk2lv/AWh/wDLVq//AHGtX/7KsCu/wFof/LVq/wD3GtX/&#xA;AOyrFXf4C0P/AJatX/7jWr/9lWKu/wABaH/y1av/ANxrV/8AsqxVYnkjy7I0iJe6q7RNwlVdb1Yl&#xA;GKh+LAXWx4sDv2OExIq+qr/8BaH/AMtWr/8Aca1f/sqwK7/AWh/8tWr/APca1f8A7KsVd/gLQ/8A&#xA;lq1f/uNav/2VYqlMemeR5tJi1W21LVri0nQyQFNa1cO6LIsTsqPdK1FdwG8MyzosoyHHIVIc/lf2&#xA;hFpqPImhEkC61YkGh/3Natsev/LVmJSVsvkjy7CoeW91WNSyoGfW9WUFnYIi1N11ZmAHicMYk8la&#xA;fyX5bjBL3+qIFdY2La5qoo8hARDW7+0xdQB3qMIgTyCoZ/Lfk9OPqanqicrgWac9b1deVwekQrdb&#xA;scsGnmeQ/h4vh3raF0vTvIWqXt1Y2Or6nNdWdxLaTwjW9XDCa3p6qgG634cqHLc2hzYoiUokRlES&#xA;HuPL5qjbPyjoFzcX0Kz6wpsZ1gYnW9W+ItBHNUf6V4TAZTkxcIif5wv7SP0Kiv8AAWh/8tWr/wDc&#xA;a1f/ALKsqV3+AtD/AOWrV/8AuNav/wBlWKsdmHkKG4vIX1HVQ9lDNPPH+ndUEv7iWSJkEZvAasYX&#xA;4+NM2EezMxESB9RAHduAefxF9yLQlrp/l++8i3d/Z6vqc2r2el+vdNHrWqExXJtjJVl+tcR8anal&#xA;NqZdPQnHqoxlEjHLJQvrHir7lvZD6Jq3kHUtf1rTJNUv7UaQpJZ9f1U8xHcPbyychd8eHL0gB15N&#xA;TfLNT2Jmx4scwJS8Ty74iQHv+r4BbZPdeXfKNqwWbUNWU/WYrJv9zWrfDPOFaNDW66sJFp8xmshp&#xA;py5D+Ey+A5n7Cm0HqGgeWNLttShOqard6pY2k+qfU31zVVkMBaQx7Lc/YBT0w1O2++T0+knkMTRE&#xA;JT4eLz2/QUEoXzRZeUdN8paxqw1fU7RrKKeNJZda1UcLhJJLaKqtdEUaeMhaihyWHQ5J5Iw4Sbo7&#xA;d1CR/wBid2GXeJQGifk9o2qaFFf3Wp37y61axz3nKSNyZLhI5JG5MhYk0NORNK7b5rM+ijxy3PM/&#xA;e6odkQl6uKXq936nquXu5dirsVdiqyaCCeMxzxrLGeqOoZTT2OSjIxNg0VSO+8geSL+QyXuhWNzI&#xA;XlkLy28bNznYvK1SOruxYnx3zNx9qarGKjkmBt/Eemw+SqP5eRxx+XriONQkaavrSoigBQo1e6AA&#xA;A6AZPtYk5gT/AKni/wCmUFTzTtRttQtVubckoSVINOQIPRgCaeOYWbFLHLhKhS0TVotW02O+iQxo&#xA;7ypwbcgwytEenumS1OA4p8B8vtF/pQCq6hfx2Nuk0illeaCABaV5XEyQqd+waQE5DFiMzQ7ifkCf&#xA;0JRCyRsXVWDNGeLgGpU0DUPgaEHIEEKx7XPOOm2vlW513T7qC5ijgkuYH5gpJHC4SV1oRVVLULdO&#xA;mZ+m7PnLOMUwQbAPkSLCCXnHnj84rPyh5yTT3ZlsNSv4bi+vUXmEtxBYUdeNWaqJIGAHQ7VOdH2b&#xA;7Py1em4x9UIERHfLiyfpqvci2W+avzb8u6RpEtzb3UP1+K+Fk1rccgVEV+LO5kfifhRQsjIzEA0+&#xA;YzU6HsLNlyCJB4TDisecOOI9/IEdLZMF8+f85FXfl+byzcafaRXNvrOlRald2kvJeHrkqgSQd1ZH&#xA;BHTbN52Z7JRzjKJyIOPIYAjy8viFFd6B1b/nKS3ttAgOnxxXOstYxSsJVb0/rTBFdG4cR8LM7ECm&#xA;y0rvl+D2KMsp4yRj4yNv5u+/3D42x4niNh+Z3may0OPSIbuX6ulvPaqvNv3ccjxzIYTU+myyxBjx&#xA;pUffna5exsE8pyGIviEvfQIN9+x6sTJ6ppH/ADk5fmHzLcvYxwXEkjX9koq1V9S0toYGJqOSwK5Z&#xA;6bmlAOmcvqPY2F4o8RIA4T8pyMv9NVBIklQ/Pu8sfKunabJPLeaha2YeGblzBuBdWVxAZi5YFolg&#xA;n6qeqr45lf6F4zzymAIwlL/Y8OSMq99x+09ySWMp+d3m2PS5bZbmRppJLS6Nw8jMTc2n1UI7g15A&#xA;/VGLCu/L2zZH2b05mJUKqQqv4Zcf/FCu6vNTVWhZfzg19r601MHnqNveR3skkvxB3jhgRhv0Dywl&#xA;zQClffLY9gYuGUP4DEx28zL7gaY8SG/Lj8wrry154i167keY3UqrqN1IzPJ6ctzHLcyMSGZ2ZFYH&#xA;ua1y3tfsqOp0pxRAHCPSOliJER5b0k5LereQ/wDnJSRLzXLjW4Edbp7S4hi9RISJCkFpMEPABgOI&#xA;k3NeI9ic5XtP2PBjjGI/TxA7E7eqQ6/D3qCxnzl/zkTq+radrWnacr2q3uqR3NtcKd2solK+i/2W&#xA;Xl6UJovX4wTvmy7P9k8eKeOc/Vw4yCP6R6+fOXP+jXJBkmOtfnu0/wCT9lpMV7LH5slAMt3bFlKf&#xA;6TOHDsaFW9BUIZWNS/amY+n9meHtGWQxHgDoevpjX+yv5dbSeTynWfO2uarrd5q1zKDPdySy+mKh&#xA;I/W9U8Y9+ShDcOV3zqtP2bixYo44jaIHxrh5+/hFqZdyf6B+b+u6LoOq6bEPUuNXmj+uTmgBto4n&#xA;jMSgD4ebOCSPfxzX6rsDFmywmeWMGh/SJBv4fjkgmtmHx65qkUl9JBO0LakhivSlBzQzJcca9v3k&#xA;SnbwzcHTYyIgi+DcfIx+4lBkSyVfzR8yNqq6nPeySS262UlvC5rGbiza0oxXpv8AUwf9vNaexcIx&#xA;8AiKPHZ61Lj/AOLTxbo/W/zU1eXzB5r1K3uZUfzHZJbQlJOZt0klhnaJXJqqrGJY6D+bp4UabsTG&#xA;MOGBA/czJ5fVQlG69/DL4IJoovzN+dV5rnl/zbol9bRejq6xjT57cOvEw6m998YcsTzW4cdqUXbq&#xA;cw8fs7HCceWJN4xLiB88XBtXdwj5lTJ9eeTv+UR0P/tn2v8AyZXPJM/95L3lli+ke5N8qZuxV2Ku&#xA;xVC6lfNZWrXC2s94VIHoWyq0hqaVAZkG3zy3Dj45VYj5nkrzHzd+bPnbR4rQaf5Tn1C4kuNRhvVj&#xA;hunWFLS5aG3kDLEFcSxKJK1ofYb502g7C02Yy48wgKgRvHfijchz2o7frRaN0jzxD5b/ACy1XzFq&#xA;do8P1bUtXZLVnQGWaXVbkrEhYhtnbieSBtieOUajs06nWwwwlfFjxb77AYobn4b7EjluoeIfk9+c&#xA;155dj8zQ6gzPps0UmoQR8wZIriohVIuXEfFzQb9k2Gdt2/7PR1BxGH1giJ7iOdn7fmxBoJ35I/Oi&#xA;DQPy71G2nu5ru9tY7N7KFWIIlmVnlHqmtAXQcgO5Jp9rMLtL2dOfWRkIiMZGVnyFVt8dvcN+Sgmk&#xA;J+Y3/ORD6w+jz6Kptn06e0vvT+Ih3HqPNDLX4WVKQ02+1U+FLeyPZPweMZd+MSj9wBHv9XwpJIpK&#xA;7v8A5yE1WPTNfh0pHtLvWbp7iNy3IQiRSJOPQ1PMcTXb0xtvtlY/ZTGZ4zk9Ucca99cvu3/reTEm&#xA;rebJ5t1mK1srMSlrWwtLuxht2ZjGEvjJ6zBQRufVr81XwzozocZlKVeqUoyvr6ar7vtKCe9DaZpO&#xA;ueYL9bWwgmv71+CKi1djUrEgqeg3A3y3NnxYIcUyIx/BKiypz6vqc7XTXVxJcyXwrcSzO0jsWl9Y&#xA;uWYmrGSpJPifHJRwQjXCABHlXur7lN9VW6vNX1h7S1k5TNp1qba2hAFY4IOczKB7Fnc/TkIY8eES&#xA;kNuOVnzJofqClCWVnNeXUNtF9uZxGpPQEnqaV2HU5dkyCETI9FESd+jONU/J/WtN81Dy1NKHvQbQ&#xA;yyxozRxrdo7fERX7LqqV6EnNHg7fx5MHjAen1e88JH6N/cvDuweazurdImmiZFuEDwltuSk0B+nj&#xA;/HN5HJGRNHkotk+jflV521a/1DTbfTZk1PTTGtxaSIVYCR2Xka/sjgdx17ZrNR23psUIzMxwTuj7&#xA;v07opvzH+WHmHQNRayvDFSt2Em5fCzWFqt1OtF5EFVkCjsT3pvg0nbOHPDijf8P+zkYx+5kIIXyr&#xA;5M1nWYNWvra1E1ppGnXF9dM5VQIljkUOvKlSHQmnXbbLdd2hjwmEZGpZJxiPfY/HxXhq0Z54/LDX&#xA;PJ9pbTak8bSS3ElrJHHX4GjgguBUtQnktxTptx98p7N7ZxauREL2iD/spR/3v2qY9zGbnS9QtiRN&#xA;byIUj9WSqn4UMnphm/lBegBPt45s4Z4S5Ec6+y0EI7yz5R17zLq6aTpNq099JGZVjqFpGACXPKm3&#xA;E12+jKNZr8Wmx+JkNRBpMY96raeS9YuPO6eTgANUN8dOcgMyLIsnpu5oK8FoWJp03yE+0ccdN+Z/&#xA;g4OL4Vde88vejh3pm/l/8h/NOteUrDVbW2lF3cvcOLeSP0qxgQLbt6jsBxdnY1p0BPy0uq9p8GHU&#xA;SxyI4Rw73e/q4th1FfOmcRSRfnF5NHlb8w9T0yBWNmfTureSlAY51VmIFWoFlZkHyzO9n+0PzWjh&#xA;M/VuD8P2bseHd6fff84z3lzPrsWm3sKWljcWqQW6q/qzGGzEklC3wo0hnWlSRWtem/M4vbGMRjM4&#xA;nilGVnoLnQ99cPkyIeJ6P5e1aaSdxYTSxxWss0lI2YIskUiROwpsDLxCn+ancjO01GrxxAHEBcgO&#xA;fmLHy+xjw7L9D8la5rN9o1raQs36beRLR1Bb+4P7806n00+I07e+R1PaOLDHJKR/u6v48vnyY0i/&#xA;K/kXV9S1SCO706f6hLbXdyZXDwxslpFKX/ecW+zJCVIG9dtswe2e044tNM45ROQUKv8AnV7+htjl&#xA;EoxNc6fTHl/V/wA4F0a1S30tTZx2lv8Ao9YxBSSECDh++eU0d4+deUfw+Dfs+EaiebxZ7fxH73VD&#xA;LrOkdunLlt1vuv8AHLsGZDvXYq7FXYq7FXYq+Ovzv81Xkko8sxVFrFe6vcS1pu8uuXtQNvCOPev8&#xA;a+v+zehiB45+owxD5Ycf6yxIt51d+VtbtZF+s2zwJIkkgkdTw/dh2K8gCOR9FqDOix63FIek3y+2&#xA;v1hEo2duqBhsb6VhGkUhDK8nEA7rChldv9jH8Xyy+WSI3sf2mvvQImwCyX8vfy31jzn5qfy9bMtt&#xA;NDDPNczSbpGIfhFaVJrKyJt41zW9q9r49Hg8aW4JAA77/ZZXh3SfTfK+r6kyizi9VfR+sTSCvGKP&#xA;1jBykNPh/eCn0jMvNrceP6jW9e81xbfBeF9A+YvyRtBrd9bxcbix1HzDok13CKpIlu0U4vOD7/bk&#xA;uC3EdFA60zgdJ7Ry8KJO0oYMoHddx4NvIRr3sgB1ejflF+Vun+SYdRliHKe7leFZJI+Moht5XRTz&#xA;JJ4ygK9Bt0zne3u2p60xB5RF89rIH3ckhguofkNpem3nkyFbBLwTBbTzA4VSrSBYCXUU2HCGdif6&#xA;5vMXtPkyRzni4a9UPd6v0mKnlSJ8n/lTpegecdM8wSwul7d+atWgso2aqJYpaXxgFKsWblbBwxPQ&#xA;9O+V6/tyefTTwg+mOnxk/wBfix3/ALqqWI5sq0X/AJx6/LbS4rcLaSz3ECsGuXlYO7PsWPGlO4AH&#xA;jmq1HtXrcpPqAB6UtdGbXPlnSLnXY9buIjLewwpBEGNY1EchlVgv8wc1qelBTNLDWZI4jiBqJN/M&#xA;V8qWmOyflH5SurXREvrVZJtCmjntGQsE/dMCqFCaFOKKtD4ZsR29qIyyGJ2ygg/Hr71pklp5d0+1&#xA;16+1yLn9d1BI47ipBSkShV4ilRsvjmunq5yxRxH6YXXxWkn178vdI1nX9M1C7hils7OPUFuLSRS3&#xA;qSagsKFwSaCixMpHcNmXpe1cmHFOESRKRhR7hDi2+37Eo+fyZoM0OpwtCVi1fT4tKvVRuPK2hWZE&#xA;AI3Dcblhy+XhlEe0MsTA3vjmZj+seH/iR9qrPMfkfy95gtmh1C2WSt0t8GYcx9YjhECuVaopwUCg&#xA;pWmHSdpZsErgf4eH/NJv71Yvd/lRpUGi+ZIPqkN6+paU1rERGFkaRJrm4QBdwCjSwhWB6oDtQZs8&#xA;fbmSWTEeIx4MnFz2qoRPzqV+9jSn+WP5fweTdau4mgie8vYm/wBMCioht4LJRFC2x9L1ZJK1G/Fe&#xA;lMq7b7alqzCIPoAka/pcR3Pnw182HGRIR8j+j9akPy5i0n829J8zW7K5vm1D65SOjmSdZJFZm3+F&#xA;E4Rjx67dMyv5WOXs+eA/w8Fb9BQ+02Wx6DoFlNYaFptjPT1rW1hgl4mq8o41VqHbaozn9VkE8spD&#xA;lKRPzKQo6l5W0DU79L6/sobmdITbkyIjBo/WiuFV6irBJbdWUVoDk8Oty44cEJEC759aMftEiCqN&#xA;tbGG2nvJkLFr2YTyhiKBlhjhotANuMI698pnlMhEH+EV9pP6VY/5c8g6ZoeqXd9C3qLPE8EMBWix&#xA;QyTPMyfabmPiRdx+z75n6vtSeeEYnobJ7zQF+XX5oATDR/KWh6PFYRWEHpx6ZFPBYqTy9OO5kWSR&#xA;QTv1jUD2yjUa7LmMjM2ZkGXmYggfetJfq/l7R9G8i6raadapBDbadfLEftOBMjyyfG1W+OQ8jv1w&#xA;nV5M2YSmbJlH7Nh8hswy/QfcmPk7/lEdD/7Z9r/yZXMfP/eS95Ti+ke5N8qZuxV2KuxVjnlDz5ov&#xA;mt9Qj01LiKXS5BBexXMYjZJCzqUIDNRlMZqDuNvEZsdf2Zl0oiZ0RMWKN7bfrQCkXmX8ufM+rw6l&#xA;HH5nkRtStbe0aWSGhjFvPJPyRYJIEqxdUaq7rUGtds7R9r4MRgThHolKXPnYEd7BO2599UtPHvIf&#xA;leHX/wA3vMeh392boWUN7S4lVJHV7XzAk55AUNZKEnkSfjPbbOv7T1pwdn4ssI8PEYbDb6sBj9nl&#xA;3d6AC9T1K48vap+X9hr8lshR7hzcSS8gP3s00d7Tix/dyepMAK/Ybsenmce1c0YCUZV9P+xqv9yH&#xA;Wy1l6eOQbb7/AAO/w2+THrHyLoK/U4dStE+rx61cQ3VzsD9Sl8tvIxkZa0UtRqN0r750eHtvLKOW&#xA;fHyxxNdBIZMZ2+Z+9ysGQESMjy+z0xP7Xr2keX9J0mFI7K3RGXn++Kgyn1X9R6vStGfenTNFn1WT&#xA;Kbke7bpsKDkgJDLpnkzy6LHyzDYJbW3mIyWQCGm0VuzUZmNfspxWn7RHjhz9q5pZYznImV7e/m05&#xA;MojKMT/EyO90+yuJYDIfTlSZJ1K8VZ3iB4hqglgAcrhnlGx3gj5txpUjvA+oz2XGhhhhmL16+s0i&#xA;0p7ej+OUXvTET9Rj3Afbf6kRkmbGfPl3Z6dY6brdy5B0nUIJoo1oTIbhXsnUBitT6V07DftkvzZw&#xA;wmP54Ef9lGX+9cfVZ/ChxeY+9ksciSIskbB43AZHU1BB3BBGRbwbWmeJZ0gLATSKzoncqhUMfoLr&#xA;9+C14hddV+FLsVdirsVdirsVeTeYfPktt+Yl5p1tI/q2NteCN+SlA01rbOiqp5A+m8DMQe5zByZq&#xA;mQOl/cHn9RrjHUmI/hEvtjH7qes5nPQJb5i1iLSdJuLpnWOURTG3L/ZMkcLzAN7UjOQyT4RbRqMw&#xA;xwJ8j9xP6Eyybe7FXYqhU1K1bVJdMDUu4YI7lkNN45XkQEb12aI128MjxC6axkHGYdQL+d/qS7zv&#xA;cQQeTtbeeRYkNjcqGdgo5NEwUVPcnYZdhkBOJPeEZ5CMCSa2Yj5a/NvyVa+XbS0e5leTS7G3W9ZI&#xA;mZUKRojb96fEduyn2rj6jV4xknvyJ+9wIdp4QKs+nyek5Y7R2KuxV2KvGfyM17yrJdedNUtNRb6n&#xA;NqQYzXka2iKkss8kYUtI/Xm21E/1ASc7L2l0ucRwY5R9Qh/CeLkIg9B3efvqmILMNc/OHyXosFnN&#xA;eyXIW+kvYbYJbuSX06ZoJ+XTjR0P2u25oM0+m7A1OYyERH0iBPqH8YuP2Jti35ZLo1jpH5i+aoFD&#xA;3s2s6xK86qUnEEJMkcfxUZf2noQNzv0zK9p82SMMOM/TDBDbpdbn9DVnycOOUu4E/Y898xeZZrb8&#xA;k/Kul20jJLJLJPMw3V0aa7j4n6VNQc8/y5SMEQPxzeZyT/waGPzJ/wBlJnPk7zPPr/k3z/NIVHGw&#xA;UtCvQSDS/RdgDv8AF6A+7MvDk4oz936HJ0uc5MGYn+Z/vK/3r2Z5YkZFd1VpG4xgkAswBai+J4qT&#xA;9GbG3oiQHivm3V7j/GX5YW08heIraTb7s0s9IyxJNT2zW5ZevGPc89nynxcIPKo/MkMq/Oe+ksvL&#xA;wnjkaM+hepVCRXnbMADSm1aZdrJVG/f9zm9qyqI87H2JQfPNxa/mr5gikm52sekq2nQsCF5rBFco&#xA;GpTqZH3PjTI+NWU+79ri/nTHVzs7cG3yB/W9XjkSSNZEPJHAZT4giozOBd8DYt4X/wA5JeZnW1t9&#xA;CCignt7pHPUMiTB/mD6id+3vmr7RymuH3PP9sZuIjGff94/S9P8Ay01m11TyPoskL1eK0jglRiC4&#xA;aAeizEAk0ZoyR7ZnaeYlAe52fZ2YTwQrpGvlt+hGXVwB510u3DirabqEjR99p7IA/icJPrA8j+ht&#xA;kf30f6svvineWuS7FXYq7FXYq7FXxje+Y7q88/XesLLxjur5wZDRAIZpGWhHb92TXObOQnIT5vEZ&#xA;JiUzK+ZJfYmmalbajafW7Zg8BkljRwQwb0ZWiLKVJBBKVGdFGQIsPZ4sgmLHLf7DTAPz81CGz8j1&#xA;YgyNOAsVQGKtG8bMB3CmQVzF10qg6ztk/ua6k/oKd6H5xW//AC9t/MPrRpIsKfWJJGUhWVgrNJ9k&#xA;KWX46dq5ZDNePicjFquLTifXqy7Mhz3VFaV3G5HzxV5hres2f/K3XsGkAmNhpkUS9eUi6oJmG3Q8&#xA;DXfMGcx41eQ/3Tps+SP5qutRH+zBZXrl3JceRtflmI5LBqcIPQcYmmiQf8CozY6U3OP9b9LseMnH&#xA;In+l95CE8q+TvKc/ljS55tHs3murC1NzIYI6yH043+M0+L4kB3yOoww8SWw5n72uGjwmIJjHcdya&#xA;aV5oTUdf1TR10+7t20vgHu5kVYJC4qPTYMSdjUbdMphl4pGNHZnj1PHklCiOHr0TvLXJdirsVeP/&#xA;AJG+UNV0a/8AN1tr2iwaSb+4gvbbSllt7lY7aV7j01pCWXirKyqSorT2zr/aXX480MEsWQz4YmJl&#xA;Uo3ICN8/tQA9C1DyD5J1Ek32h2Vwxkkm5SQIWEkz+pI4NKhnf4mI3Jzn8Xampx/TkmNgOZ5DYD4B&#xA;aeeSwyW3kzU4l4iCfUfNkiIvYRm+iXt2o2R9ocnFkh/wnH/0yB/S6ztI+ivKf+4k8Tlttc1KPS/L&#xA;Bt39fTSYjBRuSiSQysXAr0a4oNu/jnHkEgQ7vx+l5niySlw1yFD5p9+V+sSWtr5utJZikN7p10pi&#xA;G6tJDZ3Mg/4FEbLdLOuIHuP3FydHKoSiP4oH/cl7h5y/MCz0fS9I1q6QCD6/eJGd6VihuoYqjr8b&#xA;ca+G+bPNqBECR7z+l3mq1vDGM6/il9gkA8KufMtzf+c/J0dfV/Q76WkEtSw4stvIFO/ZywzVyyXO&#xA;PlX6HR48suOF/wAPDX2PUv8AnI7UJodI0q3gIYXEtzFMtd6m3oAf+Dr92Z3aB2AHn9ztO251GPvP&#xA;6P1vJdB8z32t/mFLqVwsYlvbSWCTgCF4W9kUQqCTQkQLXNfDKZZL7x+h1Uckpy4pc6/3r6Z0DWnu&#xA;LTy7I7rFDf6U1zJHUU9RVt2HxHf4VkfN3Ce0fMfqelwZrGM9JQv/AHP7XhH50fWfM/mqybTFknS7&#xA;t45rOMJ8RSWCB0BA6f3vfNVrAZz2/HJ5/tDJx5eKIu6r3EAo7/nHnXoLLXdQsdQmEMdpaSsJZWKh&#xA;R9YhTj8Ww+JumT0GQCRB6NvZGThyEy2jw/pDLdZ/Ma1s9Yttecg3EHlWaYqEYgXd09pNFGyj9k8k&#xA;6Hv1zInqAJcX9D7dnMnrwDx9fC/2UqI/Q9S0XVIdV0yG/h/u5eQ+lGKNT25KaZnQlxC3b4coyREg&#xA;jck2oDWdZs9Jto5rlqGaRYYE6c5GBYKDQ0+FSchOYiN2rNmGMWeuyOVldQ6EMrAFWBqCD0IOTbQW&#xA;8VU/rNvSY+ov+jmk+/2DxD0bw+FgcFseIb+T5B1LyvJaeSNK8wSQ0/SE8ASVQRu0l5zVqgAn90pH&#xA;+TTOfljqAl3kfpeKlpyMXGeVUP8AZfqD3b8hPMKah5LFpNLH69rdTJFHUCRo5aXHJhXc85H6eGbX&#xA;RZOKDvuxM14eEneMj+v9bzv80PM82teQdJkunEt3dXGpcXU1BCXsRRVG/wAIRuK79FzD1WTixi+e&#xA;/wB7rNVqjkxwMupn9/6vuQWla39S/JGS0dmZNQ/SEQjBH2kktSjkHqF3X25ZCE6wV33+hRm4MHD/&#xA;ADif949w0PVmuvyrtdSt7hnm/Q4b6x8Qf1o7ejtU0NRIp3zZwneKx/Nd7iyE6USvfg+0D9aJv9St&#xA;4vMWqWXI/WZNLgdKdgGvCCT/ALE4ZSHER5frZ5JgZJDqYD/fPmjUdZn078xTq9BI2nXzsqliC7R3&#xA;bTcSf8oGmagyrJxfjm8fPOY5b6xnf2vY/wAxdXFl+UOsuXYyz6re28LLvRl1eVqGvbjGRmznn8OH&#xA;F3S+6T0WqmY6Y95mf+mhP3B6D5O/5RHQ/wDtn2v/ACZXNhn/ALyXvLt8X0j3POfyua4m/NLzrdMJ&#xA;DbSyFYZJUiXkUloeHp7UA4mo6gqzbkV1OlvxZl0+gN6jIfxzeu5sXduxV2KvG/yu02fy75j84TQ2&#xA;d3HbJcBI9Dg06C0ZonuJhb3CfGpkVVR0VkAQr0qwYL2HbWYajDgBlHi4frM5S34Y8UeW3MEg+q/K&#xA;rjyTLzN+afnXSorf6h5RuNSuGk1WK7ihjuD6X1KWSO1fl6YVkmRFeoO4Pw9sx9H2JpspPHmjAVjq&#xA;zHfiAMhz5x5fem2HebvN9vZaJDp5gZrubUvM5girRmS7ur+1jLLSqkyysAvfiem2c57STEMsADZ8&#xA;LH/0yiHRdr5wDGPM+r5EGP6fsZN5O0mK1/PLXlkRhNFaO8LMesTJZojbbGvxZqsMKzH8dydLEDWy&#xA;HdH/AImvveT+avKuoeTLPS4539O+1lbx7iMggIpSS3UGtCGMdxuMwMuI46B5yt0+bTz08QTzI5fZ&#xA;91p7+Z2u2+qflfovBuUg1nUQvT7CSysvTwSVMs1M+LEP6xc3UZoywRr+dL77/SFP8lNLtJNM82ah&#xA;eqZJLCOw9IAjotw0vz2e1Xv88dHHaRPSvx9jDQwhKE5fza+/i/QEu83a1c635/ijXnM/6UuFij3Z&#xA;hxuHjVep6RogFMjlnxT+JcTUzlkzHr6vvlt9lMPgsLnTNGtde5FRey3+nrGQQQEto0Zwe4P1or9G&#xA;YoiYx4vePs/atEASHWx91/7p6ivm6zh/Ljy/Z3UrRzy6JrYD7BX9X1raOPrUtzUbU98z/GHhxB/m&#xA;yc0ZhHFCJ/mz+2wEZ/zjdf3d3ruqCcVVLUGN+4BeOMIf9VYRkuz5EyN9zZ2J/eEd0f1MC8+Wd35T&#xA;88anNpxdIJZ5g/qgcGDzM/p/CFHGiK33ZiZwccyQ4WpjwZZRHefvS2S7uJ9G1a4eVpJZ5rDTQxJ+&#xA;GNI2IFe6gWyrx+XhkSSQfMgONCRMCT0A+W//ABIfT/5Q3ZvPy40W5Y8nkjkMhpT4/WcNt/rVzd6Q&#xA;3jBes7MN4I/H7ynN5qUieZdNsYpVMcsVybmEUJqgiMZPcdTlhl6gPe3zyHxYxB6G/seD/m55wu7/&#xA;AE+6YSGOZJNK9EDb4JIdQZmpuAf3gU5qtVmJB+H++ee1mY5Qb/o/dP8AW9V07zZZ+Wvyq0TUrpPU&#xA;9HQ4Jo0LcA8kdrGUjLUbj6jEKDQ7nM6OUQxAn+b+h3UdRHFgiT/NH3J/baxBFLrUssxeOC7SOJak&#xA;ipsoJQidvi58ttt8uE6v3/oDbHMAZknlL/exLHPJev3GpeRNV1i6Ilu3hWa5A+EFzplu5HTuCMpw&#xA;zMsZkfxsHF02Yywzkdz/AMcikl7oEGo/k55e02/j+OG2aRRU/BPbWFy8Zqp34yIPnlZheGIP42Lj&#xA;5sQnpYg9x/3Mngnk/wA0ah5d1bT7mGSRFtb2Kae3RuBkiJX1Er/lovE+x981WHIYEe90eLMYZBMc&#xA;huyL8uzN5r8yeVdBnVEt9MmkleShJkAf626Nv+0LcqPnl2n/AHkox7v7f0N2lgZ5MePoCf0kpPqD&#xA;Na+XrrSmk/fWd1ftIm4ZfVfT03HgTER9Byqe0SPM/wC9a4n92InmCf0D9DM/K3nm90X8n9Vs1q91&#xA;dXN1b28jMWWOOGGyikVRTus7EeB33zKxZjHCR7/uDl49WYaYxHOZP+9/QUFrn5j6tp3nvUdU9Q3K&#xA;X2mRRek8jKoEtspUx02BX1GK7dz45CeoMchPfFqnrJ+IZc+Lb5xCQ3EF1qXkJtclC/WrjXLgyMoA&#xA;LGOyE7E17LvQe5yk3LHxf0v0Ncsd4uLncj+sq/mnzfqmr+T2jnYKkupNLMqDiGMr3N4PoreH8PDD&#xA;lymUPj+s/pZS1M8kfV3/AK/1l6/5a/KzVJ/K9lOmt+nNc28c9sxikf0hKYJlVucp5hPSNFPw1dts&#xA;3OfSnjlv/EfvdtDsuZjfHuff3g9/l9pepWmk6VZzzXFpZwW89wa3E0USI8hLFiXZQC3xMTv3OXCA&#xA;HIO4jihEkgAEorJNjsVdiqXaP5b8u6Isq6NpdppizlTOLOCK3Dla8efpqvKlTSuZGo1mbNXiTlOu&#xA;XESa+apjmOr5D8zNPd/mPLZxfvWj1q7UKDsldXuTQ+FfUB3zVdpEnUAeUP8Ach5DWC9QffX2voxL&#xA;KOL82jcRRkevosjXEm5Bk+swotSdh8EWw9vnmbX73/Nd8IVq7HXH+kfqYV/zkPpDahceV2AqI55U&#xA;YD7TetNbRhR/wVcxu0IXw+/9Th9swMjAf1v968t8k6HeeY73SvK0vwT8dUuAZwfTRbuxjMElDvX1&#xA;BXYe+YGGBmRD3/aHV6XH4hGMc9+fL6dvueq+UvKQ8p6B+YcdyCyQrK0SkqawQwyzwPUdysvfNhix&#xA;cEZ27HS6Y4oZwfwANmFfkjplzqn5h32q3UKfXEVL8qNlQXciylk5En7L7exzE0UTLISefP5uP2fA&#xA;zzWRy3+1kn5n/lnc/wCCkFtRf0Xez/VYOhll1O9to0oWJAX4nqSfDtl+p0x8PbofvIb9XoZDGD/M&#xA;MvjxGNPNfO1xDEbfy6lobR9Bhe0ZWJNXuJnnpvU9Zadcw8pH019O3zdNqyRKMSK4f129f/5x+8vz&#xA;WUevahJC8KS3P1e2V6gGNC0lQD8VCsqkN0ObDQwqy7zsXBwmcvcPsQ/53+SYLvT9S1CON1eJbW4i&#xA;cdHnkuvQkQ/885gR8sjrMFgn8c0dqacDimO4H3kmv0sA8heSp9VtNMMkQeC+8w2YmtpKqGhto7yS&#xA;5De/pxEUGYuHFxAec/1uBodKZgXuDKI+AErZd+QfmKGxlu9Ju5DDAqB41LHgGlmgSMld95Gu1UHw&#xA;GZGinRI/HT9bf2LqOEmMjzH6QPttHW3m+5b8yLC7ab1eWlWs80fEhSt2LNS4UcRy/eSU8PlhGU+K&#xA;PcP0N0NSfGEz/Nj9vDbxDzJIbq7jS3POOZHkB3APG4npt/su+a3LuaH45uj4gBxdN/tKbXn5galf&#xA;+Vk0K7uTPaWumJbW8fHiUkW5j4gmgrxiQCv45M6gmPD0EXJnqJyiIyPLYfO/uDJPJ35ianeaudMc&#xA;/u9Qk01asWNPqloYXYVY/HKqJyPtl+LUEmu+vuZ4NVOxH+cY3/mjh+1jH5d+aRpmq3T3tyyW89jc&#xA;21CWIZjaPHClB1q6RqK7DKNNlomz0/Q048nhyvpwyH2GvtfW1xpKTaG+lkhQ1s1sJAv2S0Zj5AfT&#xA;m/MPTT2MsV4+Dyr7HyZ+Z/lufTPNusPAtLS0miRWVeKgGMAcR04qVp92aDU4zGZLyOpgI5JQ6B6R&#xA;+Qfk5rDX5b28+3LYwajYIprxjnkubYc6jqVRiKHoR7jM3Q4eGV+V/eHY9kYDxCUufDY+0Ma13yBd&#xA;63+cep6XHSGDULieRp2qyBnWWdVJ34l/QbsaeGUzwGWYjvcTLpjk1BgNrmf0n7d2J+e9C1XQPMV3&#xA;5daSscJluhGlRH++RZZCnTbjCo/2OY+eBhIxaM2KWORhL+EoG/0ya60/RtQMjSveJLbsndUsVRag&#xA;+Hpn8MhKNiJ7/wBDVIGMTIn8B7x5d/LeHUfyd0LS4h6VzeONQln4kgNdxSJzdSdwIZQuxHQZtcen&#xA;vDEd+/zd9HQmemjEbEm799/op4dqmkXjajY2HKtu9nZXbcug9SwilbcdygGYWDBx5YQP0yMftp0v&#xA;CPEETz2+0Avrvyd/yiOh/wDbPtf+TK50ef8AvJe8vZ4vpHuTfKmbsVdirsVQupW15c2rRWd41jOS&#xA;CtwiJIQAdxxkDLvluGcYyuUeId24+5Xmfm78nPMuu29pb23muWwjs7jUZ0KJMzSpf3LXCxTH1wGE&#xA;atwrTcds6XQe0GHAZGWESMowHTbgjw2PT15+9FME/Kny9Be/nT5lgvpGuBYTahK0h29WVL9Vq9eX&#xA;2qluv05w06y6uciKH9lB0GDFGeqkJdLPyIfQq6ag1h9T5nm9utsY6bUR2cNX/Z5m8Pqt3nh+vi8q&#xA;QHmjTrO4gtrieISSw3NrFGW3os15Bzp8wgFchliD9n3hp1WOJAJ7x9sovNvyc09T5umvmDB4/L+n&#xA;xR/ylJjVj0/mg/XmHpI+sn+iHVdkw9fF/QH6P1M+8x6OV0HzdKXBOp2k3EdlVbP0t/pBOZWSHpl5&#xA;j9DstRirHlP84H/c0xr8q/JT6Zfp5iRgLXU9D0uNIx/Oluivv/zyB+n7qdNg4TxdDEOL2dpyCMnS&#xA;UI/cL+77WYecP+OTB/20tL/7qVvmTl5fEfeHO1f0D+vD/dxeQa55bt9Q81/mPJdx+qbCfSLqBAT/&#xA;AHjrVSQOo9NmqDmtnjueS+nC6bVYBKWUn+ExPz/Zb3mONI0WONQkaAKiKKAAbAADNs9CBSW+aLRr&#xA;vy7qVuis8j28hjRBVmdVLKoFDWrCmQyi4kNOphxY5DyQeg+XjbaRosE6rFNpUrzFAoILvHNExBHT&#xA;l65av9chjx0BfRrwYOGEAdjH9o/S+cfOKX3k7zzq9mqMYpZLP6tKajnEksFwh6cTvbAHala+GajK&#xA;DjmR5j8fY8tqQcGaQHd9mxDG7DV/MdrHZ+YYEkSytTBpct2yVjcxt64h5EEVCxqaDemY8ZyFS6cm&#xA;AM4jir49O8B6L+SflW3u76Rp2L/pPRL62lRmrw5yW+4puOSXNevfM3R4rPvif0Od2XhEpSif4oyH&#xA;3D7ix7yF+W+oz+b7b6ykZtrLXTpt9CHrV7VXunA23XjbEVrvlODTkz90q+W/6GrTaSZyREqoSo+8&#xA;Xf2AsSgtdU0O8s5XhkguZUmaJjyRg8TTWzcW8Udeo6EZREGJH473ByAw35fj9YK/VvLlxo8UK3Ss&#xA;l1HqV1ZyIfs/6OIRVTTf4mYE+2MsZjV/zv1MskOGJv6twf8AN/tfa+dK90wjzh5SkfQvMk9vGLme&#xA;6tr+WGFULzO8tl6SRqAKk+oG4gePjmLmw+mVef3Ovz6XaRG98R8/ppMPLfl+DS9blCji1vplpaoE&#xA;r6fprcXTqor/AC1yePHwy+A+8s9Ph4J13RA+2S258rCPzva65bwgpKQbpx1V47eeMPv/ADCYDb3x&#xA;OL1iQ/HNjLS1nGQD3/KQ/Sx3zZ+VcfmD8wl1e5YfUZtNltnop+GT05IfipsTSdGX4h9lspy6Xjyc&#xA;R5U0anQHJnv+ExPz5fpB+CWaD+V0iy+XkQJJZaDqWqvJM6qWljN0iRqw26oj1+WQhpuX9En73Hxa&#xA;Akwr6YSlfnuAPueqaVp1vpml2em21fq9lBHbQ8uvCJAi1pTei5nRjwgAdHd44CEREdBTyrzz+V9r&#xA;YfXNfs1M1va2YjjtgGZ40gsvq6mpPxKixK1TvucqxafhzRkOkoulz9mCE/EjuBW3uFfob8u/nZpF&#xA;n5atbeTT5mfTLONJgskZLCERxkrQkbhqgEj4vh9wNRrRxy26n71h21ACuH6fMeQ/HyevZkO9dirs&#xA;VdiqjeX1lZQme8uI7aAEAyzOsaVPQcmIGTx45TNRBJ8t1YZ5g/ObyPoFtZ3OozTxx30t5BbEQPvJ&#xA;YTm3mBrQL+8Wg5fM0zcaX2e1WeUowAuIiTv0nHiH2Itjn5RWOmP5r8wa3buJLjUNS1oFqFWWFLu3&#xA;aNWUgMpPMt8Wc6MBhllY33Hyp1Okxjx5S6kzH2xeuZe7dplVhRgGFQaEV3BqD9BxWmM+X9IttL82&#xA;anbWkXp2iaXpiRjanwT3+21PsqQPllGOAjM13D/fOJgxxhkMY8hGP3yTrXIRPouoQk0EttMhI7co&#xA;yMtmPSW7OLhIeRb0aGKHR7GGJQkUdvEkaKKBVVAAAPYYw+kJwgCAA7gi3RHFHUMAQwBFd1NQfoIr&#xA;kmZCAu9C0+dryVYxDc3ywpc3CD4nWBi0fLsePIivh8hkJQBvzap4ImzyMqv4Jhk252KuxV4L+fXl&#xA;u61LzXaejA/pTQW5ln3CfuvrbSbkhaqirsN/vzV67HxSH473me18Z8awOcR/vv0JLc+X5Yvyf1LT&#xA;mjWGSXzKslsp+yqzW0TQnatAY3H35Ucf7kj+l+hqltptx/lB9sR+t6V+THlyG00x9QkB+uxlralf&#xA;hCPDbMePT7Xop1GZukhQv8dHY9j6cRjxH6uX2R/Umtv5ZTS9eguoowh1HzBPfygEU4tpdxHUAH9p&#xA;viPepOTjj4ZX3yv7C5PgcEwe/IT/ALCTC/zJ8k3EdxpDB0PoXF/dBqEBRe6xCyL06gXw2/yTmPnw&#xA;1Xx+2X7XW9p6WVx36yPzmK/3TKfN3lPTfMP5g6HbXyK1naWN5dyQFQQ7epHHTfYHlNyr7ZdlxCeQ&#xA;A9zm6rTRy6iAPIRkffuP129AzLds7FXYq7FXYqh7GzW0gaJWLBpZpqnxnlaUj6C9MERTCEOEV5n7&#xA;TaIws0o84/8AKI65/wBs+6/5MtluD+8j7wwy/Sfcp+T7eA+UtEJjWv1C1P2R3iRv1iuOcDxJe8/e&#xA;xxRHCPcneVNrsVdirsVWTQQTxmOeNZYz1R1DKaexyUZGJsGiqSX3kLyTfktfaFY3LF5Zay28bn1J&#xA;25yuCRszueRPWuZmLtTU4/pyTHIbSPIbAfALSA/LXT47TSNTaOgS41vV3SNVCiNUv5YAgp2/c1/D&#xA;MKUCJEk2Tv8AMBxtNj4RI98pH9H6GW4HJdirqCte+KtMqupRwGVgQykVBB6gjFSHKqooRAFVQAqg&#xA;UAA6ADFQG8VdirsVdirsVSXzTor6vBZ2gJWI3DG4kG/FDbzJWlR1ZgPpyrLDioONqsPiADz/AEFv&#xA;zRoNrqXl7UbJbdWkmT1o0SiFriEK0JJFNw0SDfsKdMOSAMSF1OATxyjXP7xy+4KuhaXJp/6QVgoj&#xA;uLtpoFU1pH6caKD/AMBjjjV+9lgxGHF5y/UmTxROyM6KzRtyjJAJViCtV8DxYj6cspuIBSLzboMu&#xA;qW6PF8UkIULD/N/pVvPy5VH2fq3TvXKssOIfjvDi6vAcg26f8VE/oTdtPs21BNQMYN5HE9uk1TUR&#xA;SMrstK03aNTlnCLvq5Hhji4utUiMLN2KuxV2KuxV2KuxVKPOP/KI65/2z7r/AJMtluD+8j7wwy/S&#xA;fchfKOqaYnlHRud3AvCwtg9ZEFOMaRtXfajsFPvtkdRMeJLfqfva8eWPCNxyZDkG92KuxV2KuxV2&#xA;KvNbDVvzP0M32n2nkf8ASNoNR1G4tr79K2kHqxXd9Nco3pMGZfhlGxNcnklZ+A+5hjjQ+J+9Ff4z&#xA;/Nn/AMtz/wBzmz/5oyDN3+M/zZ/8tz/3ObP/AJoxVjnmj87fOmhC4tL3yja6bqIhV4WvNZtTCjTe&#xA;oIWloIxxrC7Ec1PFWNQBXFUV5f8Azl84eYpJ49E8mQX8lqsbXKQ63ZloxKCU5Dhsdjt1B2O+Kpz/&#xA;AIz/ADZ/8tz/ANzmz/5oxV3+M/zZ/wDLc/8Ac5s/+aMVYle/85A+Ylnisrfy1YR30lwkSpJrdm4Y&#xA;JdGC4ReIT4h6brWtENGYFeqqZeXPzp82+ZWuF0HybBqD2nE3Kw63Zlo+dQoYFAQaqQR2IocVTv8A&#xA;xn+bP/luf+5zZ/8ANGKqV35+/M+ztJry6/L5YbW2jaaeZ9asgqRoCzMx47AAVOKsTvv+chvMdtcW&#xA;7t5asYbQtKk6yaxbF5GRVKrCwCjkC/Ti3LcDcHFWQ6H+ann3XrI32jeR4dQsw7R/WLfXLJ05L1AI&#xA;XwIIPcEEbEYqmH+M/wA2f/Lc/wDc5s/+aMVQes/mZ+Ymi6bNqeq+QktLGDj6s8mtWYUF2CINkqSz&#xA;sFAHUmmKsWk/5yO1qPVpoJNB0xLe3QpPC2uWYlSYSBSxkPwemFNfs9Pj5ccVZTo/5mfmLrOmw6lp&#xA;fkJLuxuOXpTx61Z8TwYow3QEFWUqQehGKoz/ABn+bP8A5bn/ALnNn/zRiqV69+bnnfy/HBJrXkqG&#xA;wS5f0oGn1yyUM9K0HwfIV8SB1IxVj3/Qx+sW8s313y7YIryD6nENatUlCGGNuLqVYs5kZqUVf5Kc&#xA;lOKszi88fmpNEksX5eLJFIoeORNasmVlYVBBC0IIxVd/jP8ANn/y3P8A3ObP/mjFUk1386vNmgXA&#xA;ttZ8nW9lcNCbhYZdcsw5iDiPkFCEmrtxUdSenQ4qk9j/AM5Gaw49ObQNNlnd5GiMOu2aqYWnKQ9Q&#xA;9fg48mrQj4xROirI/MGu/mvq+iX2mN+XzQ/XIJIRKmt2qlS6lQfgCEgV3Fd+mSgQJAnoWvLDiiQ7&#xA;SPyM0u3sIhNqFxDdvDH9YMC26lJg0bkxSCIP8LR/AT03I6muLl0sTMkHmfLvdTHsaA/iI+Xl5eT1&#xA;DMh3TsVdirsVdirsVdirsVdirEPNP5TeRPNOrpq2u6e15exxiFGM0yp6YqGXgrBaOrFW23GKonyh&#xA;+W/lDyjPd3GhWZt575Y1u5GkkkLmOvxfGWozsxZyPtHc4qybFXYqwa7/ACU/Li71ddWn0xnvkuJr&#xA;tZPXmAE1zO9xO3EPT968pDD+Wi9BiqZeTfy18n+TpryfQbNrea/4/W5HlkmZypZq/vGahZnJanU4&#xA;qyfFVG9s7e9s57O4Xnb3MbwzJUiqSKVYVG42OKvBPze/KK9trzQj5J8pR63btPd3WrC4u5kMMqxR&#xA;JayIxuImHGjsOIPSgpXdVW8uL+dHli7udI0Lybaad5fiE13G0bib1pm9IRx0kuSwCRr6aqpXZe22&#xA;Ksz8i+aPzk1HX47XzZ5VttI0pknMl1BKshVkEZiFRM+xLup+HeldhXFWb+YdBsNf0a60fUPU+pXi&#xA;hJxFI0TlQwbjyUg0PGjDuNjtirC3/wCcfvyqkupbqXSGlnmNZWkuJ2DVIBFC9KNGPTP+R8OKsz8u&#xA;eXdJ8uaNBo+kxGGxtzI0aM7SNymkaaRmdyWJaSRmNfHFUyxVJPNPk7RPNEFtBq6yyQWspmjjimkh&#xA;UsVKfH6ZXlQNt4Hcb4qxJv8AnHj8pz6f+4h1aGhidLidWUihBqrjpIDIP8tmPfFXolrbQWttFbW6&#xA;COCBFjhjHRUQcVA+QGKqmKsY82flt5S82XMVzrlrJcTQRejCVnmiCgSLKrBY2UcldAQf7KKpEv8A&#xA;zj9+VCTiZdG4uuy0mmAChvsgc6U9P91/xj+Hpir0TFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq//2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:1B3F4ED02E70DF119B45AB3081709BE1</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:162AA55D6B70DF119B45AB3081709BE1</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource"/>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>220.000008</stDim:w>
            <stDim:h>90.000003</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d7e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -456.749 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 456.749 li
954.72 456.749 li
954.72 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
0 0 mo
954.72 0 li
954.72 456.749 li
0 456.749 li
0 0 li
cp
clp
-0.279785 0 mo
-0.279785 456.833 li
955.72 456.833 li
955.72 0 li
-0.279785 0 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
grestore
123.97 406.499 mo
123.97 34.25 li
864.804 34.25 li
864.804 406.499 li
123.97 406.499 li
cp
false sop
0 0 0 0 cmyk
ef
2 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
123.97 406.499 mo
123.97 34.25 li
864.804 34.25 li
864.804 406.499 li
123.97 406.499 li
@
123.97 34.25 mo
864.804 34.25 li
123.97 406.499 mo
864.804 406.499 li
0 0 0 1 cmyk
@
864.804 406.499 mo
864.804 34.25 li
123.97 406.499 mo
123.97 34.25 li
0.882353 0.768627 0 0 cmyk
@
123.97 406.499 mo
864.804 406.499 li
0 0 0 1 cmyk
@
123.97 406.499 mo
123.97 34.25 li
0.882353 0.768627 0 0 cmyk
@
236.97 406.499 mo
236.97 399.083 li
0 0 0 1 cmyk
@
351.804 406.499 mo
351.804 399.083 li
@
466.554 406.499 mo
466.554 399.083 li
@
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 48 /zero putdup 49 /one putdup 53 /five putdef/FontBBox {-951 -481 1446 1122} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings4 dict dup begin/.notdef <1C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7CA97DB1343CA> |-/zero <1C60D8A8C9B7EF322BB70D1045F9F84CF5A9E636DA48B0B84345CFB17CDCD64AA529BD23C358113A6F12A7F927F67801E7716DEDB8FBB50D28956279879C3943A67386E5304D963AB3E064E7022317006AA79A8777799C5D39502A7CB330EAEEC28837821C5437B109C741C1D7BCD8EEC785ED017624EE945A52A677F5B0E3B0C4781A3901> |-/one <1C60D8A8C9B7EF322B8DEEDAE6F72EF3709E16C7A593AF17F17D72A3907C7468090579C66DE0263BFE> |-/five <1C60D8A8C9B7EF3277A9C7C54B35CB479E4C110330EAD203F40A20826414A4CC0E90EF4AAF68DCFEF4ABE6CFF07A7C5FBDADC90A7F87ECB382B602F56451722980F3A3AC74E582BA9C9CEC3027EC489F453112D8FBBD217B656538AC90D034F616E885784C813B1555F6DEF92ECF082193A9672305F8A984DE35F68D1502A8C10EB08C528E24E38813C68D1F86D01BCA9E> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/JCFGYG+Helvetica /Helvetica findfont ct_VMDictPut/JCFGYG+Helvetica*1 [48{/.notdef}rp /zero /one 3{/.notdef}rp /five 202{/.notdef}rp]JCFGYG+Helvetica nfJCFGYG+Helvetica*1 [16 0 0 -16 0 0 ]msf442.808 424.176 mo(15000)[8.89844 8.89844 8.89844 8.89844 0 ]xsh581.387 406.499 mo
581.387 399.083 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginJCFGYG+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B7EF327699F81B0CD59DC4BD38D48AF11B5B9C1D7787A22BDC09D7BCED9A76C2312055A28AC829584109043EE366AF8632D6D62E9BBD6A4357093750D4015EA59C9F538C44C55AD0DB14FEE0C7267845EB7EFBD514024AA1A03530A8941AD7B5F508335B2FDCA37E6B0627146A6F144DB9DD7DCA6BE86290FB46DD6A2918F4C2C2BDEECA159D78> |-systemdict /gcheck known {setglobal} if end {end} ifendJCFGYG+Helvetica /Encoding getdup 50 /two putpop%ADOEndSubsetFont
/JCFGYG+Helvetica*1 [48{/.notdef}rp /zero /one /two 2{/.notdef}rp /five 202{/.notdef}rp]JCFGYG+Helvetica nfJCFGYG+Helvetica*1 [16 0 0 -16 0 0 ]msf559.636 424.176 mo(20000)[8.89844 8.89844 8.89844 8.89844 0 ]xsh696.137 406.499 mo
696.137 399.083 li
@
JCFGYG+Helvetica*1 [16 0 0 -16 0 0 ]msf673.386 424.176 mo(25000)[8.89844 8.89844 8.89844 8.89844 0 ]xsh810.887 34.25 mo
810.887 41.5835 li
810.887 406.499 mo
810.887 399.083 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginJCFGYG+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7EF322B8D6E3793F9C339FF2D01F55F75395A69A42725328E1B8E66EAFF6BAC335B6E345906CE7152DDCE6F991DD2E99A50D14EF5FE716864AD89B92005EB56184F6465E294CACBF73EC4E77A27D9ACFF3348FE551D23745FD8C1F5363E223D2FE146B2E36748D97805004E8C37168D3D6622BBF76ADD739801325A4BB7457A49C531154E36C58F381AB30F164CAE6510100AF5FE6405CBE42D3AEC01131A86CADB27645F055DEC901ADBC964660F336098380F7A314362D92502B680C534E053458ABD592A4A4D87F9589307764B161F9884> |-systemdict /gcheck known {setglobal} if end {end} ifendJCFGYG+Helvetica /Encoding getdup 51 /three putpop%ADOEndSubsetFont
/JCFGYG+Helvetica*1 [48{/.notdef}rp /zero /one /two /three /.notdef /five 202{/.notdef}rp]JCFGYG+Helvetica nfJCFGYG+Helvetica*1 [16 0 0 -16 0 0 ]msf789.136 424.176 mo(30000)[8.89844 8.89844 8.89844 8.89844 0 ]xsh123.97 356.833 mo
131.304 356.833 li
0.882353 0.768627 0 0 cmyk
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginJCFGYG+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/minus <1C60D8A8C9B7F374C6243061E982D378A14DF0A305> |-/period <1C60D8A8C9B854D0E3687C43D46768E11610> |-/eight <1C60D8A8C9B7EF322BB1E6B7658B273FB04B6EA2FDD83BE014315CEA310C9045661E4654F5FAA18E921C35D5D5266AB0AB839D962ABE974A291E63893114CACA79253F9F2FA5DBD832A15E9A146C3FAF70E186074467C5FF9BFF3446DA2979E197C33ECF2E6672D0ABB4DD84DADA6F0875D027C1012708E022D3B91B078729D3EB37FF9AB4379F6AE8761C6A64E65D5782F4A15C32B5788322C1277C7EEACA49FCEF1A946497EBAE7710FA41A32E95C02F9037E734AB7501DA6FA4D1255B1B5E2A30AD357C72139096879BB9225AA54D6163D99B65B907C933335C31755E7599F49EDF67E30B707AA1BB3DFB155476D77FA4345C2EDAF4F74461> |-/nine <1C60D8A8C9B7EF326B464DF43714564059769E71FFFC685FC18F48C77D53AC88FCBBC12F494C4F63EED0BC4E888DFF584BE7D2D816586B9A4264CD850BFF6D2740D48815051A0D66B2C6D52B7F71CA6A6822ACB78F611F031D0F31B29F8F7C82DE8795DAD0A78F20A0C158D57307DA2BB022E8173A55705FD29D68A57A980A4A8A50AA38F194766F67D892E4FFF95162BD634B3243B2EC97981B62535F84C02C407EE586AAFD00BF4926CA361322725073A4D1FB7F2047C32550A5DE15> |-systemdict /gcheck known {setglobal} if end {end} ifendJCFGYG+Helvetica /Encoding getdup 32 /minus putdup 46 /period putdup 56 /eight putdup 57 /nine putpop%ADOEndSubsetFont
/JCFGYG+Helvetica*1 [32{/.notdef}rp /minus 13{/.notdef}rp /period /.notdef /zero /one /two /three /.notdef /five 2{/.notdef}rp /eight /nine 198{/.notdef}rp]JCFGYG+Helvetica nfJCFGYG+Helvetica*1 [16 0 0 -16 0 0 ]msf80.6357 362.754 mo( 1.98)[9.34375 8.89844 4.44531 8.89844 0 ]xsh123.97 307.167 mo
131.304 307.167 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginJCFGYG+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/six <1C60D8A8C9B7EF322BACEC3D6ABEF2D493EDC493AA22ED42125C47DF2396DE843240A24151C3116F0DCEE068EC75B404A70B0E3A92C2307D093030C4F08B5CC0A75F4F4D7C70C5CD3B07E718D5DA84710CE02FF093BE8B5ED477F329DF9AC8554D46651B2A99890C549B5152AB0899BB31DC610CEE59FE1F4C3BE037BFF7F7AE7EDC6D596E9E9398287209A7C703150F7EA84F1C65DCD68CCC47A3B7F9EF77F610D53784F89B61AB4160F9D214F618A6C0032B66C3DB575FE49E073B7AB1C1C6CA> |-systemdict /gcheck known {setglobal} if end {end} ifendJCFGYG+Helvetica /Encoding getdup 54 /six putpop%ADOEndSubsetFont
/JCFGYG+Helvetica*1 [32{/.notdef}rp /minus 13{/.notdef}rp /period /.notdef /zero /one /two /three /.notdef /five /six /.notdef /eight /nine 198{/.notdef}rp]JCFGYG+Helvetica nfJCFGYG+Helvetica*1 [16 0 0 -16 0 0 ]msf80.6357 313.082 mo( 1.96)[9.34375 8.89844 4.44531 8.89844 0 ]xsh864.804 257.583 mo
857.387 257.583 li
123.97 257.583 mo
131.304 257.583 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginJCFGYG+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7EF32298E3DD46F18108137336D1A5C627A90D059BB18158BA2A55FF5DE20CE460964DAF45C08A7D9820A784F4A44F7E1> |-systemdict /gcheck known {setglobal} if end {end} ifendJCFGYG+Helvetica /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/JCFGYG+Helvetica*1 [32{/.notdef}rp /minus 13{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /.notdef /eight /nine 198{/.notdef}rp]JCFGYG+Helvetica nfJCFGYG+Helvetica*1 [16 0 0 -16 0 0 ]msf80.6357 263.504 mo( 1.94)[9.34375 8.89844 4.44531 8.89844 0 ]xsh123.97 207.917 mo
131.304 207.917 li
@
JCFGYG+Helvetica*1 [16 0 0 -16 0 0 ]msf80.6357 213.84 mo( 1.92)[9.34375 8.89844 4.44531 8.89844 0 ]xsh123.97 158.333 mo
131.304 158.333 li
@
JCFGYG+Helvetica*1 [16 0 0 -16 0 0 ]msf89.4717 164.254 mo( 1.9)[9.34375 8.89844 4.44531 0 ]xsh123.97 108.667 mo
131.304 108.667 li
@
JCFGYG+Helvetica*1 [16 0 0 -16 0 0 ]msf80.6357 114.582 mo( 1.88)[9.34375 8.89844 4.44531 8.89844 0 ]xsh864.804 59 mo
857.387 59 li
123.97 59 mo
131.304 59 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginJCFGYG+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B854D00D> |-/x <1C60D8A8C9B7A73DB974843DC052273B2236A049EB6E5FE1C55CD985D3062CB5B3D8A046808C9F7D76A5170CE8699B434328F999D97554357E6BC34F0469> |-systemdict /gcheck known {setglobal} if end {end} ifendJCFGYG+Helvetica /Encoding getdup 33 /space putdup 120 /x putpop%ADOEndSubsetFont
/JCFGYG+Helvetica*1 [32{/.notdef}rp /minus /space 12{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /.notdef /eight /nine 62{/.notdef}rp /x 135{/.notdef}rp]JCFGYG+Helvetica nfJCFGYG+Helvetica*1 [16 0 0 -16 0 0 ]msf80.6357 64.918 mo( 1.86)[9.34375 8.89844 4.44531 8.89844 0 ]xsh123.972 29.7539 mo(x!10)[8 4.44531 8.89844 0 ]xshJCFGYG+Helvetica*1 [10.6667 0 0 -10.6667 0 0 ]msf154.136 19.8164 mo(4)sh123.97 34.25 mo
864.804 34.25 li
123.97 406.499 mo
864.804 406.499 li
0 0 0 1 cmyk
@
864.804 406.499 mo
864.804 34.25 li
123.97 406.499 mo
123.97 34.25 li
0.882353 0.768627 0 0 cmyk
@
gsave
123.97 406.583 mo
864.887 406.583 li
864.887 34.25 li
123.97 34.25 li
123.97 406.583 li
cp
clp
123.97 328.667 mo
124.054 310.499 li
124.137 293.333 li
124.304 278.833 li
124.387 254.749 li
124.47 268.583 li
124.637 246.249 li
124.72 273.583 li
124.887 254.417 li
124.97 237.833 li
125.053 242.833 li
125.22 225.167 li
125.303 217.333 li
125.387 218.167 li
125.553 211.667 li
125.637 213.75 li
125.803 211.917 li
125.887 213.5 li
125.97 207.25 li
126.137 206.167 li
126.22 203.333 li
126.303 208.583 li
126.47 218.833 li
126.553 211.917 li
126.72 207.75 li
126.803 224.583 li
126.886 227 li
127.053 215.917 li
127.136 203.917 li
127.22 204 li
127.386 205.833 li
127.47 176.25 li
127.636 194.583 li
127.72 201.917 li
127.803 190.25 li
127.97 205.667 li
128.053 192.667 li
128.136 186.667 li
128.303 191.333 li
128.386 182.917 li
128.553 176.167 li
128.636 187.167 li
128.72 176.667 li
128.886 186.833 li
128.969 193.167 li
129.053 192.25 li
129.219 180.917 li
129.303 186.75 li
129.469 177.917 li
129.553 165.667 li
129.636 157.917 li
129.803 166.083 li
129.886 177 li
130.053 180.083 li
130.136 184.917 li
130.219 170.5 li
130.386 175.5 li
130.469 147.333 li
130.553 169.75 li
130.719 167 li
130.803 151.667 li
130.969 140.333 li
131.052 138.167 li
131.136 148.583 li
131.302 163.5 li
131.386 145.5 li
131.469 152.167 li
131.636 136.083 li
131.719 143.75 li
131.886 156.083 li
131.969 157.75 li
132.052 143.583 li
132.219 152.083 li
132.302 183.917 li
132.386 166.25 li
132.552 156.917 li
132.636 147.417 li
132.802 155.5 li
132.886 143.083 li
132.969 159.083 li
133.135 164.167 li
133.219 136.167 li
133.302 128.917 li
133.469 141.333 li
133.552 155.667 li
133.719 151.25 li
133.802 171.25 li
133.885 146.083 li
134.052 143.917 li
134.135 148.167 li
134.219 148.25 li
134.385 136.833 li
134.469 126.583 li
134.635 128.167 li
134.719 131.5 li
134.802 132.333 li
134.969 120.833 li
135.052 145.5 li
135.135 149.333 li
135.302 132.25 li
135.385 127 li
135.552 142.917 li
135.635 158.75 li
135.718 150.5 li
135.885 152.333 li
135.968 154.333 li
136.135 143.333 li
136.218 141.833 li
136.302 171.833 li
136.468 180.917 li
136.552 176 li
136.635 149.833 li
136.802 169.917 li
136.885 150.417 li
137.052 155 li
137.135 155.667 li
137.218 177.833 li
137.385 154.417 li
137.468 147.667 li
137.551 149 li
137.718 153.083 li
137.801 135.5 li
137.968 134.167 li
138.051 138.333 li
138.135 135.25 li
138.301 143.583 li
138.385 140.75 li
138.468 130.667 li
138.635 146 li
138.718 137.417 li
138.885 129.75 li
138.968 133.917 li
139.051 138.333 li
139.218 140.167 li
139.301 136.583 li
139.384 139.333 li
139.551 142.833 li
139.634 149.417 li
139.801 144.417 li
139.884 141.833 li
139.968 136.833 li
140.134 132.75 li
140.218 142.75 li
140.301 136.25 li
140.468 139.333 li
140.551 130.917 li
140.718 129.917 li
140.801 125.167 li
140.884 133.25 li
141.051 118.5 li
141.134 122.417 li
141.218 138.917 li
141.384 126 li
141.467 124.667 li
141.634 133.75 li
141.717 124.5 li
141.801 131.917 li
141.967 115.833 li
142.051 124.5 li
142.217 133.417 li
142.301 139.167 li
142.384 148.583 li
142.551 135.25 li
142.634 117.75 li
142.717 137.25 li
142.884 135.25 li
142.967 138.25 li
143.134 139.833 li
143.217 157.75 li
143.301 120.5 li
143.467 131.5 li
143.55 109.333 li
143.634 120.667 li
143.8 124.333 li
143.884 126.917 li
144.05 130.167 li
144.054 130.167 mo
144.137 141.833 li
144.22 137.417 li
144.387 149.25 li
144.47 150.583 li
144.554 149.25 li
144.72 151.667 li
144.804 146.75 li
144.97 163.25 li
145.053 145.25 li
145.137 130.083 li
145.303 143.667 li
145.387 135.833 li
145.47 139 li
145.637 133.25 li
145.72 126.75 li
145.887 119.083 li
145.97 121.417 li
146.053 132.583 li
146.22 122.417 li
146.303 128.833 li
146.387 124.417 li
146.553 151.417 li
146.637 136.25 li
146.803 151.167 li
146.887 147.667 li
146.97 129.583 li
147.136 138.583 li
147.22 125.75 li
147.303 147.75 li
147.47 114.083 li
147.553 105.917 li
147.72 130.667 li
147.803 115.75 li
147.886 115.583 li
148.053 138.333 li
148.136 134.167 li
148.303 122.417 li
148.386 114.417 li
148.47 117.417 li
148.636 123.333 li
148.72 108.917 li
148.803 104.083 li
148.97 119.833 li
149.053 128.833 li
149.219 118.083 li
149.303 126.417 li
149.386 138.667 li
149.553 125.583 li
149.636 118.167 li
149.719 141 li
149.886 128.417 li
149.969 128.25 li
150.136 119.25 li
150.219 127 li
150.303 126.167 li
150.469 147.417 li
150.553 137.333 li
150.636 142.083 li
150.803 105.5 li
150.886 113.583 li
151.053 112.333 li
151.136 120.083 li
151.219 116.667 li
151.386 113.417 li
151.469 116.583 li
151.552 108.25 li
151.719 106.25 li
151.802 95.0835 li
151.969 99.0835 li
152.052 108.75 li
152.136 103.083 li
152.302 89.8335 li
152.386 105.75 li
152.469 103.167 li
152.636 80 li
152.719 101.667 li
152.886 100.667 li
152.969 94.8335 li
153.052 107.417 li
153.219 106.25 li
153.302 88.6665 li
153.469 97.5835 li
153.552 103.333 li
153.635 105.417 li
153.802 128.75 li
153.885 108 li
153.969 128.833 li
154.135 137.833 li
154.219 132.083 li
154.385 155.667 li
154.469 142.917 li
154.552 156.5 li
154.719 133.333 li
154.802 146.75 li
154.885 96.9165 li
155.052 111.667 li
155.135 122.333 li
155.302 111.333 li
155.385 126.333 li
155.468 115.333 li
155.635 102.917 li
155.718 93.4165 li
155.802 114.667 li
155.968 126.167 li
156.052 119.833 li
156.218 125.667 li
156.302 113.75 li
156.385 113.833 li
156.552 112.167 li
156.635 110.167 li
156.718 117.833 li
156.885 112.917 li
156.968 132 li
157.135 123.25 li
157.218 123.583 li
157.302 93.1665 li
157.468 119.5 li
157.551 95.5835 li
157.635 95.5835 li
157.801 97.4165 li
157.885 135.333 li
158.051 119.5 li
158.135 130.417 li
158.218 88.1665 li
158.385 106.5 li
158.468 113.167 li
158.551 121.083 li
158.718 116.417 li
158.801 134.25 li
158.968 140.167 li
159.051 146 li
159.135 113.417 li
159.301 129.417 li
159.385 130.167 li
159.551 103.667 li
159.635 109.5 li
159.718 117 li
159.885 93.5835 li
159.968 132.25 li
160.051 135.167 li
160.218 137.417 li
160.301 146.75 li
160.468 121.417 li
160.551 126 li
160.635 135.25 li
160.801 113 li
160.885 126.5 li
160.968 122.917 li
161.135 122.75 li
161.218 120 li
161.385 128.25 li
161.468 121.583 li
161.551 146.75 li
161.718 106.083 li
161.801 111.75 li
161.885 107.25 li
162.051 126 li
162.135 128.75 li
162.301 108 li
162.385 108.333 li
162.468 111.417 li
162.635 109.75 li
162.718 107.417 li
162.801 106.917 li
162.968 96.25 li
163.051 126.083 li
163.218 136.583 li
163.301 107.083 li
163.384 97.9165 li
163.551 133.833 li
163.634 137.667 li
163.718 131.75 li
163.884 149.917 li
163.968 126.167 li
164.134 141.917 li
164.218 154.25 li
164.301 137.917 li
164.468 135.083 li
164.551 139.417 li
164.634 129.417 li
164.801 138.167 li
164.884 125.833 li
165.051 136.75 li
165.134 144.833 li
165.218 130.583 li
165.384 119.417 li
165.468 126.75 li
165.634 120.917 li
165.718 111.5 li
165.801 140.25 li
165.968 129.417 li
166.051 128.917 li
166.134 104.5 li
166.301 125.083 li
166.384 115.333 li
166.551 137.167 li
166.634 124.333 li
166.718 119.583 li
166.884 145.5 li
166.968 120.583 li
167.051 145.75 li
167.218 123.25 li
167.301 109.333 li
167.468 119.083 li
167.551 108.083 li
167.634 116.833 li
167.801 102.083 li
167.884 144.583 li
167.967 122.167 li
168.134 122.833 li
168.217 129.5 li
168.384 126.5 li
168.467 121.75 li
168.551 122.333 li
168.717 127 li
168.801 132.167 li
168.884 131.583 li
169.051 124.667 li
169.134 131.75 li
169.301 141.417 li
169.384 147.917 li
169.467 147.417 li
169.634 150 li
169.717 148.75 li
169.801 149.167 li
169.967 151.583 li
170.051 131 li
170.217 121.833 li
170.301 155.833 li
170.384 150.25 li
170.551 153.75 li
170.634 138.417 li
170.717 143.417 li
170.884 135.083 li
170.967 129.75 li
171.134 115.167 li
171.217 135.083 li
171.301 141.333 li
171.467 115.5 li
171.551 139 li
171.717 143.167 li
171.801 118.083 li
171.884 120.25 li
172.051 140.417 li
172.134 134.083 li
172.217 148.75 li
172.384 139.417 li
172.467 116.333 li
172.634 120 li
172.717 138.25 li
172.801 132.667 li
172.967 116.75 li
173.051 128.333 li
173.134 118.583 li
173.301 127.667 li
173.384 137.167 li
173.551 123 li
173.634 135.25 li
173.717 119.583 li
173.884 128.833 li
173.967 122.667 li
174.05 127.5 li
174.217 120 li
174.3 131.583 li
174.467 108.583 li
174.55 125.917 li
174.634 135.417 li
174.8 123.5 li
174.884 108.833 li
174.967 117.167 li
175.134 132.417 li
175.217 119.5 li
175.384 120.333 li
175.467 113.25 li
175.55 136.667 li
175.717 136 li
175.8 126.083 li
175.884 107.583 li
176.05 143.5 li
176.134 140.583 li
176.3 132.333 li
176.384 128.25 li
176.467 154.833 li
176.634 122.083 li
176.717 148.167 li
176.884 143.833 li
176.967 139.083 li
177.05 120.833 li
177.217 121.417 li
177.3 139 li
177.384 150.917 li
177.55 133.417 li
177.634 113.583 li
177.8 110.5 li
177.884 111 li
177.967 126.083 li
178.134 129.833 li
178.217 132.917 li
178.3 126.833 li
178.304 126.833 mo
178.47 113.75 li
178.554 119.25 li
178.72 131.167 li
178.804 132.25 li
178.887 120.917 li
179.054 95.6665 li
179.137 118.917 li
179.22 134.083 li
179.387 136.167 li
179.47 128.917 li
179.637 134.667 li
179.72 136.167 li
179.804 147.667 li
179.97 144.333 li
180.054 134.333 li
180.137 148.917 li
180.304 137.583 li
180.387 126.583 li
180.553 148.667 li
180.637 143.417 li
180.72 160.917 li
180.887 144.25 li
180.97 133.083 li
181.053 106.917 li
181.22 104.75 li
181.303 95.6665 li
181.47 124.25 li
181.553 91.5835 li
181.637 102.333 li
181.803 106.917 li
181.887 115.5 li
181.97 99.8335 li
182.137 109.583 li
182.22 134.583 li
182.387 114.417 li
182.47 123.667 li
182.553 124.167 li
182.72 143.75 li
182.803 133.667 li
182.97 113.75 li
183.053 90 li
183.137 76.6665 li
183.303 83.5835 li
183.387 105.25 li
183.47 129.833 li
183.637 113.583 li
183.72 115.167 li
183.887 130.083 li
183.97 135.583 li
184.053 117.917 li
184.22 144.083 li
184.303 132.583 li
184.387 136.667 li
184.553 126.333 li
184.637 146 li
184.803 125.5 li
184.887 142.833 li
184.97 144.583 li
185.137 137.917 li
185.22 155.083 li
185.303 147.5 li
185.47 146.833 li
185.553 149.583 li
185.72 136.5 li
185.803 152.917 li
185.886 116.833 li
186.053 156.583 li
186.136 146.333 li
186.22 151.833 li
186.386 132.333 li
186.47 167.833 li
186.636 154 li
186.72 155.25 li
186.803 167.917 li
186.97 172.333 li
187.053 167.25 li
187.136 162.083 li
187.303 147 li
187.386 158.167 li
187.553 124.417 li
187.636 136.583 li
187.72 126.083 li
187.886 126.5 li
187.97 104.333 li
188.053 93.8335 li
188.22 98.75 li
188.303 108.5 li
188.47 111.167 li
188.553 119.5 li
188.636 113.917 li
188.803 113.25 li
188.886 111.417 li
189.053 120.833 li
189.136 127.417 li
189.22 134.25 li
189.386 119.667 li
189.47 119.5 li
189.553 123.333 li
189.72 141.417 li
189.803 145.5 li
189.97 140.167 li
190.053 150.833 li
190.136 134.25 li
190.303 123.5 li
190.386 124.083 li
190.47 142.75 li
190.636 131.333 li
190.72 132.417 li
190.886 116.667 li
190.97 134.833 li
191.053 152.25 li
191.22 145.667 li
191.303 134.667 li
191.386 111.583 li
191.553 137.333 li
191.636 112.083 li
191.803 116.5 li
191.886 118.167 li
191.969 130.583 li
192.136 125.167 li
192.219 130.75 li
192.303 130.833 li
192.469 138.75 li
192.553 111.417 li
192.719 116.833 li
192.803 99 li
192.886 112.667 li
193.053 125.25 li
193.136 118 li
193.219 129.917 li
193.386 104.25 li
193.469 126.5 li
193.636 120.5 li
193.719 134.75 li
193.803 130.75 li
193.969 128.167 li
194.053 143.333 li
194.136 146.083 li
194.303 126.417 li
194.386 128 li
194.553 127.667 li
194.636 141.167 li
194.719 142.833 li
194.886 126 li
194.969 112.5 li
195.136 128.917 li
195.219 139.75 li
195.303 149.083 li
195.469 127.75 li
195.553 129.667 li
195.636 129.75 li
195.803 124 li
195.886 123.917 li
196.053 128.167 li
196.136 133.417 li
196.219 139.917 li
196.386 135.5 li
196.469 153.333 li
196.552 135.5 li
196.719 145.5 li
196.802 153.75 li
196.969 148.083 li
197.052 133.583 li
197.136 132.417 li
197.302 156.583 li
197.386 142.5 li
197.469 145.167 li
197.636 139.25 li
197.719 132.5 li
197.886 120.75 li
197.969 147.5 li
198.052 134.25 li
198.219 142.833 li
198.302 110.25 li
198.386 118.333 li
198.552 120.25 li
198.636 118.833 li
198.802 128.25 li
198.886 107.833 li
198.969 130.5 li
199.136 175.667 li
199.219 152.5 li
199.302 128.333 li
199.469 148.167 li
199.552 156.75 li
199.719 156.5 li
199.802 122.583 li
199.886 135.917 li
200.052 177.333 li
200.136 147.25 li
200.219 147 li
200.386 158.75 li
200.469 130.25 li
200.636 146.5 li
200.719 137.167 li
200.802 140.167 li
200.969 141.5 li
201.052 155.583 li
201.219 119.167 li
201.302 141.083 li
201.386 129.333 li
201.552 121.417 li
201.636 117.25 li
201.719 123.75 li
201.886 134.333 li
201.969 128.833 li
202.136 133.25 li
202.219 138 li
202.302 125.667 li
202.469 128.167 li
202.552 119.083 li
202.635 141.5 li
202.802 124.75 li
202.885 135.5 li
203.052 136.25 li
203.135 135.667 li
203.219 143.333 li
203.385 110.333 li
203.469 128.5 li
203.552 131.75 li
203.719 108.5 li
203.802 119.25 li
203.969 115.75 li
204.052 119.083 li
204.135 134.667 li
204.302 137.167 li
204.385 128.583 li
204.469 131.917 li
204.635 126.833 li
204.719 94.4165 li
204.885 104.667 li
204.969 105.917 li
205.052 118.167 li
205.219 97.0835 li
205.302 112.583 li
205.385 126.667 li
205.552 124.417 li
205.635 113.917 li
205.802 129.75 li
205.885 116.75 li
205.969 119.083 li
206.135 117.333 li
206.219 115.333 li
206.385 121.417 li
206.469 106.5 li
206.552 105 li
206.719 114.167 li
206.802 108.833 li
206.885 113.083 li
207.052 114.333 li
207.135 111.167 li
207.302 126 li
207.385 154.167 li
207.468 132.75 li
207.635 134 li
207.718 131.333 li
207.802 145.25 li
207.968 123 li
208.052 131 li
208.218 107.583 li
208.302 104.583 li
208.385 117.083 li
208.552 113.167 li
208.635 131.333 li
208.718 121.917 li
208.885 159.417 li
208.968 136.333 li
209.135 130.833 li
209.218 138.5 li
209.302 130.833 li
209.468 128.917 li
209.552 126 li
209.635 126.583 li
209.802 118.167 li
209.885 127.667 li
210.052 121.583 li
210.135 124.5 li
210.218 120.167 li
210.385 117 li
210.468 126.667 li
210.552 109.5 li
210.718 130.25 li
210.802 135.333 li
210.968 126.167 li
211.052 126.417 li
211.135 116.5 li
211.302 130.083 li
211.385 139 li
211.468 135.75 li
211.635 126.25 li
211.718 105.75 li
211.885 142.417 li
211.968 137.083 li
212.052 126.25 li
212.218 127 li
212.302 135.083 li
212.468 115.25 li
212.552 117.667 li
212.635 144.583 li
212.637 144.583 mo
212.804 133.833 li
212.887 149.333 li
212.97 103.667 li
213.137 133.667 li
213.22 117.417 li
213.387 117.083 li
213.47 123.583 li
213.554 117.833 li
213.72 118.25 li
213.804 115.833 li
213.887 113.5 li
214.054 132.083 li
214.137 141.583 li
214.304 137.083 li
214.387 120.583 li
214.47 127.083 li
214.637 134.583 li
214.72 131.25 li
214.804 128.5 li
214.97 127.75 li
215.053 139.75 li
215.22 128.167 li
215.303 127.083 li
215.387 128.917 li
215.553 149 li
215.637 156.75 li
215.72 116.917 li
215.887 127 li
215.97 133.083 li
216.137 111.667 li
216.22 113.25 li
216.303 112.167 li
216.47 130.75 li
216.553 132.75 li
216.637 120.667 li
216.803 141.917 li
216.887 143.75 li
217.053 148.083 li
217.137 141.333 li
217.22 144.917 li
217.387 107.25 li
217.47 139.417 li
217.553 117.75 li
217.72 115.667 li
217.803 130.5 li
217.97 134.583 li
218.053 143.333 li
218.137 136.25 li
218.303 136.417 li
218.387 140.333 li
218.553 126.083 li
218.637 127.75 li
218.72 123.5 li
218.887 113.583 li
218.97 131.083 li
219.053 117.583 li
219.22 125.833 li
219.303 125.917 li
219.47 137.5 li
219.553 131.833 li
219.637 137.917 li
219.803 147.667 li
219.887 152.25 li
219.97 151.167 li
220.137 141 li
220.22 136.333 li
220.387 122.917 li
220.47 138.417 li
220.553 122 li
220.72 128.5 li
220.803 129.917 li
220.886 148.25 li
221.053 128.75 li
221.136 146.583 li
221.303 141.667 li
221.386 147.667 li
221.47 136.417 li
221.636 108.167 li
221.72 102.5 li
221.803 126.417 li
221.97 124.917 li
222.053 130.083 li
222.22 116.833 li
222.303 132.75 li
222.386 132.083 li
222.553 146.5 li
222.636 118.75 li
222.72 123.917 li
222.886 121.667 li
222.97 110 li
223.136 131.417 li
223.22 101.917 li
223.303 123.917 li
223.47 127.333 li
223.553 137.667 li
223.636 124.833 li
223.803 128.083 li
223.886 124.167 li
224.053 134.75 li
224.136 120.75 li
224.22 111.917 li
224.386 114.333 li
224.47 116.417 li
224.636 116.417 li
224.72 138.75 li
224.803 129.417 li
224.97 147.083 li
225.053 128 li
225.136 130.583 li
225.303 129.667 li
225.386 126.583 li
225.553 140.417 li
225.636 127.917 li
225.72 120.583 li
225.886 120 li
225.969 123.5 li
226.053 151.917 li
226.219 135.25 li
226.303 140.917 li
226.469 139.417 li
226.553 123.5 li
226.636 144.5 li
226.803 129.833 li
226.886 119.417 li
226.969 115.25 li
227.136 91 li
227.219 138.75 li
227.386 117.75 li
227.469 125.917 li
227.553 123 li
227.719 122.167 li
227.803 137.667 li
227.886 134.25 li
228.053 136.667 li
228.136 130.75 li
228.303 131.333 li
228.386 122.333 li
228.469 134 li
228.636 133.583 li
228.719 118.75 li
228.803 113.75 li
228.969 120.75 li
229.053 117.167 li
229.219 135.333 li
229.303 94.4165 li
229.386 122 li
229.553 129 li
229.636 103.083 li
229.803 122 li
229.886 119.917 li
229.969 109.833 li
230.136 109.583 li
230.219 142.083 li
230.303 132.5 li
230.469 142.083 li
230.553 115.667 li
230.719 120.917 li
230.803 123.667 li
230.886 120.5 li
231.053 123.417 li
231.136 122.25 li
231.219 127.5 li
231.386 113.833 li
231.469 116.667 li
231.636 112.917 li
231.719 123.917 li
231.802 135.083 li
231.969 99.75 li
232.052 117.917 li
232.136 100 li
232.302 114.833 li
232.386 131.25 li
232.552 113.917 li
232.636 129.083 li
232.719 105.083 li
232.886 114.833 li
232.969 116.583 li
233.052 101.167 li
233.219 107.917 li
233.302 101.5 li
233.469 116.917 li
233.552 97.6665 li
233.636 111.5 li
233.802 112.833 li
233.886 96.8335 li
233.969 78.25 li
234.136 106.167 li
234.219 95 li
234.386 101.083 li
234.469 115.083 li
234.552 125.583 li
234.719 114.833 li
234.802 132.583 li
234.886 120.667 li
235.052 112.667 li
235.136 125.583 li
235.302 114.5 li
235.386 119 li
235.469 131.833 li
235.636 123.833 li
235.719 113.917 li
235.886 136.917 li
235.969 114.833 li
236.052 124.083 li
236.219 109.917 li
236.302 128.917 li
236.386 134.5 li
236.552 127.333 li
236.636 114.75 li
236.802 106.833 li
236.886 113 li
236.969 104.667 li
237.135 121 li
237.219 107 li
237.302 112.667 li
237.469 113.167 li
237.552 122.333 li
237.719 109.25 li
237.802 101.833 li
237.885 112.917 li
238.052 101.083 li
238.135 99.5835 li
238.219 123.833 li
238.385 120.667 li
238.469 106.083 li
238.635 114.75 li
238.719 107.25 li
238.802 113.25 li
238.969 113.917 li
239.052 128.25 li
239.135 103.833 li
239.302 108 li
239.385 121.083 li
239.552 111.833 li
239.635 131.333 li
239.719 124.417 li
239.885 136.5 li
239.969 137 li
240.052 131.25 li
240.219 133 li
240.302 106.667 li
240.469 125.5 li
240.552 139.333 li
240.635 126.25 li
240.802 136.583 li
240.885 126.25 li
240.969 156.583 li
241.135 137.583 li
241.219 137.917 li
241.385 134.5 li
241.469 119 li
241.552 133.583 li
241.719 119.083 li
241.802 120.917 li
241.969 122.417 li
242.052 133 li
242.135 123.5 li
242.302 118.167 li
242.385 125.333 li
242.468 147.833 li
242.635 131 li
242.718 118.583 li
242.885 126.083 li
242.968 121.917 li
243.052 116.5 li
243.218 153.75 li
243.302 114.583 li
243.385 129.75 li
243.552 117.5 li
243.635 145.083 li
243.802 121.917 li
243.885 111.917 li
243.968 118.25 li
244.135 125.583 li
244.218 91.6665 li
244.302 127.25 li
244.468 141.083 li
244.552 115.583 li
244.718 112.833 li
244.802 126.25 li
244.885 130.917 li
245.052 109.417 li
245.135 148.5 li
245.218 129.5 li
245.385 124.917 li
245.468 120.833 li
245.635 130.417 li
245.718 134.667 li
245.802 134.417 li
245.968 135.75 li
246.052 118.917 li
246.135 107.917 li
246.302 127.25 li
246.385 110.583 li
246.552 110.833 li
246.635 117.583 li
246.718 118.5 li
246.885 92.75 li
246.968 110.167 li
246.97 110.167 mo
247.054 117.25 li
247.22 88.0835 li
247.304 114.667 li
247.47 117.25 li
247.554 127.25 li
247.637 115.25 li
247.804 119.167 li
247.887 109.833 li
248.054 106.667 li
248.137 112.833 li
248.22 114 li
248.387 114.083 li
248.47 137.083 li
248.554 125.5 li
248.72 124.5 li
248.804 105.083 li
248.97 129.417 li
249.053 154.917 li
249.137 120.083 li
249.303 125.583 li
249.387 143.417 li
249.47 146.75 li
249.637 153.5 li
249.72 118.5 li
249.887 108 li
249.97 129.75 li
250.053 125.333 li
250.22 133.417 li
250.303 129.5 li
250.387 96.1665 li
250.553 103.25 li
250.637 98.3335 li
250.803 102 li
250.887 107.583 li
250.97 122.917 li
251.137 121.083 li
251.22 127.25 li
251.303 133.667 li
251.47 111.25 li
251.553 147.583 li
251.72 131.917 li
251.803 120.25 li
251.887 146.667 li
252.053 124.833 li
252.137 124.5 li
252.22 126.833 li
252.387 134.083 li
252.47 137 li
252.637 140.167 li
252.72 139.167 li
252.803 125 li
252.97 132.667 li
253.053 126.167 li
253.137 149.75 li
253.303 148.667 li
253.387 131 li
253.553 132.417 li
253.637 134.25 li
253.72 133 li
253.887 133.083 li
253.97 125 li
254.137 106.583 li
254.22 117.5 li
254.303 120.417 li
254.47 129.5 li
254.553 105.667 li
254.636 125.083 li
254.803 129.25 li
254.886 128 li
255.053 147.75 li
255.136 124.917 li
255.22 143.667 li
255.386 137.667 li
255.47 133.417 li
255.553 112.75 li
255.72 129.833 li
255.803 139.917 li
255.97 117.167 li
256.053 113.917 li
256.136 126.75 li
256.303 119.75 li
256.386 108.25 li
256.47 109 li
256.636 122.417 li
256.72 122.417 li
256.886 133.667 li
256.97 115.25 li
257.053 130.75 li
257.22 114.667 li
257.303 135.833 li
257.386 115.75 li
257.553 117.667 li
257.636 118.167 li
257.803 129.75 li
257.886 125.917 li
257.97 117.833 li
258.136 140.5 li
258.22 144.667 li
258.303 127.083 li
258.47 116.417 li
258.553 128.667 li
258.72 112 li
258.803 127 li
258.886 109.417 li
259.053 141.75 li
259.136 119.167 li
259.303 116.25 li
259.386 136.083 li
259.47 122.167 li
259.636 121.5 li
259.72 134.333 li
259.803 108.25 li
259.969 120.75 li
260.053 106 li
260.219 114.5 li
260.303 100.417 li
260.386 111.333 li
260.553 109.75 li
260.636 134 li
260.719 109 li
260.886 134.75 li
260.969 125.25 li
261.136 102.167 li
261.219 102.583 li
261.303 110.333 li
261.469 96.4165 li
261.553 115.333 li
261.636 121.583 li
261.803 114.417 li
261.886 149.333 li
262.053 126 li
262.136 133 li
262.219 136.833 li
262.386 125.583 li
262.469 109.417 li
262.553 118.25 li
262.719 115.417 li
262.803 106 li
262.969 140 li
263.053 126.667 li
263.136 119.333 li
263.303 101.5 li
263.386 128.833 li
263.469 118.167 li
263.636 126.917 li
263.719 119.583 li
263.886 129.417 li
263.969 128.5 li
264.053 126.583 li
264.219 128.5 li
264.303 123.583 li
264.386 134.75 li
264.553 128.083 li
264.636 121.25 li
264.803 103.667 li
264.886 102.083 li
264.969 110.917 li
265.136 131.5 li
265.219 125.75 li
265.386 100.25 li
265.469 130.333 li
265.552 107.167 li
265.719 96.25 li
265.802 131.667 li
265.886 125.917 li
266.052 157.083 li
266.136 145.417 li
266.302 118.75 li
266.386 98.0835 li
266.469 117.167 li
266.636 126 li
266.719 123.417 li
266.802 111.417 li
266.969 117 li
267.052 116.417 li
267.219 103.833 li
267.302 111.833 li
267.386 110.25 li
267.552 116.667 li
267.636 132.083 li
267.719 133.167 li
267.886 121.167 li
267.969 120 li
268.136 135.083 li
268.219 114.833 li
268.302 128.083 li
268.469 99.25 li
268.552 120.083 li
268.636 93.25 li
268.802 91.6665 li
268.886 102 li
269.052 120.583 li
269.136 95.3335 li
269.219 117.167 li
269.386 104.583 li
269.469 93.9165 li
269.552 107.167 li
269.719 99.1665 li
269.802 88.5835 li
269.969 95.0835 li
270.052 96.8335 li
270.136 96.5835 li
270.302 97.5 li
270.386 85.5835 li
270.469 96.5835 li
270.636 108.083 li
270.719 109.667 li
270.885 108.5 li
270.969 101.417 li
271.052 95.25 li
271.219 95.4165 li
271.302 96.5 li
271.469 89.4165 li
271.552 109.833 li
271.635 107.583 li
271.802 106.75 li
271.885 96.4165 li
271.969 106.917 li
272.135 100.417 li
272.219 116.917 li
272.385 118.333 li
272.469 117.583 li
272.552 103.667 li
272.719 99 li
272.802 105 li
272.885 113.083 li
273.052 124.167 li
273.135 103.75 li
273.302 113 li
273.385 100.667 li
273.469 117.75 li
273.635 96.5 li
273.719 97.1665 li
273.802 106.083 li
273.969 120.167 li
274.052 118.417 li
274.219 109.583 li
274.302 90 li
274.385 102.667 li
274.552 102.75 li
274.635 84.75 li
274.719 128.583 li
274.885 110.75 li
274.969 118.583 li
275.135 125.417 li
275.219 128.083 li
275.302 112.25 li
275.469 94 li
275.552 100.917 li
275.635 106.833 li
275.802 105.417 li
275.885 108.25 li
276.052 93.1665 li
276.135 108.25 li
276.218 103.667 li
276.385 94.75 li
276.468 117.417 li
276.552 124.333 li
276.718 103.5 li
276.802 107.917 li
276.968 111.75 li
277.052 134.75 li
277.135 116.583 li
277.302 119.833 li
277.385 117.083 li
277.552 126.75 li
277.635 112.333 li
277.718 130.417 li
277.885 117.083 li
277.968 132.25 li
278.052 112.583 li
278.218 134.75 li
278.302 121.583 li
278.468 130.667 li
278.552 108.917 li
278.635 122.25 li
278.802 129.167 li
278.885 118.5 li
278.968 124.917 li
279.135 122.75 li
279.218 127.083 li
279.385 99.0835 li
279.468 128.167 li
279.552 127.25 li
279.718 148.75 li
279.802 131.833 li
279.885 151.083 li
280.052 105.833 li
280.135 119.75 li
280.302 105.5 li
280.385 130.5 li
280.468 127.167 li
280.635 122.667 li
280.718 108.167 li
280.802 103.417 li
280.968 123.083 li
281.052 114.5 li
281.218 115.083 li
281.302 124 li
281.304 124 mo
281.387 93.4165 li
281.554 110.417 li
281.637 127.583 li
281.72 113.583 li
281.887 108.5 li
281.97 121.333 li
282.137 133.917 li
282.22 116 li
282.304 129.083 li
282.47 117.917 li
282.554 120.583 li
282.72 119.833 li
282.804 108.583 li
282.887 109.417 li
283.054 118.667 li
283.137 103.583 li
283.22 100 li
283.387 101.75 li
283.47 105.167 li
283.637 96.5835 li
283.72 94.9165 li
283.803 110.167 li
283.97 99.75 li
284.053 103 li
284.137 96.9165 li
284.303 110 li
284.387 109.25 li
284.553 109.833 li
284.637 98.1665 li
284.72 90.75 li
284.887 120.25 li
284.97 90.3335 li
285.053 86.8335 li
285.22 106.417 li
285.303 100.167 li
285.47 121.25 li
285.553 101.75 li
285.637 100.417 li
285.803 93.4165 li
285.887 90.75 li
285.97 99.8335 li
286.137 101.917 li
286.22 100.833 li
286.387 102.167 li
286.47 97 li
286.553 100.917 li
286.72 106.833 li
286.803 112.083 li
286.887 94.5 li
287.053 118.75 li
287.137 112 li
287.303 116.917 li
287.387 108.667 li
287.47 117.167 li
287.637 114.417 li
287.72 116.417 li
287.803 109.167 li
287.97 127.083 li
288.053 114.083 li
288.22 114.5 li
288.303 103.417 li
288.387 103.833 li
288.553 113.833 li
288.636 138.333 li
288.803 129.667 li
288.886 125 li
288.97 125.583 li
289.136 123.917 li
289.22 116.917 li
289.303 116.333 li
289.47 94.9165 li
289.553 115.75 li
289.72 113 li
289.803 90.6665 li
289.886 90.6665 li
290.053 97.3335 li
290.136 94.25 li
290.22 116.583 li
290.386 131.75 li
290.47 147.417 li
290.636 134.417 li
290.72 118.25 li
290.803 127.333 li
290.97 118.667 li
291.053 137.083 li
291.136 127.583 li
291.303 159.667 li
291.386 130.833 li
291.553 143.667 li
291.636 136.25 li
291.72 105.583 li
291.886 126.333 li
291.97 129.333 li
292.053 123.667 li
292.22 123.75 li
292.303 121.667 li
292.47 104.833 li
292.553 127.917 li
292.636 101.417 li
292.803 113.083 li
292.886 139.75 li
292.97 123.75 li
293.136 105 li
293.22 123 li
293.386 119.333 li
293.47 104.917 li
293.553 129.417 li
293.72 107 li
293.803 113.75 li
293.886 128.75 li
294.053 103.25 li
294.136 117.333 li
294.303 102.917 li
294.386 102.083 li
294.469 109.917 li
294.636 112.583 li
294.719 92.6665 li
294.886 97.5835 li
294.969 91.8335 li
295.053 71 li
295.219 97 li
295.303 84.9165 li
295.386 110.833 li
295.553 122.333 li
295.636 76 li
295.803 98.8335 li
295.886 109.667 li
295.969 119.167 li
296.136 104.333 li
296.219 98.6665 li
296.303 127.75 li
296.469 109.75 li
296.553 91.25 li
296.719 93.0835 li
296.803 94.8335 li
296.886 105.833 li
297.053 127.333 li
297.136 122.333 li
297.219 112.25 li
297.386 88.1665 li
297.469 105.167 li
297.636 111.583 li
297.719 103.583 li
297.803 90.5 li
297.969 104.833 li
298.053 106.333 li
298.136 111.667 li
298.303 108.833 li
298.386 85.75 li
298.553 100.583 li
298.636 112.667 li
298.719 112.25 li
298.886 106.333 li
298.969 102.167 li
299.053 111.833 li
299.219 132.417 li
299.303 106.75 li
299.469 89.6665 li
299.552 89.0835 li
299.636 119.583 li
299.802 96.4165 li
299.886 96 li
299.969 102 li
300.136 105.083 li
300.219 104.917 li
300.386 126.417 li
300.469 106.667 li
300.552 104.833 li
300.719 93.3335 li
300.802 97.5835 li
300.969 108.833 li
301.052 124.583 li
301.136 105.667 li
301.302 121.083 li
301.386 101.583 li
301.469 106.167 li
301.636 97.4165 li
301.719 97.75 li
301.886 96.5 li
301.969 97.25 li
302.052 92.75 li
302.219 128 li
302.302 116 li
302.386 108.417 li
302.552 117.417 li
302.636 116.667 li
302.802 109.25 li
302.886 98.4165 li
302.969 105.75 li
303.136 102.25 li
303.219 97.6665 li
303.302 110.5 li
303.469 106.083 li
303.552 107.833 li
303.719 114.25 li
303.802 100.833 li
303.886 99.1665 li
304.052 104.333 li
304.136 99.0835 li
304.219 99.0835 li
304.386 105.833 li
304.469 91 li
304.636 120.167 li
304.719 143.25 li
304.802 118 li
304.969 118.833 li
305.052 119.167 li
305.135 113.167 li
305.302 96.6665 li
305.385 98.3335 li
305.552 109.75 li
305.635 103.083 li
305.719 111.917 li
305.885 126.083 li
305.969 107.917 li
306.052 108.917 li
306.219 107.75 li
306.302 103.417 li
306.469 91.3335 li
306.552 133 li
306.635 108.833 li
306.802 134 li
306.885 127.417 li
307.052 106.75 li
307.135 104.333 li
307.219 120.417 li
307.385 108.583 li
307.469 113.5 li
307.552 101.833 li
307.719 94.8335 li
307.802 90.9165 li
307.969 96.5835 li
308.052 92.0835 li
308.135 95.8335 li
308.302 88.1665 li
308.385 57 li
308.469 88 li
308.635 84.9165 li
308.719 93.75 li
308.885 96.5835 li
308.969 92 li
309.052 106.75 li
309.219 89.75 li
309.302 95.4165 li
309.385 112.417 li
309.552 102.5 li
309.635 101.917 li
309.802 103.917 li
309.885 126.333 li
309.969 103.667 li
310.135 117.167 li
310.219 117.25 li
310.302 118.833 li
310.468 132.083 li
310.552 121.083 li
310.718 116.25 li
310.802 110 li
310.885 107.417 li
311.052 117 li
311.135 116.417 li
311.218 102.917 li
311.385 100 li
311.468 109.917 li
311.635 99.0835 li
311.718 118.417 li
311.802 96.1665 li
311.968 91.0835 li
312.052 97.5835 li
312.218 112.083 li
312.302 109.083 li
312.385 99 li
312.552 113.583 li
312.635 120.917 li
312.718 79.6665 li
312.885 116.25 li
312.968 101.583 li
313.135 101.917 li
313.218 104.833 li
313.302 102.5 li
313.468 84.75 li
313.552 87.9165 li
313.635 103.25 li
313.802 102 li
313.885 83.3335 li
314.052 92.1665 li
314.135 96.5 li
314.218 103.917 li
314.385 87.4165 li
314.468 85.9165 li
314.552 87.5 li
314.718 69.5835 li
314.802 82.25 li
314.968 79.4165 li
315.052 80.75 li
315.135 79.3335 li
315.302 88 li
315.385 122.5 li
315.468 111.25 li
315.635 95.75 li
315.637 95.75 mo
315.72 115 li
315.887 94.5 li
315.97 101.667 li
316.054 99.75 li
316.22 99.4165 li
316.304 106.917 li
316.387 96.3335 li
316.554 101.417 li
316.637 91.3335 li
316.804 88.8335 li
316.887 106.5 li
316.97 116.167 li
317.137 102.25 li
317.22 101.667 li
317.303 101.583 li
317.47 82.0835 li
317.553 78 li
317.72 82.5 li
317.803 108 li
317.887 101.917 li
318.053 113 li
318.137 105.917 li
318.303 93.75 li
318.387 86.4165 li
318.47 98 li
318.637 74.4165 li
318.72 73.5 li
318.803 91.6665 li
318.97 97.9165 li
319.053 100.083 li
319.22 106.083 li
319.303 79.0835 li
319.387 77.5835 li
319.553 79 li
319.637 85.25 li
319.72 78.4165 li
319.887 82 li
319.97 85.0835 li
320.137 98.25 li
320.22 95.25 li
320.303 101.167 li
320.47 105.333 li
320.553 89.9165 li
320.637 118.667 li
320.803 101.417 li
320.887 112.083 li
321.053 105 li
321.137 103.5 li
321.22 66.5835 li
321.387 84.5835 li
321.47 87.1665 li
321.553 88.5835 li
321.72 80.75 li
321.803 103.583 li
321.97 91.75 li
322.053 72.4165 li
322.137 94.25 li
322.303 78.6665 li
322.387 94.5 li
322.47 85.5 li
322.637 89.0835 li
322.72 89.3335 li
322.887 107.75 li
322.97 91.6665 li
323.053 87.25 li
323.22 102.25 li
323.303 95.0835 li
323.386 112.25 li
323.553 107.083 li
323.636 104.917 li
323.803 84.8335 li
323.886 81.9165 li
323.97 115.833 li
324.136 103 li
324.22 107.25 li
324.386 109.333 li
324.47 103 li
324.553 109.75 li
324.72 105.083 li
324.803 108.583 li
324.886 88 li
325.053 104.833 li
325.136 107.833 li
325.303 87.6665 li
325.386 83.5835 li
325.47 84.25 li
325.636 108.417 li
325.72 93.75 li
325.803 110.75 li
325.97 108.75 li
326.053 106.917 li
326.22 82.5 li
326.303 98.3335 li
326.386 88 li
326.553 89.4165 li
326.636 106.083 li
326.72 90.9165 li
326.886 107.083 li
326.97 92 li
327.136 104.667 li
327.22 84.25 li
327.303 99.4165 li
327.47 98 li
327.553 102.917 li
327.636 99.0835 li
327.803 98.0835 li
327.886 94.9165 li
328.053 111.417 li
328.136 111.667 li
328.219 96.6665 li
328.386 95.6665 li
328.469 106.25 li
328.553 109.333 li
328.719 104.583 li
328.803 117.583 li
328.969 138.417 li
329.053 107.75 li
329.136 118.167 li
329.303 120.583 li
329.386 126.083 li
329.469 120.583 li
329.636 113.417 li
329.719 119.583 li
329.886 121.917 li
329.969 130.333 li
330.053 125.417 li
330.219 97 li
330.303 112.917 li
330.469 99.75 li
330.553 114.917 li
330.636 117.417 li
330.803 122.917 li
330.886 131.667 li
330.969 103.667 li
331.136 116.167 li
331.219 104.917 li
331.386 94.1665 li
331.469 95.75 li
331.553 108.833 li
331.719 96 li
331.803 108.667 li
331.886 124.5 li
332.053 107.333 li
332.136 131.583 li
332.303 121.583 li
332.386 115.667 li
332.469 106 li
332.636 100.833 li
332.719 114.917 li
332.803 93.6665 li
332.969 110.667 li
333.053 92.4165 li
333.219 105.667 li
333.303 115.25 li
333.386 123.333 li
333.553 118.75 li
333.636 103.75 li
333.719 103.917 li
333.886 91.75 li
333.969 86.75 li
334.136 94.0835 li
334.219 82.4165 li
334.302 108.083 li
334.469 107.583 li
334.552 79.5 li
334.636 99.4165 li
334.802 90.8335 li
334.886 110.5 li
335.052 105.667 li
335.136 88.9165 li
335.219 86.9165 li
335.386 87 li
335.469 92 li
335.636 105.417 li
335.719 99.75 li
335.802 101.917 li
335.969 97.5835 li
336.052 84.1665 li
336.136 103 li
336.302 92.0835 li
336.386 97.75 li
336.552 100.083 li
336.636 94.9165 li
336.719 99.1665 li
336.886 111.333 li
336.969 110.167 li
337.052 114.833 li
337.219 93.5 li
337.302 107.417 li
337.469 117.25 li
337.552 116 li
337.636 97.4165 li
337.802 104.833 li
337.886 123.833 li
337.969 107.167 li
338.136 103.417 li
338.219 127.5 li
338.386 119 li
338.469 93.5 li
338.552 101.917 li
338.719 111.5 li
338.802 112.833 li
338.886 103.917 li
339.052 97 li
339.135 108.333 li
339.302 100.417 li
339.385 109.917 li
339.469 129.667 li
339.635 105 li
339.719 115.417 li
339.802 105.75 li
339.969 98.5835 li
340.052 91.9165 li
340.219 98.25 li
340.302 112.833 li
340.385 105.167 li
340.552 102.583 li
340.635 93.5835 li
340.719 87.0835 li
340.885 106.667 li
340.969 101.667 li
341.135 95.75 li
341.219 103.667 li
341.302 90 li
341.469 124.083 li
341.552 101.417 li
341.719 119.917 li
341.802 89.1665 li
341.885 88.75 li
342.052 95.4165 li
342.135 109.917 li
342.219 114.083 li
342.385 92.75 li
342.469 95.5 li
342.635 108.667 li
342.719 97.4165 li
342.802 101.583 li
342.969 102.833 li
343.052 102.167 li
343.135 105.75 li
343.302 104.75 li
343.385 107.833 li
343.552 104.833 li
343.635 95.6665 li
343.719 84.0835 li
343.885 93.1665 li
343.969 103.25 li
344.052 101 li
344.219 114.333 li
344.302 83.8335 li
344.469 114.083 li
344.552 136.583 li
344.635 137.5 li
344.802 99.4165 li
344.885 98.0835 li
344.968 92 li
345.135 128.083 li
345.218 131.333 li
345.385 109.5 li
345.468 119.667 li
345.552 126.167 li
345.718 139.917 li
345.802 119.333 li
345.885 99.3335 li
346.052 115 li
346.135 111.25 li
346.302 122.333 li
346.385 103.333 li
346.468 142.667 li
346.635 119.417 li
346.718 109.917 li
346.802 132.833 li
346.968 134.5 li
347.052 121.667 li
347.218 130.333 li
347.302 121.833 li
347.385 144.417 li
347.552 137.5 li
347.635 127.583 li
347.802 127.25 li
347.885 147.5 li
347.968 116.083 li
348.135 123.417 li
348.218 106.667 li
348.302 110.083 li
348.468 101 li
348.552 110.417 li
348.718 106.75 li
348.802 103.167 li
348.885 114.5 li
349.052 116.083 li
349.135 103.583 li
349.218 99.75 li
349.385 99.4165 li
349.468 94.6665 li
349.635 83 li
349.718 95.3335 li
349.802 104.5 li
349.968 118.667 li
349.97 118.667 mo
350.054 118.083 li
350.137 109.167 li
350.304 90.4165 li
350.387 106.25 li
350.554 104.25 li
350.637 107.667 li
350.72 103 li
350.887 105.5 li
350.97 91 li
351.054 142.75 li
351.22 71.3335 li
351.304 114.25 li
351.47 101.5 li
351.554 93.0835 li
351.637 105.75 li
351.804 102.667 li
351.887 101.583 li
351.97 108.417 li
352.137 99.4165 li
352.22 87.5 li
352.387 74.25 li
352.47 117.083 li
352.553 94.0835 li
352.72 91.4165 li
352.803 105.167 li
352.887 112.417 li
353.053 115.167 li
353.137 102.583 li
353.303 116.417 li
353.387 105.417 li
353.47 106.25 li
353.637 115.5 li
353.72 120.75 li
353.887 121.833 li
353.97 122.083 li
354.053 114.667 li
354.22 89.25 li
354.303 112.083 li
354.387 111.667 li
354.553 104.75 li
354.637 109.083 li
354.803 110.167 li
354.887 100.75 li
354.97 98.5 li
355.137 103.333 li
355.22 115.417 li
355.303 121.333 li
355.47 101.667 li
355.553 116.167 li
355.72 85.75 li
355.803 92.0835 li
355.887 102.167 li
356.053 97.9165 li
356.137 90.0835 li
356.22 94.5835 li
356.387 91.0835 li
356.47 110.417 li
356.637 117.75 li
356.72 105.667 li
356.803 127.417 li
356.97 105.583 li
357.053 118.25 li
357.137 106 li
357.303 101 li
357.387 90.9165 li
357.553 96.5 li
357.636 101.417 li
357.72 126.5 li
357.886 98.25 li
357.97 72.75 li
358.053 116.333 li
358.22 76.0835 li
358.303 100 li
358.47 98.9165 li
358.553 91 li
358.636 79.1665 li
358.803 104.667 li
358.886 100.25 li
358.97 96.4165 li
359.136 82.5 li
359.22 106.833 li
359.386 92.1665 li
359.47 113.667 li
359.553 95.6665 li
359.72 76.9165 li
359.803 99.3335 li
359.97 89.6665 li
360.053 91 li
360.136 84.75 li
360.303 86.6665 li
360.386 84.75 li
360.47 100.667 li
360.636 93.75 li
360.72 109.417 li
360.886 88 li
360.97 93.8335 li
361.053 109.417 li
361.22 117.833 li
361.303 102.583 li
361.386 125.5 li
361.553 107.667 li
361.636 83.5 li
361.803 99.4165 li
361.886 89.6665 li
361.97 96.5835 li
362.136 100.167 li
362.22 101.5 li
362.303 115.083 li
362.47 90.0835 li
362.553 100 li
362.72 109.417 li
362.803 133.417 li
362.886 146.833 li
363.053 139.917 li
363.136 119.667 li
363.219 137 li
363.386 127.333 li
363.469 124.333 li
363.636 118.667 li
363.719 126.417 li
363.803 130.917 li
363.969 115.833 li
364.053 112.5 li
364.136 108.917 li
364.303 128.833 li
364.386 106.083 li
364.553 138.167 li
364.636 136.833 li
364.719 113.083 li
364.886 116 li
364.969 132.333 li
365.136 125.75 li
365.219 113.417 li
365.303 141 li
365.469 108.417 li
365.553 107.667 li
365.636 99.5 li
365.803 120.75 li
365.886 115.167 li
366.053 113.833 li
366.136 116.917 li
366.219 116.917 li
366.386 110 li
366.469 95.5835 li
366.553 99.5 li
366.719 114.083 li
366.803 121.583 li
366.969 107.417 li
367.053 130.75 li
367.136 131.5 li
367.303 120.833 li
367.386 123.167 li
367.469 118.5 li
367.636 118.667 li
367.719 111.167 li
367.886 117.417 li
367.969 109.917 li
368.053 121.5 li
368.219 133.833 li
368.303 114.75 li
368.386 129.417 li
368.552 116.667 li
368.636 122 li
368.802 121.833 li
368.886 117.333 li
368.969 98.25 li
369.136 114.333 li
369.219 118.833 li
369.302 111.167 li
369.469 97.1665 li
369.552 116.5 li
369.719 121.083 li
369.802 112.667 li
369.886 116.833 li
370.052 106.917 li
370.136 105.333 li
370.219 114.5 li
370.386 117.833 li
370.469 91.5 li
370.636 81.75 li
370.719 100.583 li
370.802 91.5 li
370.969 108.167 li
371.052 100.083 li
371.219 101.083 li
371.302 92.917 li
371.386 106.833 li
371.552 127.583 li
371.636 116.417 li
371.719 123.25 li
371.886 128.333 li
371.969 114.25 li
372.136 79.3335 li
372.219 101.417 li
372.302 110.75 li
372.469 106.667 li
372.552 95.917 li
372.636 87.25 li
372.802 118.083 li
372.886 126.75 li
373.052 94.5835 li
373.136 84.417 li
373.219 68.75 li
373.386 87.417 li
373.469 72.3335 li
373.552 77.417 li
373.719 95.667 li
373.802 92.5 li
373.969 104.75 li
374.052 95 li
374.135 96.167 li
374.302 117.167 li
374.385 100.583 li
374.469 109.833 li
374.635 83.417 li
374.719 94.5 li
374.885 95.5835 li
374.969 103.333 li
375.052 94.75 li
375.219 114.25 li
375.302 119.667 li
375.385 117.75 li
375.552 116.167 li
375.635 128.5 li
375.802 114.25 li
375.885 98.75 li
375.969 87.417 li
376.135 102.5 li
376.219 119 li
376.302 71.0835 li
376.469 92.5835 li
376.552 112.667 li
376.719 103.833 li
376.802 122.667 li
376.885 103.333 li
377.052 91.0835 li
377.135 117.25 li
377.302 83.917 li
377.385 91.75 li
377.469 111.167 li
377.635 108.167 li
377.719 103.833 li
377.802 125.333 li
377.969 103.417 li
378.052 161.5 li
378.219 99 li
378.302 105.417 li
378.385 119 li
378.552 130.333 li
378.635 108.417 li
378.719 123.583 li
378.885 130.25 li
378.969 99.5 li
379.135 113.917 li
379.219 87.5835 li
379.302 100.333 li
379.468 73.917 li
379.552 93.8335 li
379.635 112.667 li
379.802 91.5 li
379.885 95.917 li
380.052 78.167 li
380.135 72.417 li
380.218 124.417 li
380.385 111.75 li
380.468 121.333 li
380.552 124 li
380.718 95.5 li
380.802 94.3335 li
380.968 102 li
381.052 103.25 li
381.135 103.833 li
381.302 109.25 li
381.385 107.75 li
381.468 81.0835 li
381.635 79.5835 li
381.718 90.75 li
381.885 97.417 li
381.968 92.75 li
382.052 105.083 li
382.218 96.667 li
382.302 88 li
382.385 74.917 li
382.552 101.083 li
382.635 106.417 li
382.802 110.083 li
382.885 106.75 li
382.968 112 li
383.135 106.583 li
383.218 102.5 li
383.385 90.75 li
383.468 85.0835 li
383.552 89.417 li
383.718 92.25 li
383.802 90.667 li
383.885 97.8335 li
384.052 86.167 li
384.135 87.417 li
384.302 99.75 li
384.304 99.75 mo
384.387 90.1665 li
384.47 115.25 li
384.637 116.25 li
384.72 118.583 li
384.804 100.5 li
384.97 96.4165 li
385.054 101.333 li
385.22 94.9165 li
385.304 94.0835 li
385.387 90.3335 li
385.554 87.0835 li
385.637 93.25 li
385.72 86.8335 li
385.887 118 li
385.97 100.25 li
386.137 73.4165 li
386.22 89.3335 li
386.303 92.75 li
386.47 98.4165 li
386.553 98 li
386.637 107.917 li
386.803 76.5 li
386.887 81 li
387.053 77.75 li
387.137 95.0835 li
387.22 83.4165 li
387.387 103.333 li
387.47 104.417 li
387.553 105 li
387.72 102.25 li
387.803 98.4165 li
387.97 92.5835 li
388.053 96.5835 li
388.137 115.167 li
388.303 97.4165 li
388.387 123.75 li
388.553 92.0835 li
388.637 102.417 li
388.72 106.417 li
388.887 70.75 li
388.97 71.9165 li
389.053 84.5835 li
389.22 68.6665 li
389.303 95.8335 li
389.47 102.417 li
389.553 94.9165 li
389.637 129.083 li
389.803 113.083 li
389.887 111.917 li
389.97 107.333 li
390.137 96.4165 li
390.22 131.75 li
390.387 117.083 li
390.47 119.25 li
390.553 103.333 li
390.72 86.8335 li
390.803 90.25 li
390.887 122.25 li
391.053 108.333 li
391.137 115.917 li
391.303 87.5835 li
391.387 77.5 li
391.47 99.5835 li
391.637 89 li
391.72 98.25 li
391.803 97.25 li
391.97 112 li
392.053 95.1665 li
392.22 116.75 li
392.303 117.083 li
392.386 116.833 li
392.553 120.333 li
392.636 107.25 li
392.72 119.583 li
392.886 125.667 li
392.97 84.25 li
393.136 122.833 li
393.22 102.583 li
393.303 86.4165 li
393.47 114.417 li
393.553 88.1665 li
393.636 99.5835 li
393.803 101.167 li
393.886 114.667 li
394.053 124.5 li
394.136 129.667 li
394.22 103.417 li
394.386 103.167 li
394.47 119.917 li
394.636 112.167 li
394.72 115.917 li
394.803 100.417 li
394.97 124.917 li
395.053 105.583 li
395.136 85 li
395.303 120.417 li
395.386 123.75 li
395.553 110.75 li
395.636 107.083 li
395.72 96.9165 li
395.886 99.6665 li
395.97 118.5 li
396.053 111.167 li
396.22 106.917 li
396.303 124.917 li
396.47 124.25 li
396.553 95.75 li
396.636 107.75 li
396.803 103.333 li
396.886 106.167 li
396.969 124 li
397.136 111.5 li
397.219 102.917 li
397.386 127.333 li
397.469 108.917 li
397.553 92.75 li
397.719 94.3335 li
397.803 119.417 li
397.886 81.75 li
398.053 100.667 li
398.136 111.25 li
398.303 96.6665 li
398.386 92.5835 li
398.469 107.667 li
398.636 108.5 li
398.719 73.5 li
398.803 97.25 li
398.969 86.0835 li
399.053 93.9165 li
399.219 85.1665 li
399.303 90.3335 li
399.386 100.833 li
399.553 110.833 li
399.636 107.083 li
399.719 93.4165 li
399.886 97.1665 li
399.969 82.0835 li
400.136 84.25 li
400.219 96.6665 li
400.303 81.5 li
400.469 100.333 li
400.553 98.4165 li
400.719 96.1665 li
400.803 94.4165 li
400.886 107.667 li
401.053 91.25 li
401.136 85.5 li
401.219 123.083 li
401.386 112.167 li
401.469 111.75 li
401.636 85.9165 li
401.719 126.75 li
401.803 109.25 li
401.969 113.833 li
402.053 100 li
402.136 99.1665 li
402.303 90.9165 li
402.386 110.167 li
402.553 80.8335 li
402.636 117.333 li
402.719 98.25 li
402.886 98.1665 li
402.969 118.25 li
403.052 79.75 li
403.219 112 li
403.302 115.917 li
403.469 111 li
403.552 108.583 li
403.636 107.5 li
403.802 128.417 li
403.886 124.667 li
403.969 99.3335 li
404.136 104.5 li
404.219 90.5 li
404.386 87.8335 li
404.469 88.5 li
404.552 88.5835 li
404.719 94.4165 li
404.802 103.833 li
404.886 91.1665 li
405.052 74 li
405.136 99.8335 li
405.302 107.583 li
405.386 84.0835 li
405.469 96.5 li
405.636 110.417 li
405.719 92.4165 li
405.802 108.667 li
405.969 111.333 li
406.053 107.917 li
406.219 103.833 li
406.303 123.75 li
406.386 115 li
406.553 100.833 li
406.636 116.583 li
406.803 109.5 li
406.886 88.3335 li
406.969 115.917 li
407.136 87.1665 li
407.219 112.833 li
407.303 101.917 li
407.469 98.6665 li
407.553 116.417 li
407.719 98.8335 li
407.803 107.917 li
407.886 89.4165 li
408.053 98.4165 li
408.136 82.4165 li
408.219 99.3335 li
408.386 115.833 li
408.469 101.833 li
408.636 99.4165 li
408.719 111.5 li
408.803 105.333 li
408.969 126.833 li
409.053 95.25 li
409.136 99.6665 li
409.303 98.0835 li
409.386 110.917 li
409.553 111.583 li
409.636 117.75 li
409.719 102 li
409.886 81.75 li
409.969 92.5835 li
410.053 70.5 li
410.219 90.5835 li
410.303 98.1665 li
410.469 90.0835 li
410.553 77.9165 li
410.636 78.0835 li
410.803 107.167 li
410.886 107.583 li
410.969 109.083 li
411.136 100.333 li
411.219 101.333 li
411.386 116.917 li
411.469 110.5 li
411.553 111.083 li
411.719 83.4165 li
411.803 104.333 li
411.886 107.167 li
412.053 126.417 li
412.136 107.917 li
412.303 100.417 li
412.386 76.5 li
412.469 113.25 li
412.636 105.667 li
412.719 100.417 li
412.886 100.833 li
412.969 80.8335 li
413.053 109.917 li
413.219 84.3335 li
413.303 95 li
413.386 77.25 li
413.553 87.8335 li
413.636 97.4165 li
413.803 88.75 li
413.886 80.1665 li
413.969 79.5835 li
414.136 92.1665 li
414.219 86.8335 li
414.303 92.0835 li
414.469 103.25 li
414.553 72.3335 li
414.719 110.083 li
414.803 126.583 li
414.886 114.917 li
415.053 94.0835 li
415.136 104 li
415.219 101.5 li
415.386 75.5835 li
415.469 92.4165 li
415.636 85.75 li
415.719 84.6665 li
415.803 96.4165 li
415.969 105.083 li
416.053 91.25 li
416.136 71.9165 li
416.303 78.5835 li
416.386 78 li
416.553 77 li
416.636 78.25 li
416.719 101.583 li
416.886 85 li
416.969 99.0835 li
417.053 81.8335 li
417.219 101.917 li
417.303 88.5835 li
417.469 86.5 li
417.553 91.1665 li
417.636 94.9165 li
417.803 89.0835 li
417.886 105.5 li
418.053 73.0835 li
418.136 70.0835 li
418.219 76 li
418.386 85 li
418.469 103.583 li
418.553 79.5835 li
418.554 79.5835 mo
418.72 91.5835 li
418.804 90.8335 li
418.97 88.4165 li
419.054 91 li
419.137 98.5835 li
419.304 99.9165 li
419.387 58.5 li
419.47 102.5 li
419.637 89.3335 li
419.72 110.417 li
419.887 86.25 li
419.97 68.0835 li
420.054 79.1665 li
420.22 72.9165 li
420.304 88.5835 li
420.387 63.5 li
420.554 53.4165 li
420.637 65.6665 li
420.804 55.0835 li
420.887 81.1665 li
420.97 99.0835 li
421.137 72.6665 li
421.22 77.4165 li
421.304 80.25 li
421.47 73.8335 li
421.554 68.0835 li
421.72 65.25 li
421.804 93.4165 li
421.887 67.75 li
422.054 75.5835 li
422.137 88.9165 li
422.22 70.3335 li
422.387 80.8335 li
422.47 90.3335 li
422.637 77.8335 li
422.72 73.8335 li
422.804 106.5 li
422.97 80.5 li
423.054 56.4165 li
423.137 88.4165 li
423.304 94.25 li
423.387 80.0835 li
423.554 54.3335 li
423.637 71.75 li
423.72 78.5 li
423.887 103 li
423.97 87.25 li
424.137 84.1665 li
424.22 82.9165 li
424.304 96.6665 li
424.47 72.9165 li
424.554 88.0835 li
424.637 81.3335 li
424.804 77.0835 li
424.887 73.3335 li
425.054 89.8335 li
425.137 74.1665 li
425.22 83 li
425.387 86.5835 li
425.47 80.5835 li
425.554 86.5835 li
425.72 104.833 li
425.804 81.3335 li
425.97 86.4165 li
426.054 71.5 li
426.137 63.9165 li
426.304 87.75 li
426.387 74.1665 li
426.47 97.3335 li
426.637 71.3335 li
426.72 76.9165 li
426.887 83 li
426.97 98.6665 li
427.054 101.583 li
427.22 86.75 li
427.304 79.5835 li
427.387 92.6665 li
427.554 86.6665 li
427.637 84.9165 li
427.804 83 li
427.887 81.5835 li
427.97 93.4165 li
428.137 99.8335 li
428.22 116.583 li
428.304 90.3335 li
428.47 109.583 li
428.554 89.8335 li
428.72 113.75 li
428.804 118.5 li
428.887 97.3335 li
429.054 87.25 li
429.137 101.083 li
429.221 97.9165 li
429.387 83.1665 li
429.471 94 li
429.637 88.5 li
429.721 78 li
429.804 86.6665 li
429.971 89.6665 li
430.054 92.0835 li
430.221 96.0835 li
430.304 90.5835 li
430.387 84.8335 li
430.554 97.8335 li
430.637 113.667 li
430.721 102.083 li
430.887 85.4165 li
430.971 90.0835 li
431.137 105.5 li
431.221 96.1665 li
431.304 64.1665 li
431.471 77.1665 li
431.554 73.3335 li
431.637 72.6665 li
431.804 72.25 li
431.887 68.75 li
432.054 88.4165 li
432.137 129.5 li
432.221 88.5835 li
432.387 98 li
432.471 74.3335 li
432.554 81.0835 li
432.721 69 li
432.804 72.5835 li
432.971 68.1665 li
433.054 64.9165 li
433.137 75.5835 li
433.304 83.4165 li
433.387 57 li
433.471 82.75 li
433.637 76.5 li
433.721 57.75 li
433.887 60 li
433.971 81.4165 li
434.054 99.8335 li
434.221 95.25 li
434.304 86.5 li
434.387 76.25 li
434.554 89.6665 li
434.637 100.5 li
434.804 92.4165 li
434.887 82.6665 li
434.971 74.3335 li
435.137 79.5 li
435.221 77.1665 li
435.304 94.4165 li
435.471 78.5 li
435.554 98.75 li
435.721 90.9165 li
435.804 74 li
435.887 69.1665 li
436.054 102.5 li
436.137 86 li
436.304 116.917 li
436.387 125.75 li
436.471 102 li
436.637 115.083 li
436.721 86.1665 li
436.804 89.0835 li
436.971 92.5835 li
437.054 103.917 li
437.221 99.0835 li
437.304 108.917 li
437.387 98.1665 li
437.554 94.0835 li
437.637 79.75 li
437.721 71.75 li
437.887 90.0835 li
437.971 97.5 li
438.137 110.833 li
438.221 114.083 li
438.304 87.1665 li
438.471 98.9165 li
438.554 90.4165 li
438.637 105 li
438.804 113.833 li
438.887 101 li
439.054 108.833 li
439.137 103.917 li
439.221 92.25 li
439.387 75.6665 li
439.471 69.25 li
439.554 84.4165 li
439.721 91.4165 li
439.804 94.1665 li
439.971 90 li
440.054 79 li
440.137 85.6665 li
440.304 84.1665 li
440.387 75.75 li
440.471 77.9165 li
440.637 91.5 li
440.721 101.75 li
440.887 103.5 li
440.971 95 li
441.054 93.5835 li
441.221 106.667 li
441.304 98.0835 li
441.471 98.3335 li
441.554 104.167 li
441.637 117.917 li
441.804 80.0835 li
441.887 95.3335 li
441.971 106.75 li
442.137 119.083 li
442.221 122.75 li
442.387 100.083 li
442.471 101 li
442.554 82.5835 li
442.721 95.6665 li
442.804 62.3335 li
442.887 73.75 li
443.054 98.0835 li
443.137 89.4165 li
443.304 65.8335 li
443.387 49.5835 li
443.471 77.1665 li
443.637 84.0835 li
443.721 67.3335 li
443.804 74.3335 li
443.971 68.5 li
444.054 75.8335 li
444.221 89.3335 li
444.304 89.5835 li
444.387 80.0835 li
444.554 85.0835 li
444.637 77.8335 li
444.721 100.167 li
444.887 87.6665 li
444.971 75.75 li
445.137 70.4165 li
445.221 86.0835 li
445.304 105.75 li
445.471 77.4165 li
445.554 90.75 li
445.638 64.1665 li
445.804 90.75 li
445.888 80.8335 li
446.054 71.3335 li
446.138 99.75 li
446.221 96.0835 li
446.388 89.5 li
446.471 68.8335 li
446.554 75.0835 li
446.721 105.583 li
446.804 100.167 li
446.971 85.5835 li
447.054 80.9165 li
447.138 107.667 li
447.304 107.667 li
447.388 114.583 li
447.554 116.583 li
447.638 86.3335 li
447.721 107.167 li
447.888 80.5835 li
447.971 76.5835 li
448.054 90.9165 li
448.221 102.083 li
448.304 114.5 li
448.471 102.583 li
448.554 108.5 li
448.638 79.75 li
448.804 112.833 li
448.888 95.5 li
448.971 90.9165 li
449.138 75.8335 li
449.221 103.667 li
449.388 91.1665 li
449.471 124.083 li
449.554 93.25 li
449.721 105.333 li
449.804 79.75 li
449.888 121.25 li
450.054 88.3335 li
450.138 103.083 li
450.304 84.9165 li
450.388 92.75 li
450.471 97 li
450.638 100.667 li
450.721 83.9165 li
450.804 134.917 li
450.971 100.667 li
451.054 87.75 li
451.221 81.5 li
451.304 99.1665 li
451.388 87.4165 li
451.554 89.25 li
451.638 84.8335 li
451.721 89.6665 li
451.888 93.9165 li
451.971 108.917 li
452.138 90.6665 li
452.221 114.833 li
452.304 95.3335 li
452.471 86.8335 li
452.554 87 li
452.638 70.1665 li
452.804 103.083 li
452.888 71.75 li
452.887 71.75 mo
453.054 85.25 li
453.137 96.6665 li
453.22 103.417 li
453.387 114.583 li
453.47 104.5 li
453.637 94.9165 li
453.72 100.667 li
453.804 114.75 li
453.97 92.9165 li
454.054 104.083 li
454.137 99.8335 li
454.304 96.25 li
454.387 99.6665 li
454.554 99.5 li
454.637 73.9165 li
454.72 94.8335 li
454.887 100.583 li
454.97 101.833 li
455.054 118.833 li
455.22 84.5835 li
455.304 83.8335 li
455.47 84.3335 li
455.554 88.4165 li
455.637 95.8335 li
455.804 74 li
455.887 59.4165 li
455.97 93.25 li
456.137 110.583 li
456.22 89.3335 li
456.387 105.583 li
456.47 101.25 li
456.554 101.917 li
456.72 81.6665 li
456.804 107.417 li
456.887 102.333 li
457.054 94.5 li
457.137 94.5835 li
457.304 72.0835 li
457.387 92.6665 li
457.47 99.1665 li
457.637 80.0835 li
457.72 92 li
457.804 103 li
457.97 102 li
458.054 109.833 li
458.22 81.3335 li
458.304 83.25 li
458.387 74.5 li
458.554 102.75 li
458.637 124.583 li
458.72 119.417 li
458.887 115 li
458.97 92 li
459.137 107.167 li
459.22 117 li
459.304 107.75 li
459.47 106.25 li
459.554 83.5 li
459.72 106.083 li
459.804 91.25 li
459.887 85.1665 li
460.054 117.833 li
460.137 106.5 li
460.22 104.083 li
460.387 92 li
460.47 97.0835 li
460.637 80.9165 li
460.72 78.25 li
460.804 103.583 li
460.97 81.5 li
461.054 85.5 li
461.137 99.4165 li
461.304 106.75 li
461.387 116.5 li
461.554 102.917 li
461.637 93 li
461.72 83.75 li
461.887 91.5 li
461.97 78.1665 li
462.054 94.0835 li
462.22 90.4165 li
462.304 76.75 li
462.47 78.9165 li
462.554 81.8335 li
462.637 100.833 li
462.804 113.5 li
462.887 113.5 li
462.97 114.167 li
463.137 102.083 li
463.22 126.583 li
463.387 127.083 li
463.471 121.5 li
463.554 115.167 li
463.721 99.5835 li
463.804 102.5 li
463.887 121.167 li
464.054 115.083 li
464.137 93.0835 li
464.304 78.4165 li
464.387 113.167 li
464.471 75 li
464.637 71.25 li
464.721 85.6665 li
464.804 95.9165 li
464.971 81 li
465.054 99.4165 li
465.221 85.5 li
465.304 95.75 li
465.387 80.9165 li
465.554 95.6665 li
465.637 87.8335 li
465.804 94 li
465.887 94.6665 li
465.971 85.5835 li
466.137 85.0835 li
466.221 106.083 li
466.304 113.167 li
466.471 113.25 li
466.554 111.167 li
466.721 85.5835 li
466.804 106 li
466.887 96.1665 li
467.054 124.5 li
467.137 119.167 li
467.221 81.75 li
467.387 102 li
467.471 91.5835 li
467.637 109.417 li
467.721 92.1665 li
467.804 111.583 li
467.971 89.8335 li
468.054 118 li
468.137 94.8335 li
468.304 101.25 li
468.387 111.333 li
468.554 117.917 li
468.637 124.917 li
468.721 123.583 li
468.887 124.833 li
468.971 127 li
469.054 113.667 li
469.221 108 li
469.304 126.833 li
469.471 121.75 li
469.554 110.167 li
469.637 105 li
469.804 125.167 li
469.887 109 li
469.971 111.167 li
470.137 105.667 li
470.221 131.083 li
470.387 123.583 li
470.471 104.083 li
470.554 115 li
470.721 107.917 li
470.804 108.667 li
470.971 92.0835 li
471.054 97.5 li
471.137 97.5835 li
471.304 86.4165 li
471.387 94.3335 li
471.471 86.1665 li
471.637 89.9165 li
471.721 98.5 li
471.887 75.25 li
471.971 69.75 li
472.054 81.5 li
472.221 90.4165 li
472.304 92.3335 li
472.387 102.333 li
472.554 108.5 li
472.637 126.917 li
472.804 106.75 li
472.887 87 li
472.971 105 li
473.137 92.1665 li
473.221 107.5 li
473.304 93.0835 li
473.471 103.167 li
473.554 77.4165 li
473.721 87.1665 li
473.804 96.75 li
473.887 110.167 li
474.054 94.3335 li
474.137 103.25 li
474.221 113.083 li
474.387 102.083 li
474.471 102.917 li
474.637 97.5835 li
474.721 74.5 li
474.804 81.1665 li
474.971 83.5835 li
475.054 96.0835 li
475.137 80.9165 li
475.304 86.75 li
475.387 120.083 li
475.554 107.083 li
475.637 120.75 li
475.721 97.4165 li
475.887 103.417 li
475.971 93.5 li
476.054 111 li
476.221 119.333 li
476.304 108.417 li
476.471 99.8335 li
476.554 95.75 li
476.637 105.083 li
476.804 116.083 li
476.887 97.3335 li
477.054 95.5835 li
477.137 88 li
477.221 86.5 li
477.387 76.5835 li
477.471 86.75 li
477.554 69.1665 li
477.721 91.9165 li
477.804 112 li
477.971 88.4165 li
478.054 93.5835 li
478.137 111.75 li
478.304 96.1665 li
478.387 81.3335 li
478.471 77.25 li
478.638 82.4165 li
478.721 65.5835 li
478.888 62.25 li
478.971 63.833 li
479.054 87 li
479.221 96.6665 li
479.304 98.6665 li
479.388 108.75 li
479.554 82.4165 li
479.638 109.75 li
479.804 102.25 li
479.888 88.9165 li
479.971 100.667 li
480.138 99.3335 li
480.221 85.25 li
480.304 80.25 li
480.471 86.9165 li
480.554 98.9165 li
480.721 90.8335 li
480.804 101.25 li
480.888 103.083 li
481.054 108.25 li
481.138 84.0835 li
481.221 110.167 li
481.388 99.4165 li
481.471 114.917 li
481.638 108.917 li
481.721 87.583 li
481.804 88.083 li
481.971 100.083 li
482.054 96 li
482.138 95.6665 li
482.304 64.583 li
482.388 79.75 li
482.554 115.583 li
482.638 93.25 li
482.721 91.6665 li
482.888 103.833 li
482.971 99.833 li
483.138 116.333 li
483.221 103.833 li
483.304 109.917 li
483.471 113.917 li
483.554 106.417 li
483.638 94.583 li
483.804 98.833 li
483.888 97.4165 li
484.054 108.083 li
484.138 110.75 li
484.221 103.75 li
484.388 92.333 li
484.471 98.583 li
484.554 100.167 li
484.721 113.083 li
484.804 97.6665 li
484.971 109 li
485.054 113.917 li
485.138 86 li
485.304 102.583 li
485.388 99.25 li
485.471 84.9165 li
485.638 93.6665 li
485.721 113.917 li
485.888 109.5 li
485.971 95.25 li
486.054 87.1665 li
486.221 92 li
486.304 99.5 li
486.388 93.5835 li
486.555 103.75 li
486.638 70.75 li
486.805 94.0835 li
486.888 91.25 li
486.971 90.6665 li
487.138 90.5 li
487.221 90.75 li
487.22 90.75 mo
487.304 115.417 li
487.47 107.25 li
487.554 89.4165 li
487.721 107.75 li
487.804 128.167 li
487.887 127.5 li
488.054 99.9165 li
488.137 125.25 li
488.221 111.917 li
488.387 102.083 li
488.471 111.417 li
488.637 118.083 li
488.721 128.75 li
488.804 124.083 li
488.971 108.083 li
489.054 106.417 li
489.221 105.833 li
489.304 94.5835 li
489.387 104.833 li
489.554 107.917 li
489.637 90.6665 li
489.721 79.75 li
489.887 96.5 li
489.971 97 li
490.137 105.75 li
490.221 101.333 li
490.304 113.333 li
490.471 92.6665 li
490.554 98.8335 li
490.637 77.5 li
490.804 119.083 li
490.887 111.417 li
491.054 91.0835 li
491.137 85.4165 li
491.221 102.917 li
491.387 104.667 li
491.471 109.5 li
491.554 92.1665 li
491.721 109.667 li
491.804 116 li
491.971 110.917 li
492.054 95.9165 li
492.137 115.583 li
492.304 128.333 li
492.387 104.833 li
492.471 109.333 li
492.637 104.917 li
492.721 111.833 li
492.887 110.833 li
492.971 112.5 li
493.054 103.417 li
493.221 76.3335 li
493.304 92.1665 li
493.387 105.583 li
493.554 90 li
493.637 77.9165 li
493.804 92.8335 li
493.887 82.3335 li
493.971 94.5835 li
494.137 102.333 li
494.221 90.5 li
494.387 83 li
494.471 75.4165 li
494.554 70.0835 li
494.721 77.4165 li
494.804 68.5 li
494.887 99.5 li
495.054 77.5835 li
495.137 85.3335 li
495.304 81.25 li
495.387 64 li
495.471 104.417 li
495.637 95.5835 li
495.721 97.5 li
495.804 84.75 li
495.971 105 li
496.054 88.8335 li
496.221 82.8335 li
496.304 91.0835 li
496.387 87.9165 li
496.554 79.6665 li
496.637 89.4165 li
496.721 87.5 li
496.887 88.5835 li
496.971 100.667 li
497.137 89 li
497.221 102.75 li
497.304 95.9165 li
497.471 88.5 li
497.554 85.75 li
497.637 89.0835 li
497.804 81.4165 li
497.887 83.9165 li
498.054 103.333 li
498.137 91.8335 li
498.221 84.75 li
498.387 88 li
498.471 112.25 li
498.554 95 li
498.721 97.5 li
498.804 81.1665 li
498.971 103.5 li
499.054 114 li
499.137 100.75 li
499.304 103.167 li
499.387 87.25 li
499.471 108.917 li
499.637 83.5 li
499.721 91.6665 li
499.887 94.6665 li
499.971 90.3335 li
500.054 99.9165 li
500.221 100.583 li
500.304 100.75 li
500.471 83.8335 li
500.554 105.583 li
500.637 84.417 li
500.804 104.167 li
500.887 92.667 li
500.971 78.8335 li
501.137 99 li
501.221 111.25 li
501.387 77.0835 li
501.471 85.1665 li
501.554 75.1665 li
501.721 87.9165 li
501.804 97.0835 li
501.887 84.75 li
502.054 89.9165 li
502.138 93.5 li
502.304 86.25 li
502.388 81.1665 li
502.471 84.8335 li
502.638 57.25 li
502.721 83 li
502.804 92.3335 li
502.971 90.0835 li
503.054 91.3335 li
503.221 87.8335 li
503.304 114.917 li
503.388 104.417 li
503.554 77.667 li
503.638 83.4165 li
503.721 104.667 li
503.888 95.667 li
503.971 100.25 li
504.138 97.3335 li
504.221 107.083 li
504.304 82.667 li
504.471 103.167 li
504.554 93.3335 li
504.638 87.3335 li
504.804 85.167 li
504.888 74.417 li
505.054 80.167 li
505.138 70.8335 li
505.221 68.417 li
505.388 93.5 li
505.471 92.167 li
505.554 95.3335 li
505.721 103.417 li
505.804 86.5835 li
505.971 78.5 li
506.054 96 li
506.138 83.3335 li
506.304 100.667 li
506.388 109.083 li
506.554 105.667 li
506.638 74.8335 li
506.721 104.083 li
506.888 91.5835 li
506.971 82.917 li
507.054 96.25 li
507.221 78.667 li
507.304 93.417 li
507.471 90.417 li
507.554 93.75 li
507.638 77.0835 li
507.804 75.5 li
507.888 73.667 li
507.971 65.5 li
508.138 103.083 li
508.221 83.25 li
508.388 86 li
508.471 102.583 li
508.554 82.75 li
508.721 90.3335 li
508.804 84 li
508.888 95.167 li
509.054 87.5 li
509.138 81.75 li
509.304 110.083 li
509.388 86.5 li
509.471 71 li
509.638 78.3335 li
509.721 91.5835 li
509.804 90.5835 li
509.971 89.167 li
510.054 74.3335 li
510.221 85.0835 li
510.304 72.25 li
510.388 84.0835 li
510.554 67.167 li
510.638 86.0835 li
510.721 82.25 li
510.888 90.417 li
510.971 104.917 li
511.138 79.667 li
511.221 66.8335 li
511.304 63.25 li
511.471 102.5 li
511.554 79.917 li
511.638 72 li
511.804 75.75 li
511.888 91 li
512.054 94.917 li
512.138 85.3335 li
512.221 98.917 li
512.388 95.5835 li
512.471 75.75 li
512.638 81.167 li
512.721 82.25 li
512.804 93.5835 li
512.971 87.5835 li
513.054 102.583 li
513.138 97.667 li
513.304 107.083 li
513.388 102.167 li
513.554 84.417 li
513.638 98.25 li
513.721 84.167 li
513.888 89 li
513.971 101.25 li
514.054 102.917 li
514.221 102.833 li
514.304 97 li
514.471 86.0835 li
514.554 91.667 li
514.638 120.167 li
514.804 124.917 li
514.888 105.417 li
514.971 110.417 li
515.138 118.583 li
515.221 114.5 li
515.388 114.5 li
515.471 97 li
515.554 108 li
515.721 98.5835 li
515.804 95.3335 li
515.888 102.5 li
516.054 103.667 li
516.138 102.75 li
516.304 94.8335 li
516.388 75.167 li
516.471 58.75 li
516.638 102.167 li
516.721 110.333 li
516.804 108.083 li
516.971 109 li
517.054 104.833 li
517.221 89.167 li
517.304 102.25 li
517.388 96.5 li
517.554 103.833 li
517.638 87.167 li
517.721 96.25 li
517.888 99.25 li
517.971 95.8335 li
518.138 107.917 li
518.221 107.75 li
518.304 82.917 li
518.471 68.8335 li
518.554 93.3335 li
518.721 95.25 li
518.804 64.5835 li
518.888 87.417 li
519.054 96.5835 li
519.138 93.667 li
519.221 108 li
519.388 111.417 li
519.471 79 li
519.638 89.5835 li
519.721 80.75 li
519.804 98 li
519.971 101.167 li
520.054 90.3335 li
520.138 107.833 li
520.304 84.8335 li
520.388 94.0835 li
520.554 87.417 li
520.638 94.667 li
520.721 98.667 li
520.888 100.25 li
520.971 91.417 li
521.055 83.25 li
521.221 86.5 li
521.305 97.75 li
521.471 101.583 li
521.555 76.917 li
521.554 76.9165 mo
521.637 92.75 li
521.804 97 li
521.887 75.5835 li
521.971 86 li
522.137 73.8335 li
522.221 99 li
522.387 98.9165 li
522.471 93.25 li
522.554 85.8335 li
522.721 101.583 li
522.804 95.6665 li
522.887 66.6665 li
523.054 77 li
523.137 104.167 li
523.304 85.3335 li
523.387 85.0835 li
523.471 87.5835 li
523.637 87.0835 li
523.721 99 li
523.887 71.5835 li
523.971 111.167 li
524.054 108.333 li
524.221 134.417 li
524.304 120.667 li
524.387 128.833 li
524.554 130.5 li
524.637 105.167 li
524.804 113.25 li
524.887 123.333 li
524.971 122.75 li
525.137 121.75 li
525.221 105.5 li
525.304 107.667 li
525.471 127.667 li
525.554 135.083 li
525.721 132.25 li
525.804 92.5 li
525.887 116.167 li
526.054 108.583 li
526.137 115.833 li
526.221 93.6665 li
526.387 102.167 li
526.471 114.917 li
526.637 94.8335 li
526.721 90.25 li
526.804 91.0835 li
526.971 105.5 li
527.054 117.583 li
527.137 85.6665 li
527.304 92.0835 li
527.387 101.833 li
527.554 90.25 li
527.637 96.1665 li
527.721 97.3335 li
527.887 93.8335 li
527.971 78.6665 li
528.054 75.8335 li
528.221 82.0835 li
528.304 87.6665 li
528.471 86.3335 li
528.554 93.3335 li
528.637 91.5835 li
528.804 105.583 li
528.887 102.75 li
528.971 122.75 li
529.137 112.083 li
529.221 106.75 li
529.387 122.75 li
529.471 125 li
529.554 85.3335 li
529.721 100.583 li
529.804 106 li
529.971 64.3335 li
530.054 68.5835 li
530.137 73.5835 li
530.304 76.1665 li
530.387 77.75 li
530.471 90.9165 li
530.637 102.5 li
530.721 83.1665 li
530.887 88.0835 li
530.971 98 li
531.054 96.5 li
531.221 97.9165 li
531.304 89.4165 li
531.387 73.3335 li
531.554 77.9165 li
531.637 87.1665 li
531.804 106.5 li
531.887 94.9165 li
531.971 105.417 li
532.137 98.8335 li
532.221 80.8335 li
532.304 82.25 li
532.471 81.9165 li
532.554 90.1665 li
532.721 56.5 li
532.804 89.8335 li
532.887 86.0835 li
533.054 67.5 li
533.137 93.5 li
533.221 86 li
533.387 96.3335 li
533.471 92.0835 li
533.637 70.9165 li
533.721 101.5 li
533.804 97.8335 li
533.971 66.9165 li
534.054 101.917 li
534.137 101.25 li
534.304 91.5835 li
534.387 95.4165 li
534.554 108.667 li
534.637 102.833 li
534.721 92.5835 li
534.887 112.75 li
534.971 101.5 li
535.054 95.25 li
535.221 98.5835 li
535.304 122 li
535.471 110.25 li
535.554 117.5 li
535.637 109.167 li
535.804 72.8335 li
535.887 84.6665 li
536.054 91.5835 li
536.137 77.5 li
536.221 85.5 li
536.387 97.75 li
536.471 99 li
536.554 101.167 li
536.721 118.5 li
536.804 84.1665 li
536.971 106.917 li
537.054 98 li
537.138 100.833 li
537.304 126.75 li
537.388 97.1665 li
537.471 91.5 li
537.638 77.75 li
537.721 75.5 li
537.888 95.8335 li
537.971 83.1665 li
538.054 84.3335 li
538.221 85.75 li
538.304 89.1665 li
538.388 68.9165 li
538.554 68.5835 li
538.638 99.8335 li
538.804 65.75 li
538.888 74.0835 li
538.971 73.0835 li
539.138 105.417 li
539.221 86.25 li
539.304 91.25 li
539.471 97.5 li
539.554 100.833 li
539.721 74.0835 li
539.804 74.8335 li
539.888 94 li
540.054 114.417 li
540.138 119.25 li
540.221 96.8335 li
540.388 113.5 li
540.471 107.75 li
540.638 82 li
540.721 73.3335 li
540.804 86.8335 li
540.971 91.3335 li
541.054 92.4165 li
541.138 98.75 li
541.304 113.333 li
541.388 93.6665 li
541.554 90.6665 li
541.638 114.583 li
541.721 117.417 li
541.888 97.9165 li
541.971 104.917 li
542.138 96.3335 li
542.221 102.5 li
542.304 98.4165 li
542.471 104.917 li
542.554 98.4165 li
542.638 98.8335 li
542.804 92.25 li
542.888 80.5 li
543.054 112.833 li
543.138 79.25 li
543.221 106.667 li
543.388 118.667 li
543.471 108.917 li
543.554 90.25 li
543.721 82.3335 li
543.804 76.0835 li
543.971 86.6665 li
544.054 109.583 li
544.138 94.75 li
544.304 96.5 li
544.388 92.0835 li
544.471 95.75 li
544.638 70.3335 li
544.721 53.8335 li
544.888 81.4165 li
544.971 97 li
545.054 102.917 li
545.221 112.5 li
545.304 101.833 li
545.388 79.4165 li
545.554 95.4165 li
545.638 89.5835 li
545.804 97.6665 li
545.888 82.5835 li
545.971 92.4165 li
546.138 89.75 li
546.221 90.9165 li
546.304 71.5 li
546.471 84.9165 li
546.554 83.8335 li
546.721 70.8335 li
546.804 81.5835 li
546.888 88.3335 li
547.054 71.1665 li
547.138 62.8335 li
547.304 71.5 li
547.388 81.75 li
547.471 91.25 li
547.638 75.9165 li
547.721 121.083 li
547.804 109.75 li
547.971 91.75 li
548.054 119.417 li
548.221 113.417 li
548.304 100.583 li
548.388 118.917 li
548.554 93.8335 li
548.638 91.3335 li
548.721 89.4165 li
548.888 88.75 li
548.971 96.6665 li
549.138 88 li
549.221 80.5835 li
549.304 97.6665 li
549.471 92.6665 li
549.554 104.667 li
549.638 84.75 li
549.804 85.9165 li
549.888 90.8335 li
550.054 98.5835 li
550.138 88.75 li
550.221 101.667 li
550.388 95.25 li
550.471 102.667 li
550.554 129.167 li
550.721 100.25 li
550.804 78.9165 li
550.971 93.5 li
551.054 82 li
551.138 71.9165 li
551.304 74 li
551.388 78.5 li
551.471 82.25 li
551.638 63 li
551.721 76.25 li
551.888 80.9165 li
551.971 60.8335 li
552.054 104.5 li
552.221 86.0835 li
552.304 99.8335 li
552.388 89.8335 li
552.554 91.0835 li
552.638 71.0835 li
552.804 60.3335 li
552.888 97.3335 li
552.971 77.1665 li
553.138 93.1665 li
553.221 89.1665 li
553.388 84.25 li
553.471 87.0835 li
553.554 94.0835 li
553.721 88.5835 li
553.804 105 li
553.888 101.417 li
554.054 91.25 li
554.138 116.5 li
554.304 100.25 li
554.388 102.75 li
554.471 91.0835 li
554.638 83.5 li
554.721 88.0835 li
554.804 74.5835 li
554.971 86.8335 li
555.054 110.167 li
555.221 88.4165 li
555.305 74.6665 li
555.388 87.75 li
555.555 82 li
555.638 85.75 li
555.721 74.4165 li
555.888 98.3335 li
555.887 98.3335 mo
555.971 100.167 li
556.137 85.3335 li
556.221 94 li
556.304 80.3335 li
556.471 101.583 li
556.554 55.6665 li
556.637 100.75 li
556.804 83.5835 li
556.887 109.667 li
557.054 88.75 li
557.137 98.1665 li
557.221 89.0835 li
557.387 97.5 li
557.471 67.9165 li
557.554 86.4165 li
557.721 85.75 li
557.804 93.4165 li
557.971 84.25 li
558.054 87.8335 li
558.137 96.3335 li
558.304 70.4165 li
558.387 73 li
558.471 89.5 li
558.637 82.3335 li
558.721 88.5835 li
558.887 76.5835 li
558.971 82.6665 li
559.054 85.75 li
559.221 108.667 li
559.304 97.9165 li
559.471 94.9165 li
559.554 107.75 li
559.637 85.1665 li
559.804 103.583 li
559.887 94.5835 li
559.971 96.25 li
560.137 78.1665 li
560.221 105.083 li
560.387 111.167 li
560.471 78.1665 li
560.554 98.5835 li
560.721 110.333 li
560.804 93.3335 li
560.887 87.1665 li
561.054 81.9165 li
561.137 84 li
561.304 73.0835 li
561.387 66 li
561.471 69.1665 li
561.637 55.5835 li
561.721 90.25 li
561.804 77.4165 li
561.971 83.6665 li
562.054 86.3335 li
562.221 70.75 li
562.304 69.1665 li
562.387 75.6665 li
562.554 81.75 li
562.637 78.5835 li
562.721 69.6665 li
562.887 85.25 li
562.971 90.0835 li
563.137 81.3335 li
563.221 91.4165 li
563.304 85.9165 li
563.471 84.9165 li
563.554 70.75 li
563.637 75.9165 li
563.804 99.9165 li
563.887 115 li
564.054 89.4165 li
564.137 97.25 li
564.221 103.417 li
564.387 124.75 li
564.471 118.667 li
564.554 79.5835 li
564.721 85.5835 li
564.804 109.667 li
564.971 126.5 li
565.054 92.6665 li
565.137 80.3335 li
565.304 93 li
565.387 75.6665 li
565.554 92 li
565.637 114.75 li
565.721 127.75 li
565.887 118.083 li
565.971 109.417 li
566.054 123.333 li
566.221 93.9165 li
566.304 102.667 li
566.471 114.167 li
566.554 84.25 li
566.637 95.6665 li
566.804 98.5835 li
566.887 70.25 li
566.971 94.4165 li
567.137 74.8335 li
567.221 80.3335 li
567.387 87.6665 li
567.471 79 li
567.554 91.4165 li
567.721 76.9165 li
567.804 64 li
567.887 87.1665 li
568.054 86.3335 li
568.137 92.6665 li
568.304 79.25 li
568.387 84.5 li
568.471 86.5 li
568.637 83 li
568.721 83.25 li
568.804 88.1665 li
568.971 102.833 li
569.054 91.8335 li
569.221 86.9165 li
569.304 96.1665 li
569.387 85.8335 li
569.554 84.75 li
569.638 76.1665 li
569.721 82.5 li
569.888 88.5835 li
569.971 107.833 li
570.138 95 li
570.221 72.5835 li
570.304 64.75 li
570.471 77.8335 li
570.554 71.1665 li
570.638 84.8335 li
570.804 78.5 li
570.888 82.1665 li
571.054 97.6665 li
571.138 87.3335 li
571.221 65.5835 li
571.388 80.8335 li
571.471 75.1665 li
571.638 83.1665 li
571.721 80.5835 li
571.804 105.417 li
571.971 82.75 li
572.054 73.3335 li
572.138 79.0835 li
572.304 105.417 li
572.388 100.25 li
572.554 87.25 li
572.638 73.1665 li
572.721 76.5 li
572.888 53 li
572.971 72.8335 li
573.054 60.0835 li
573.221 74.0835 li
573.304 77.3335 li
573.471 84.8335 li
573.554 69.9165 li
573.638 69.8335 li
573.804 62.9165 li
573.888 56.8335 li
573.971 60.0835 li
574.138 104.667 li
574.221 91.5 li
574.388 105.333 li
574.471 81.8335 li
574.554 112.25 li
574.721 71.1665 li
574.804 98.8335 li
574.888 112.25 li
575.054 126 li
575.138 94.5835 li
575.304 100.667 li
575.388 87.3335 li
575.471 86.75 li
575.638 96.9165 li
575.721 102.25 li
575.804 107.333 li
575.971 82.5835 li
576.054 95.9165 li
576.221 86.9165 li
576.304 95.6665 li
576.388 96.0835 li
576.554 97.1665 li
576.638 75.25 li
576.804 88.5 li
576.888 73.6665 li
576.971 87.6665 li
577.138 92 li
577.221 81.5 li
577.304 76.5 li
577.471 70.4165 li
577.554 51.5835 li
577.721 66.3335 li
577.804 72.5835 li
577.888 70.8335 li
578.054 61.8335 li
578.138 76.5835 li
578.221 75.25 li
578.388 75.8335 li
578.471 77.75 li
578.638 67.1665 li
578.721 73.4165 li
578.804 78.0835 li
578.971 84.6665 li
579.054 103.333 li
579.138 71.75 li
579.304 85.3335 li
579.388 75.3335 li
579.554 77 li
579.638 96.3335 li
579.721 80.5835 li
579.888 91.8335 li
579.971 88.8335 li
580.054 86.5835 li
580.221 102.25 li
580.304 80.0835 li
580.471 60.5835 li
580.554 87.8335 li
580.638 72.5 li
580.804 90.0835 li
580.888 81 li
580.971 76.8335 li
581.138 87.75 li
581.221 89 li
581.388 88.8335 li
581.471 82.9165 li
581.554 94.25 li
581.721 84.8335 li
581.804 107.833 li
581.888 94 li
582.054 73.3335 li
582.138 92.0835 li
582.304 62.25 li
582.388 89 li
582.471 93.8335 li
582.638 76.25 li
582.721 93 li
582.888 79.4165 li
582.971 85.4165 li
583.054 89.0835 li
583.221 119.583 li
583.304 94.5835 li
583.388 105.5 li
583.554 82.4165 li
583.638 83.0835 li
583.804 82.0835 li
583.888 80.1665 li
583.971 100.167 li
584.138 80.1665 li
584.221 105.083 li
584.304 82.4165 li
584.471 97.6665 li
584.554 80.3335 li
584.721 77.4165 li
584.804 70.4165 li
584.888 86.1665 li
585.054 55.25 li
585.138 72.5 li
585.221 80.5 li
585.388 79.25 li
585.471 82.1665 li
585.638 88.3335 li
585.721 93.3335 li
585.804 109 li
585.971 89 li
586.054 96.5835 li
586.138 99.1665 li
586.304 83.6665 li
586.388 91.5 li
586.554 100.333 li
586.638 122.583 li
586.721 118.667 li
586.888 127.917 li
586.971 104.75 li
587.054 116.5 li
587.221 90.5835 li
587.304 77 li
587.471 76.6665 li
587.554 92.1665 li
587.638 75.25 li
587.804 101.833 li
587.888 117.167 li
587.971 74.5835 li
588.138 83.0835 li
588.221 83 li
588.388 83.4165 li
588.471 100 li
588.554 86.25 li
588.721 95.1665 li
588.805 108.417 li
588.971 94.5 li
589.054 79 li
589.138 106 li
589.305 94.5835 li
589.388 91.5835 li
589.471 74 li
589.638 97.5835 li
589.721 111.25 li
589.888 102.583 li
589.971 90.5835 li
590.055 116.083 li
590.221 122.25 li
590.22 122.25 mo
590.304 100.667 li
590.387 94.5835 li
590.554 82.6665 li
590.637 96.75 li
590.804 99.0835 li
590.887 74.9165 li
590.97 118.583 li
591.137 114.083 li
591.22 105.167 li
591.304 127.917 li
591.471 108.667 li
591.554 91.25 li
591.72 107.333 li
591.804 107.833 li
591.887 102 li
592.054 82.8335 li
592.137 73.8335 li
592.221 101.667 li
592.387 66.3335 li
592.471 79.1665 li
592.637 96.25 li
592.721 93.8335 li
592.804 99.25 li
592.971 108.25 li
593.054 86.25 li
593.137 96.9165 li
593.304 95.5 li
593.387 88.25 li
593.554 88.4165 li
593.637 84.6665 li
593.721 86.8335 li
593.887 88.8335 li
593.971 113.333 li
594.054 121.5 li
594.221 109.75 li
594.304 118 li
594.471 99.1665 li
594.554 104.5 li
594.637 103.167 li
594.804 91.5 li
594.887 115.833 li
595.054 91 li
595.137 111.917 li
595.221 93.5 li
595.387 96.0835 li
595.471 91.25 li
595.554 82.0835 li
595.721 86.0835 li
595.804 108.5 li
595.971 102.833 li
596.054 99.8335 li
596.137 103.167 li
596.304 88 li
596.387 107.25 li
596.471 93.9165 li
596.637 132.25 li
596.721 107.833 li
596.887 89.5835 li
596.971 77.0835 li
597.054 81.9165 li
597.221 102.083 li
597.304 97 li
597.387 80.8335 li
597.554 99.9165 li
597.637 88.0835 li
597.804 101.667 li
597.887 121.833 li
597.971 103.583 li
598.137 103.5 li
598.221 82.25 li
598.304 114.417 li
598.471 106.083 li
598.554 85.8335 li
598.721 81.3335 li
598.804 74.5 li
598.887 81.3335 li
599.054 72.25 li
599.137 81.5 li
599.221 94.75 li
599.387 103.333 li
599.471 97.6665 li
599.637 77.3335 li
599.721 75 li
599.804 107.25 li
599.971 97.6665 li
600.054 92.1665 li
600.221 101.417 li
600.304 107.833 li
600.387 91.0835 li
600.554 77.3335 li
600.637 67.75 li
600.721 92.6665 li
600.887 102.667 li
600.971 77.6665 li
601.137 100.833 li
601.221 98.1665 li
601.304 103.583 li
601.471 91.5 li
601.554 113.917 li
601.637 95.75 li
601.804 77.6665 li
601.887 99.5 li
602.054 90.75 li
602.137 89.4165 li
602.221 86.4165 li
602.387 105.083 li
602.471 109 li
602.554 112.25 li
602.721 113 li
602.804 105.25 li
602.971 132.083 li
603.054 107.583 li
603.137 133.25 li
603.304 115.5 li
603.387 113.417 li
603.471 97.0835 li
603.637 97.9165 li
603.721 80.25 li
603.887 90.8335 li
603.971 111.917 li
604.054 84.8335 li
604.221 75.75 li
604.304 82.75 li
604.387 76.6665 li
604.554 80.9165 li
604.637 95.6665 li
604.804 79.3335 li
604.887 69.25 li
604.971 59.5835 li
605.137 47.667 li
605.221 85.6665 li
605.304 63.3335 li
605.471 89.1665 li
605.554 85.3335 li
605.721 95.1665 li
605.804 98 li
605.887 97.25 li
606.054 70.3335 li
606.137 77.3335 li
606.304 89.667 li
606.387 98.0835 li
606.471 84.5 li
606.637 88.25 li
606.721 90.667 li
606.804 93.417 li
606.971 69.0835 li
607.054 109.5 li
607.221 112.917 li
607.304 106.5 li
607.387 123.417 li
607.554 121.333 li
607.637 116.25 li
607.721 107.417 li
607.887 96.5835 li
607.971 114.75 li
608.137 88.3335 li
608.221 89.917 li
608.304 87.5835 li
608.471 80.167 li
608.554 85.75 li
608.637 85.5835 li
608.804 85.417 li
608.887 87.3335 li
609.054 69.0835 li
609.137 71.75 li
609.221 83.8335 li
609.387 91.9165 li
609.471 90.9165 li
609.554 112.5 li
609.721 89.3335 li
609.804 104.917 li
609.971 109.5 li
610.054 111.417 li
610.137 137.75 li
610.304 103.833 li
610.387 103.583 li
610.471 75.75 li
610.637 99.25 li
610.721 104.083 li
610.887 112.167 li
610.971 101.583 li
611.054 126.75 li
611.221 105.917 li
611.304 123.667 li
611.387 105.5 li
611.554 104 li
611.637 95.75 li
611.804 101.5 li
611.887 94.5835 li
611.971 88.9165 li
612.137 122.5 li
612.221 87.9165 li
612.387 90.0835 li
612.471 85.9165 li
612.554 84.5835 li
612.721 103.167 li
612.804 110.833 li
612.887 88.6665 li
613.054 104.583 li
613.137 114.75 li
613.304 106.583 li
613.387 95.917 li
613.471 110.917 li
613.637 87.417 li
613.721 99.5835 li
613.804 92.5 li
613.971 110.583 li
614.054 91.5835 li
614.221 99.75 li
614.304 98 li
614.387 103.5 li
614.554 80.75 li
614.637 103.583 li
614.721 74.4165 li
614.887 106.583 li
614.971 118.25 li
615.137 91.0835 li
615.221 117.417 li
615.304 97.3335 li
615.471 75.8335 li
615.554 92 li
615.637 102.167 li
615.804 92.5 li
615.887 91.167 li
616.054 91.5 li
616.137 89.8335 li
616.221 95.3335 li
616.387 98.0835 li
616.471 92.417 li
616.554 106.333 li
616.721 101.583 li
616.804 109.75 li
616.971 114.333 li
617.054 102.333 li
617.137 100.667 li
617.304 109.75 li
617.387 101.25 li
617.471 103.667 li
617.637 103.167 li
617.721 101.5 li
617.887 97.167 li
617.971 107.5 li
618.054 92.5 li
618.221 115.667 li
618.304 87.0835 li
618.471 99.8335 li
618.554 109.75 li
618.637 97.25 li
618.804 105.417 li
618.887 113.25 li
618.971 101.417 li
619.137 96.167 li
619.221 98.3335 li
619.387 89.917 li
619.471 86.3335 li
619.554 119.583 li
619.721 98.667 li
619.804 88.417 li
619.887 86.5835 li
620.054 84.1665 li
620.137 108 li
620.304 82.75 li
620.387 88.4165 li
620.471 80.6665 li
620.637 90.1665 li
620.721 110.417 li
620.804 118.417 li
620.971 107.75 li
621.054 97.25 li
621.221 92.8335 li
621.304 123.083 li
621.387 105.75 li
621.554 93.4165 li
621.637 104.25 li
621.721 99.25 li
621.887 110.667 li
621.971 79.0835 li
622.137 80.75 li
622.221 75.3335 li
622.304 94.25 li
622.471 92.0835 li
622.554 102 li
622.637 117.417 li
622.804 121.25 li
622.887 113.583 li
623.054 112.083 li
623.137 119.667 li
623.221 119.167 li
623.387 104.25 li
623.471 142.75 li
623.554 103.417 li
623.721 98.6665 li
623.804 101.833 li
623.971 120.167 li
624.054 113.833 li
624.137 121.583 li
624.304 98.1665 li
624.387 86.5835 li
624.554 95.25 li
624.554 95.25 mo
624.637 88.5 li
624.721 125.083 li
624.887 98 li
624.971 95.1665 li
625.054 97.8335 li
625.221 98.0835 li
625.304 97.6665 li
625.471 77.0835 li
625.554 98.75 li
625.637 111.417 li
625.804 100.25 li
625.887 114 li
625.971 82.3335 li
626.137 127.917 li
626.221 100.333 li
626.387 76.5835 li
626.471 100.917 li
626.554 96.6665 li
626.721 101.417 li
626.804 96.4165 li
626.887 110.167 li
627.054 111.833 li
627.137 91.6665 li
627.304 136.75 li
627.387 110.25 li
627.471 96.4165 li
627.637 110.833 li
627.721 103.75 li
627.804 109.5 li
627.971 91 li
628.054 113.25 li
628.221 84.6665 li
628.304 107.833 li
628.387 94.5835 li
628.554 88.5835 li
628.637 89 li
628.721 83.8335 li
628.887 103.75 li
628.971 122.917 li
629.137 80.6665 li
629.221 90.9165 li
629.304 106.167 li
629.471 103.833 li
629.554 114.25 li
629.721 116 li
629.804 115.5 li
629.887 115.667 li
630.054 111.833 li
630.137 95.0835 li
630.221 98 li
630.387 96.0835 li
630.471 107.75 li
630.637 94.6665 li
630.721 113.667 li
630.804 111.417 li
630.971 93.3335 li
631.054 109.417 li
631.137 94.25 li
631.304 107.083 li
631.387 102.667 li
631.554 95.8335 li
631.637 78.25 li
631.721 69.8335 li
631.887 83.25 li
631.971 96.75 li
632.054 104.917 li
632.221 104.667 li
632.304 94.9165 li
632.47 108.833 li
632.554 108 li
632.637 120.833 li
632.804 106.667 li
632.887 111.833 li
632.97 123.5 li
633.137 131.25 li
633.22 91.5835 li
633.387 115 li
633.47 88.6665 li
633.554 94.5835 li
633.72 87.25 li
633.804 91.8335 li
633.887 106 li
634.054 90 li
634.137 99.3335 li
634.304 132.583 li
634.387 87.25 li
634.47 72.4165 li
634.637 105.167 li
634.72 83.0835 li
634.804 90 li
634.97 69.8335 li
635.054 62.5835 li
635.22 75.3335 li
635.304 74.5 li
635.387 73.75 li
635.554 95.75 li
635.637 98.5835 li
635.804 108.75 li
635.887 95.25 li
635.97 96.3335 li
636.137 97.5 li
636.22 101.75 li
636.304 90.5 li
636.47 89.75 li
636.554 101.333 li
636.72 118.75 li
636.804 125.75 li
636.887 142.25 li
637.054 118.667 li
637.137 127.75 li
637.22 110.75 li
637.387 129.833 li
637.47 87.4165 li
637.637 93.3335 li
637.72 78 li
637.804 107.75 li
637.97 107.5 li
638.054 110.833 li
638.137 111.167 li
638.304 104.583 li
638.387 105.75 li
638.554 106.417 li
638.637 116.25 li
638.72 125.75 li
638.887 93.3335 li
638.97 108.667 li
639.054 109.25 li
639.22 98.1665 li
639.304 115.167 li
639.47 120.583 li
639.554 114.5 li
639.637 106.583 li
639.804 95.25 li
639.887 97.75 li
639.97 71.6665 li
640.137 83.6665 li
640.22 76.3335 li
640.387 95.8335 li
640.47 101.833 li
640.554 96.25 li
640.72 87 li
640.804 94 li
640.887 109.333 li
641.054 96.8335 li
641.137 77.5835 li
641.304 89.75 li
641.387 99.4165 li
641.47 96.8335 li
641.637 121.583 li
641.72 112.5 li
641.887 102.833 li
641.97 108.667 li
642.054 98.9165 li
642.22 104.333 li
642.304 78 li
642.387 99.75 li
642.554 112.75 li
642.637 94.9165 li
642.804 90.8335 li
642.887 103 li
642.97 91.3335 li
643.137 103.75 li
643.22 78.3335 li
643.304 100.167 li
643.47 94.5835 li
643.554 87.1665 li
643.72 81.6665 li
643.804 99.1665 li
643.887 122.917 li
644.054 97.1665 li
644.137 100.833 li
644.22 91.9165 li
644.387 79.1665 li
644.47 94 li
644.637 111.75 li
644.72 99.8335 li
644.804 93.9165 li
644.97 88.75 li
645.054 102.333 li
645.137 103.25 li
645.304 105.25 li
645.387 104.333 li
645.554 108 li
645.637 108.25 li
645.72 117.583 li
645.887 81.3335 li
645.97 76 li
646.054 81.0835 li
646.22 95.9165 li
646.304 81.8335 li
646.47 77.1665 li
646.554 68 li
646.637 86.75 li
646.804 70 li
646.887 79.6665 li
646.97 99.5835 li
647.137 80.6665 li
647.22 81 li
647.387 76.9165 li
647.47 81.5 li
647.554 89.9165 li
647.72 74.5 li
647.804 93.3335 li
647.97 98.4165 li
648.054 87.9165 li
648.137 99.0835 li
648.304 94.25 li
648.387 90.75 li
648.47 96.4165 li
648.637 104.667 li
648.72 100.25 li
648.887 98.5835 li
648.97 110.917 li
649.054 76.5835 li
649.22 98.9165 li
649.304 81.4165 li
649.387 96.4165 li
649.554 79 li
649.637 111.417 li
649.804 102.75 li
649.887 103.75 li
649.97 67.6665 li
650.137 64.4165 li
650.22 74.3335 li
650.304 93.0835 li
650.47 74.8335 li
650.554 90.5 li
650.72 92.8335 li
650.804 88.0835 li
650.887 69.6665 li
651.054 88.5835 li
651.137 72.1665 li
651.22 62.75 li
651.387 89.1665 li
651.47 100.833 li
651.637 78.4165 li
651.72 78.5 li
651.804 78.4165 li
651.97 84.9165 li
652.054 91.5835 li
652.137 94.6665 li
652.304 82.0835 li
652.387 72.5 li
652.554 82.6665 li
652.637 112.167 li
652.72 110.583 li
652.887 105 li
652.97 92.3335 li
653.137 105.5 li
653.22 81.5 li
653.304 106.333 li
653.47 95.9165 li
653.554 100.167 li
653.637 88.75 li
653.804 98.3335 li
653.887 103.667 li
654.054 72.75 li
654.137 88.5835 li
654.22 89.4165 li
654.387 90.8335 li
654.47 88 li
654.554 105.75 li
654.72 106.75 li
654.804 70.9165 li
654.97 71.1665 li
655.054 92.25 li
655.137 83.25 li
655.304 93.1665 li
655.387 84.6665 li
655.47 88.8335 li
655.637 61.5 li
655.72 92.1665 li
655.887 92.5835 li
655.97 100.5 li
656.054 101.167 li
656.22 112.417 li
656.304 73.9165 li
656.387 90.3335 li
656.554 100.5 li
656.637 83.9165 li
656.804 85 li
656.887 86 li
656.97 81 li
657.137 88.5 li
657.22 72.3335 li
657.304 104.75 li
657.47 108.5 li
657.554 102.917 li
657.72 106.333 li
657.804 99.4165 li
657.887 72.4165 li
658.054 79.3335 li
658.137 69.5 li
658.22 77.4165 li
658.387 86 li
658.47 80.6665 li
658.637 90.75 li
658.72 95 li
658.804 68.1665 li
658.804 68.1665 mo
658.971 87.6665 li
659.054 95.75 li
659.221 74 li
659.304 65.4165 li
659.387 93.0835 li
659.554 92.75 li
659.637 105.833 li
659.721 102.5 li
659.887 98.6665 li
659.97 66.1665 li
660.137 70.9165 li
660.221 61.9165 li
660.304 66 li
660.47 82.5 li
660.554 93 li
660.637 94.4165 li
660.804 88.5 li
660.887 109.833 li
661.054 117.25 li
661.137 110.5 li
661.22 108.333 li
661.387 115.833 li
661.47 114.667 li
661.554 114.417 li
661.72 133.75 li
661.804 70.5835 li
661.97 94.25 li
662.054 119.917 li
662.137 105.333 li
662.304 113.583 li
662.387 99 li
662.47 101.583 li
662.637 86.3335 li
662.72 82.6665 li
662.887 93.5835 li
662.97 96.8335 li
663.054 106.75 li
663.22 93 li
663.304 86.75 li
663.387 89.4165 li
663.554 95.25 li
663.637 91.3335 li
663.804 96 li
663.887 96.6665 li
663.97 94.6665 li
664.137 104.917 li
664.22 107.5 li
664.304 108 li
664.47 120.417 li
664.554 100.417 li
664.72 107.25 li
664.804 110.5 li
664.887 109.417 li
665.054 107.5 li
665.137 96.8335 li
665.304 84.1665 li
665.387 91.8335 li
665.47 93.9165 li
665.637 86.25 li
665.72 93.3335 li
665.804 116 li
665.97 114.833 li
666.054 106.167 li
666.22 127.75 li
666.304 126.167 li
666.387 108.667 li
666.554 109.75 li
666.637 102.083 li
666.72 91.9165 li
666.887 92.9165 li
666.97 83.6665 li
667.137 93.3335 li
667.22 103.583 li
667.304 106.583 li
667.47 116.417 li
667.554 123.25 li
667.637 112.75 li
667.804 112 li
667.887 112.833 li
668.054 110.167 li
668.137 135.833 li
668.22 118.083 li
668.387 97.4165 li
668.47 106.5 li
668.554 115.333 li
668.72 118 li
668.804 124 li
668.97 102 li
669.054 103.167 li
669.137 99.25 li
669.304 98.5835 li
669.387 101.167 li
669.47 75.5 li
669.637 96.5835 li
669.72 107.333 li
669.887 96 li
669.97 120.417 li
670.054 84.5835 li
670.22 105.833 li
670.304 101.667 li
670.387 111.667 li
670.554 115.583 li
670.637 114.417 li
670.804 104.667 li
670.887 105.417 li
670.97 84.0835 li
671.137 111.25 li
671.22 106.5 li
671.387 101.333 li
671.47 111.167 li
671.554 100.917 li
671.72 117.667 li
671.804 124.75 li
671.887 134.333 li
672.054 111.583 li
672.137 121.5 li
672.304 110.333 li
672.387 109.167 li
672.47 99.9165 li
672.637 82.5 li
672.72 97.5 li
672.804 80 li
672.97 85.1665 li
673.054 91.75 li
673.22 93.0835 li
673.304 122.917 li
673.387 107.333 li
673.554 112.417 li
673.637 92 li
673.72 104.75 li
673.887 98.25 li
673.97 107.417 li
674.137 113.5 li
674.22 96.9165 li
674.304 107.333 li
674.47 103.75 li
674.554 108 li
674.637 102.75 li
674.804 122.5 li
674.887 114 li
675.054 96.4165 li
675.137 114.333 li
675.22 127.917 li
675.387 127.917 li
675.47 147.833 li
675.554 109.5 li
675.72 98.8335 li
675.804 92.25 li
675.97 114.333 li
676.054 103.833 li
676.137 80.1665 li
676.304 108.25 li
676.387 97.3335 li
676.47 119.667 li
676.637 88.25 li
676.72 109 li
676.887 106 li
676.97 92 li
677.054 101.833 li
677.22 94.25 li
677.304 113.25 li
677.47 107.333 li
677.554 106.583 li
677.637 78.1665 li
677.804 87.6665 li
677.887 111.417 li
677.97 97.0835 li
678.137 110.833 li
678.22 109.25 li
678.387 77.0835 li
678.47 62.5835 li
678.554 101.417 li
678.72 104.167 li
678.804 118.167 li
678.887 108 li
679.054 97.8335 li
679.137 93.0835 li
679.304 100.083 li
679.387 90.4165 li
679.47 111.333 li
679.637 80.75 li
679.72 102.083 li
679.804 93 li
679.97 86.8335 li
680.054 94 li
680.22 72.4165 li
680.304 86.4165 li
680.387 78.75 li
680.554 114.417 li
680.637 90.5835 li
680.72 66.75 li
680.887 101.25 li
680.97 92.6665 li
681.137 73.75 li
681.22 83.1665 li
681.304 70.3335 li
681.47 83.5 li
681.554 94.25 li
681.637 97.4165 li
681.804 97 li
681.887 73.0835 li
682.054 84.25 li
682.137 104.917 li
682.22 75.25 li
682.387 85.8335 li
682.47 91.6665 li
682.637 100.25 li
682.72 97.5 li
682.804 100.5 li
682.97 83.3335 li
683.054 103.75 li
683.137 97.75 li
683.304 85.6665 li
683.387 100 li
683.554 63.5 li
683.637 101.333 li
683.72 78.3335 li
683.887 88.0835 li
683.97 86.1665 li
684.054 88.5 li
684.22 87.5835 li
684.304 72.75 li
684.47 80.25 li
684.554 75.8335 li
684.637 83.1665 li
684.804 64.1665 li
684.887 88.3335 li
684.97 74 li
685.137 93.0835 li
685.22 80.4165 li
685.387 86.5835 li
685.47 90.1665 li
685.554 85.5 li
685.72 107.833 li
685.804 99.25 li
685.887 83.75 li
686.054 79.75 li
686.137 105.833 li
686.304 97.0835 li
686.387 86.5 li
686.47 94.0835 li
686.637 88.25 li
686.72 89 li
686.804 108.917 li
686.97 88.75 li
687.054 87.75 li
687.22 100.833 li
687.304 82.0835 li
687.387 92.5 li
687.554 74.0835 li
687.637 74.9165 li
687.72 82.4165 li
687.887 95.8335 li
687.97 83.4165 li
688.137 77 li
688.22 91.4165 li
688.304 88.9165 li
688.471 138 li
688.554 103.75 li
688.72 106 li
688.804 109.417 li
688.887 100.833 li
689.054 98.4165 li
689.137 98.8335 li
689.221 90.25 li
689.387 70.6665 li
689.471 106 li
689.637 99.25 li
689.721 108.833 li
689.804 85 li
689.971 93.0835 li
690.054 106.25 li
690.137 116.5 li
690.304 109.167 li
690.387 114.167 li
690.554 93.4165 li
690.637 104.917 li
690.721 90.1665 li
690.887 88.75 li
690.971 100.75 li
691.054 114.917 li
691.221 95.75 li
691.304 107.417 li
691.471 88.5835 li
691.554 102.417 li
691.637 100.083 li
691.804 78.75 li
691.887 79.4165 li
691.971 66.3335 li
692.137 102.417 li
692.221 80.25 li
692.387 51.1665 li
692.471 73 li
692.554 101.917 li
692.721 86.5835 li
692.804 84.3335 li
692.887 101.417 li
693.054 82 li
693.137 88.0835 li
693.137 88.0835 mo
693.304 87.25 li
693.387 113.5 li
693.471 107.167 li
693.637 92.5835 li
693.721 103.833 li
693.804 92.1665 li
693.971 70.75 li
694.054 82.9165 li
694.221 87.5 li
694.304 74.0835 li
694.387 81.4165 li
694.554 76.75 li
694.637 90.4165 li
694.804 104.75 li
694.887 114 li
694.971 105.333 li
695.137 78.8335 li
695.221 103.167 li
695.304 69.6665 li
695.471 91.9165 li
695.554 80 li
695.721 72.6665 li
695.804 64.9165 li
695.887 72.8335 li
696.054 84.4165 li
696.137 82.4165 li
696.221 86.9165 li
696.387 84.5 li
696.471 86.5 li
696.637 79.3335 li
696.721 65.5 li
696.804 80.8335 li
696.971 67.25 li
697.054 67.4165 li
697.137 57.25 li
697.304 88.5 li
697.387 73.75 li
697.554 64.9165 li
697.637 101.75 li
697.721 103.333 li
697.887 72.0835 li
697.971 103.917 li
698.054 78.5 li
698.221 82.0835 li
698.304 87.3335 li
698.471 71.3335 li
698.554 58.4165 li
698.637 83.5835 li
698.804 69.9165 li
698.887 66.75 li
698.971 73.9165 li
699.137 77.5835 li
699.221 87 li
699.387 87.5835 li
699.471 89.1665 li
699.554 77.5835 li
699.721 57.3335 li
699.804 57.5835 li
699.887 74 li
700.054 68.6665 li
700.137 84.5835 li
700.304 83.5 li
700.387 86.8335 li
700.471 59.0835 li
700.637 83.5835 li
700.721 74.5 li
700.887 47.3335 li
700.971 63.5835 li
701.054 95.0835 li
701.221 81.5 li
701.304 55 li
701.387 68.8335 li
701.554 63.5835 li
701.637 71.1665 li
701.804 70.5835 li
701.887 76.4165 li
701.971 68.4165 li
702.137 91.0835 li
702.221 90.0835 li
702.304 114.167 li
702.471 92.9165 li
702.554 95.0835 li
702.721 92.5835 li
702.804 90.75 li
702.887 104.417 li
703.054 99.4165 li
703.137 87.8335 li
703.221 86.25 li
703.387 76.25 li
703.471 76.9165 li
703.637 78.8335 li
703.721 94.6665 li
703.804 88.6665 li
703.971 89.8335 li
704.054 92.75 li
704.137 98 li
704.304 79.0835 li
704.387 90.0835 li
704.554 90 li
704.637 78.25 li
704.721 74.3335 li
704.887 79.8335 li
704.971 58.5 li
705.054 78.5 li
705.221 97 li
705.304 75.5835 li
705.471 87 li
705.554 82.6665 li
705.637 84.8335 li
705.804 89.1665 li
705.887 77.75 li
706.054 67.1665 li
706.137 96.5835 li
706.221 96 li
706.387 103.583 li
706.471 83.5835 li
706.554 89.5 li
706.721 85.8335 li
706.804 81.75 li
706.971 74.3335 li
707.054 93.1665 li
707.137 78.8335 li
707.304 67 li
707.387 67.5835 li
707.471 76.0835 li
707.637 110.333 li
707.721 94 li
707.887 88.25 li
707.971 58.8335 li
708.054 77.1665 li
708.221 89.6665 li
708.304 75.25 li
708.387 68.6665 li
708.554 99.3335 li
708.637 101 li
708.804 86.0835 li
708.887 80.1665 li
708.971 78.6665 li
709.137 84.6665 li
709.221 100.167 li
709.304 58.8335 li
709.471 79.9165 li
709.554 83.25 li
709.721 79.9165 li
709.804 84.5 li
709.887 78.3335 li
710.054 73.0835 li
710.137 82.8335 li
710.221 76.25 li
710.387 90.9165 li
710.471 84.25 li
710.637 72.0835 li
710.721 84.75 li
710.804 101.25 li
710.971 90.5835 li
711.054 97.4165 li
711.137 87.0835 li
711.304 87.9165 li
711.387 83.0835 li
711.554 98 li
711.637 112.75 li
711.721 89.6665 li
711.887 98.75 li
711.971 110.25 li
712.137 98.75 li
712.221 90 li
712.304 80.0835 li
712.471 80.3335 li
712.554 80.1665 li
712.637 81.4165 li
712.804 71.5 li
712.887 92.9165 li
713.054 79.5835 li
713.137 83.75 li
713.221 94.5 li
713.387 89.6665 li
713.471 98.4165 li
713.554 83.5 li
713.721 78.0835 li
713.804 79.75 li
713.971 71.5 li
714.054 63.25 li
714.137 94.9165 li
714.304 75.5 li
714.387 80.75 li
714.471 110.333 li
714.637 88.1665 li
714.721 67.5 li
714.887 76.1665 li
714.971 70.9165 li
715.054 63.3335 li
715.221 50.4165 li
715.304 73.75 li
715.387 63.0835 li
715.554 78.1665 li
715.637 67.25 li
715.804 54.5835 li
715.887 58.6665 li
715.971 66.8335 li
716.137 66.8335 li
716.221 76.3335 li
716.304 72.5835 li
716.471 72.4165 li
716.554 63.8335 li
716.721 74.75 li
716.804 58.25 li
716.888 67.4165 li
717.054 52.25 li
717.138 38.9165 li
717.221 63.5 li
717.388 72.8335 li
717.471 74.8335 li
717.638 71 li
717.721 69.5835 li
717.804 84.1665 li
717.971 72.833 li
718.054 78.583 li
718.221 82.25 li
718.304 79.1665 li
718.388 95.1665 li
718.554 95.5 li
718.638 91.3335 li
718.721 87.5 li
718.888 75.8335 li
718.971 84.9165 li
719.138 94.8335 li
719.221 74 li
719.304 80 li
719.471 76.6665 li
719.554 69.5835 li
719.638 90.4165 li
719.804 91.9165 li
719.888 103.917 li
720.054 71.5 li
720.138 84.083 li
720.221 93.75 li
720.388 102 li
720.471 92.4165 li
720.554 88.583 li
720.721 93.6665 li
720.804 82.1665 li
720.971 87.25 li
721.054 98.5 li
721.138 81.333 li
721.304 56.25 li
721.388 75.25 li
721.471 89.5835 li
721.638 93.3335 li
721.721 84.5 li
721.888 75.25 li
721.971 85.0835 li
722.054 72.75 li
722.221 85.9165 li
722.304 94.4165 li
722.388 86 li
722.554 89 li
722.638 86 li
722.804 80.583 li
722.888 73.833 li
722.971 79.5 li
723.138 75.6665 li
723.221 74.4165 li
723.304 77.333 li
723.471 71 li
723.554 93.083 li
723.721 97.583 li
723.804 97.5 li
723.888 78.9165 li
724.054 82.75 li
724.138 101.917 li
724.304 109.083 li
724.388 90.1665 li
724.471 92 li
724.638 85 li
724.721 72.9165 li
724.804 86.75 li
724.971 56.4165 li
725.054 64.833 li
725.221 74.25 li
725.304 76.4165 li
725.388 55.4165 li
725.554 74.9165 li
725.638 63.5 li
725.721 64.5 li
725.888 73.333 li
725.971 63.1665 li
726.138 78.25 li
726.221 99.4165 li
726.304 90.6665 li
726.471 114.333 li
726.554 93.1665 li
726.638 66.4165 li
726.804 78.75 li
726.888 83.75 li
727.054 84.583 li
727.138 87.1665 li
727.221 94.9165 li
727.388 119.167 li
727.471 72.75 li
727.47 72.75 mo
727.554 71 li
727.72 76.5835 li
727.804 55.75 li
727.97 86.75 li
728.054 79.5 li
728.137 85.1665 li
728.304 91.75 li
728.387 92 li
728.47 77.0835 li
728.637 94.1665 li
728.721 89.5835 li
728.887 79.3335 li
728.971 92.6665 li
729.054 111 li
729.221 106.333 li
729.304 98 li
729.387 94.25 li
729.554 114.25 li
729.637 102 li
729.804 111.667 li
729.887 116.917 li
729.971 120.583 li
730.137 122.5 li
730.221 111.167 li
730.387 85.4165 li
730.471 102.167 li
730.554 101.667 li
730.721 89.5835 li
730.804 122.083 li
730.887 105.25 li
731.054 114.917 li
731.137 116.75 li
731.304 77.3335 li
731.387 114.75 li
731.471 121.5 li
731.637 112.583 li
731.721 99.5 li
731.804 112.25 li
731.971 87 li
732.054 94.5 li
732.221 98.9165 li
732.304 94 li
732.387 111.25 li
732.554 97.75 li
732.637 105.5 li
732.721 77.3335 li
732.887 87.5835 li
732.971 88.1665 li
733.137 90.0835 li
733.221 114.75 li
733.304 97.25 li
733.471 99.5835 li
733.554 90 li
733.637 90.5835 li
733.804 92.5835 li
733.887 88.0835 li
734.054 129 li
734.137 83.4165 li
734.221 85.0835 li
734.387 95.3335 li
734.471 83.25 li
734.554 80.1665 li
734.721 91 li
734.804 84.75 li
734.971 118 li
735.054 93.25 li
735.137 73.0835 li
735.304 80.5835 li
735.387 80.0835 li
735.554 112 li
735.637 101.75 li
735.721 92.5835 li
735.887 112.833 li
735.971 86 li
736.054 88.5 li
736.221 109.167 li
736.304 117.583 li
736.471 81.4165 li
736.554 109.5 li
736.637 105.5 li
736.804 81.4165 li
736.887 106.583 li
736.971 71.0835 li
737.137 69.8335 li
737.221 91.4165 li
737.387 94.75 li
737.471 99.5835 li
737.554 109.667 li
737.721 82.8335 li
737.804 89.8335 li
737.887 69 li
738.054 86.75 li
738.137 78.5 li
738.304 94.4165 li
738.387 85.25 li
738.471 108.583 li
738.637 101.833 li
738.721 77 li
738.804 110.333 li
738.971 115.417 li
739.054 103.5 li
739.221 124.417 li
739.304 101.167 li
739.387 114 li
739.554 104.333 li
739.637 114.583 li
739.721 107 li
739.887 81.4165 li
739.971 102.75 li
740.137 119.917 li
740.221 92.0835 li
740.304 73.4165 li
740.471 92.25 li
740.554 78.3335 li
740.637 84.75 li
740.804 95.75 li
740.887 105.5 li
741.054 95.25 li
741.137 96.25 li
741.221 117.167 li
741.387 85.1665 li
741.471 94.1665 li
741.638 65.9165 li
741.721 81.5 li
741.804 75.4165 li
741.971 97.5835 li
742.054 120.917 li
742.138 99 li
742.304 95 li
742.388 99.6665 li
742.554 81.5835 li
742.638 90.75 li
742.721 101.667 li
742.888 108.833 li
742.971 121.167 li
743.054 92.4165 li
743.221 92.1665 li
743.304 97.6665 li
743.471 96.1665 li
743.554 85.5835 li
743.638 78.0835 li
743.804 78.3335 li
743.888 109.917 li
743.971 119.333 li
744.138 97.8335 li
744.221 92.75 li
744.388 87.75 li
744.471 97.3335 li
744.554 91.5835 li
744.721 100 li
744.804 76.5835 li
744.888 67.5835 li
745.054 64.5835 li
745.138 36.3335 li
745.304 66.5835 li
745.388 84.5 li
745.471 63.6665 li
745.638 78.3335 li
745.721 91.6665 li
745.804 77.5 li
745.971 86.5835 li
746.054 61.6665 li
746.221 65 li
746.304 75.0835 li
746.388 79.25 li
746.554 72.1665 li
746.638 74.25 li
746.721 81.6665 li
746.888 58.3335 li
746.971 81.5 li
747.138 76.4165 li
747.221 84.9165 li
747.304 92.4165 li
747.471 103.167 li
747.554 79.9165 li
747.721 88.5 li
747.804 75.3335 li
747.888 94.0835 li
748.054 80.5835 li
748.138 82.9165 li
748.221 85.8335 li
748.388 77.25 li
748.471 88.8335 li
748.638 82.75 li
748.721 94 li
748.804 77.0835 li
748.971 71.3335 li
749.054 85 li
749.138 72.6665 li
749.304 70.75 li
749.388 96.9165 li
749.554 93.25 li
749.638 69.0835 li
749.721 96 li
749.888 80.9165 li
749.971 77 li
750.054 83.25 li
750.221 81 li
750.304 56.6665 li
750.471 83.9165 li
750.554 81.1665 li
750.638 78.8335 li
750.804 77.8335 li
750.888 70.6665 li
750.971 84.5 li
751.138 86.0835 li
751.221 92.0835 li
751.388 66.75 li
751.471 46.1665 li
751.554 62.8335 li
751.721 79.25 li
751.804 60.9165 li
751.888 83.8335 li
752.054 78.1665 li
752.138 68.75 li
752.304 94 li
752.388 72.3335 li
752.471 64 li
752.638 71.5 li
752.721 64.8335 li
752.804 85.1665 li
752.971 87.1665 li
753.054 106.917 li
753.221 97 li
753.304 73.0835 li
753.388 90.1665 li
753.554 76.8335 li
753.638 69.4165 li
753.804 81.6665 li
753.888 85.75 li
753.971 82.167 li
754.138 73.167 li
754.221 71.3335 li
754.304 57.1665 li
754.471 72.8335 li
754.554 48.0835 li
754.721 90.75 li
754.804 86.0835 li
754.888 79.4165 li
755.054 93.0835 li
755.138 75 li
755.221 76.6665 li
755.388 59 li
755.471 94.0835 li
755.638 92.667 li
755.721 90.0835 li
755.804 80.5835 li
755.971 103 li
756.054 84.25 li
756.138 129.417 li
756.304 104.333 li
756.388 113 li
756.554 104.75 li
756.638 107.083 li
756.721 105 li
756.888 89.5 li
756.971 100.667 li
757.054 83.8335 li
757.221 85.75 li
757.304 75.0835 li
757.471 85.25 li
757.554 81.6665 li
757.638 80 li
757.804 89.0835 li
757.888 75.8335 li
757.971 76.5835 li
758.138 73.6665 li
758.221 81.25 li
758.388 42.25 li
758.471 59.0835 li
758.554 65.0835 li
758.721 77.5 li
758.804 91.3335 li
758.971 68.5835 li
759.054 70.167 li
759.138 81.5 li
759.304 107.167 li
759.388 83.917 li
759.471 95 li
759.638 61.75 li
759.721 57.8335 li
759.888 63.0835 li
759.971 83.5 li
760.054 85 li
760.221 72.75 li
760.304 88.4165 li
760.388 103.583 li
760.554 98.1665 li
760.638 96.9165 li
760.804 88.917 li
760.888 87.5 li
760.971 55.8335 li
761.138 76.167 li
761.221 76.167 li
761.304 75.417 li
761.471 65.75 li
761.554 64.25 li
761.721 66.417 li
761.805 77.3335 li
761.804 77.3335 mo
761.887 81.3335 li
762.054 85 li
762.137 63.5 li
762.221 70.6665 li
762.387 66.0835 li
762.471 70.1665 li
762.637 84.5 li
762.721 71.9165 li
762.804 68.5 li
762.971 56.5835 li
763.054 67.5 li
763.137 75.4165 li
763.304 54.1665 li
763.387 89.6665 li
763.554 83.1665 li
763.637 86.1665 li
763.721 78.1665 li
763.887 75.8335 li
763.971 77.25 li
764.054 86.0835 li
764.221 76 li
764.304 104 li
764.471 89.75 li
764.554 88.75 li
764.637 82.8335 li
764.804 72.4165 li
764.887 80.4165 li
765.054 73.5835 li
765.137 86.6665 li
765.221 73.5835 li
765.387 77.8335 li
765.471 84.0835 li
765.554 69.6665 li
765.721 96.3335 li
765.804 85.9165 li
765.971 75.9165 li
766.054 86.25 li
766.137 84.6665 li
766.304 84.5 li
766.387 79.75 li
766.471 88.9165 li
766.637 78.4165 li
766.721 66.5835 li
766.887 69.9165 li
766.971 71.25 li
767.054 76.75 li
767.221 96.5 li
767.304 105.25 li
767.387 69.0835 li
767.554 94.75 li
767.637 78.5835 li
767.804 102.417 li
767.887 88.5 li
767.971 107 li
768.137 84.1665 li
768.221 82.0835 li
768.304 67.75 li
768.471 88.5 li
768.554 79.3335 li
768.721 90 li
768.804 69.1665 li
768.887 60.3335 li
769.054 72.9165 li
769.137 56.5835 li
769.221 77.1665 li
769.387 94.1665 li
769.471 69.1665 li
769.637 74.25 li
769.721 74.4165 li
769.804 87.9165 li
769.971 68.1665 li
770.054 79.75 li
770.137 88.6665 li
770.304 86.4165 li
770.387 104.417 li
770.554 75.75 li
770.637 93.4165 li
770.721 65.1665 li
770.887 96.8335 li
770.971 104.417 li
771.137 91.8335 li
771.221 88.6665 li
771.304 84.1665 li
771.471 80.5 li
771.554 71.5835 li
771.637 73.5 li
771.804 62.3335 li
771.887 88.4165 li
772.054 96.0835 li
772.137 98.5835 li
772.221 92.5835 li
772.387 64.75 li
772.471 98.4165 li
772.554 85.25 li
772.721 67.4165 li
772.804 82.4165 li
772.971 95.1665 li
773.054 96.6665 li
773.137 81 li
773.304 84.1665 li
773.387 73.1665 li
773.471 87.25 li
773.637 56.1665 li
773.721 92.1665 li
773.887 96.3335 li
773.971 81.8335 li
774.054 96.0835 li
774.221 77.0835 li
774.304 63.9165 li
774.387 73.1665 li
774.554 88.1665 li
774.638 88.8335 li
774.804 90.5835 li
774.888 98.25 li
774.971 112.25 li
775.138 80.0835 li
775.221 97.0835 li
775.304 94.5 li
775.471 99.5 li
775.554 87.25 li
775.721 86.75 li
775.804 106.833 li
775.888 99.4165 li
776.054 88.3335 li
776.138 97.9165 li
776.221 88.5 li
776.388 69.8335 li
776.471 75.25 li
776.638 107.333 li
776.721 111.667 li
776.804 92.4165 li
776.971 114.917 li
777.054 102.167 li
777.221 124.667 li
777.304 98.25 li
777.388 106.833 li
777.554 93.0835 li
777.638 79.0835 li
777.721 82.75 li
777.888 86.1665 li
777.971 98.75 li
778.138 89.6665 li
778.221 97.9165 li
778.304 82.9165 li
778.471 117.25 li
778.554 93.3335 li
778.638 96.5 li
778.804 72.3335 li
778.888 62.4165 li
779.054 80.5 li
779.138 76.8335 li
779.221 88.25 li
779.388 100.75 li
779.471 95.9165 li
779.554 82.75 li
779.721 66.8335 li
779.804 72.75 li
779.971 79.3335 li
780.054 75.0835 li
780.138 70.4165 li
780.304 70.75 li
780.388 100.083 li
780.471 108.083 li
780.638 89.4165 li
780.721 73.3335 li
780.888 91.75 li
780.971 92.3335 li
781.054 84.1665 li
781.221 89.6665 li
781.304 76.75 li
781.388 96.75 li
781.554 115.25 li
781.638 81.5 li
781.804 90.4165 li
781.888 106.5 li
781.971 124.583 li
782.138 98.1665 li
782.221 132.75 li
782.304 84.6665 li
782.471 85.4165 li
782.554 91 li
782.721 102.25 li
782.804 93.8335 li
782.888 96.9165 li
783.054 104.667 li
783.138 127.5 li
783.304 129.5 li
783.388 125.833 li
783.471 132 li
783.638 113.583 li
783.721 86.5 li
783.804 104.417 li
783.971 112.083 li
784.054 103.167 li
784.221 106.583 li
784.304 92.9165 li
784.388 66 li
784.554 80.4165 li
784.638 79.1665 li
784.721 107.417 li
784.888 92 li
784.971 85.9165 li
785.138 73.9165 li
785.221 92.1665 li
785.304 93.0835 li
785.471 80.75 li
785.554 58.9165 li
785.638 78.6665 li
785.804 54.9165 li
785.888 73.1665 li
786.054 76.1665 li
786.138 90.6665 li
786.221 95.5835 li
786.388 85.75 li
786.471 89.9165 li
786.554 109.333 li
786.721 117.083 li
786.804 99.8335 li
786.971 81.5835 li
787.054 70.8335 li
787.138 78.75 li
787.304 91.4165 li
787.388 133.5 li
787.471 132.833 li
787.638 100.25 li
787.721 112.833 li
787.888 101.917 li
787.971 82.3335 li
788.054 89.9165 li
788.221 62.8335 li
788.304 98.5835 li
788.471 95.25 li
788.554 97.75 li
788.638 80.25 li
788.804 85.3335 li
788.888 118.167 li
788.971 90.1665 li
789.138 92.8335 li
789.221 68.3335 li
789.388 90.75 li
789.471 91.9165 li
789.554 97.8335 li
789.721 90.25 li
789.804 83.0835 li
789.888 83.3335 li
790.054 88 li
790.138 81.1665 li
790.304 93.75 li
790.388 95.75 li
790.471 102.917 li
790.638 112.5 li
790.721 94.0835 li
790.804 91.0835 li
790.971 85 li
791.054 94.9165 li
791.221 96 li
791.304 90.0835 li
791.388 61.9165 li
791.554 89.3335 li
791.638 88.0835 li
791.721 63.8335 li
791.888 73.8335 li
791.971 67.5835 li
792.138 88.75 li
792.221 81.9165 li
792.304 89.75 li
792.471 63.1665 li
792.554 70.25 li
792.638 64.0835 li
792.804 63.8335 li
792.888 84.75 li
793.054 94.3335 li
793.138 83.5 li
793.221 95.4165 li
793.388 100.583 li
793.471 102.167 li
793.554 96.8335 li
793.721 127.083 li
793.804 101.25 li
793.971 84 li
794.054 66.0835 li
794.138 105.75 li
794.304 94.25 li
794.388 98.1665 li
794.554 84.6665 li
794.638 114.25 li
794.721 114.583 li
794.888 81.75 li
794.971 91.5835 li
795.055 111.667 li
795.221 97.75 li
795.305 87.1665 li
795.471 102.75 li
795.555 99.5 li
795.638 100.417 li
795.805 96.5 li
795.888 89.5835 li
795.971 103.833 li
796.138 98.8335 li
796.137 98.8335 mo
796.22 114.5 li
796.387 109.333 li
796.47 90.4165 li
796.554 111.583 li
796.72 99.5835 li
796.804 103.583 li
796.887 89.25 li
797.054 113.25 li
797.137 87 li
797.304 94 li
797.387 82.9165 li
797.47 81.75 li
797.637 81.9165 li
797.721 88 li
797.804 73.8335 li
797.971 82.9165 li
798.054 58.8335 li
798.221 52.6665 li
798.304 51.5 li
798.387 63 li
798.554 88.4165 li
798.637 74.1665 li
798.721 59.25 li
798.887 80.5 li
798.971 84.1665 li
799.137 60 li
799.221 76.5835 li
799.304 56.6665 li
799.471 90.25 li
799.554 89.5 li
799.637 74.75 li
799.804 57.8335 li
799.887 87.8335 li
800.054 78.1665 li
800.137 82.25 li
800.221 91.25 li
800.387 68.3335 li
800.471 80.25 li
800.637 101.25 li
800.721 106.333 li
800.804 70.75 li
800.971 97.4165 li
801.054 93.6665 li
801.137 100.5 li
801.304 118 li
801.387 89.9165 li
801.554 106 li
801.637 89.4165 li
801.721 100.083 li
801.887 100.5 li
801.971 100.167 li
802.054 114.167 li
802.221 96.1665 li
802.304 93.0835 li
802.471 102.333 li
802.554 73.8335 li
802.637 88.75 li
802.804 68.75 li
802.887 107.667 li
802.971 113.583 li
803.137 97.0835 li
803.221 100.667 li
803.387 120.083 li
803.471 97.6665 li
803.554 90.6665 li
803.721 97.1665 li
803.804 87.8335 li
803.887 73.9165 li
804.054 78.8335 li
804.137 74.9165 li
804.304 100.5 li
804.387 97.25 li
804.471 85.0835 li
804.637 91.75 li
804.721 87.75 li
804.804 105 li
804.971 84.5 li
805.054 76.3335 li
805.221 84.5 li
805.304 102.917 li
805.387 97.5835 li
805.554 112.25 li
805.637 83.3335 li
805.721 105.5 li
805.887 103.583 li
805.971 98.5835 li
806.137 106.333 li
806.221 102.083 li
806.304 119.75 li
806.471 111 li
806.554 115.917 li
806.721 105.833 li
806.804 102.333 li
806.887 105.083 li
807.054 122.833 li
807.137 113 li
807.221 83.3335 li
807.387 103.25 li
807.471 104.833 li
807.637 80.6665 li
807.721 74 li
807.804 79.4165 li
807.971 109 li
808.054 126.333 li
808.137 120.917 li
808.304 97 li
808.387 114.833 li
808.554 114.167 li
808.637 117.583 li
808.721 106.333 li
808.887 96.3335 li
808.971 113.5 li
809.054 117.667 li
809.221 113.583 li
809.304 118.25 li
809.471 104.333 li
809.554 87.25 li
809.637 104.25 li
809.804 127.667 li
809.887 100.75 li
809.971 103.167 li
810.137 118.333 li
810.221 105.667 li
810.388 103.083 li
810.471 104.833 li
810.554 92.0835 li
810.721 92.1665 li
810.804 117.583 li
810.888 92.9165 li
811.054 96.5835 li
811.138 103.167 li
811.304 99.6665 li
811.388 88.6665 li
811.471 93.4165 li
811.638 91.5835 li
811.721 77.25 li
811.888 69.0835 li
811.971 80.5835 li
812.054 90.5 li
812.221 107.917 li
812.304 80.4165 li
812.388 71.25 li
812.554 63.3335 li
812.638 83.1665 li
812.804 97.25 li
812.888 106.833 li
812.971 108.083 li
813.138 114.083 li
813.221 98.0835 li
813.304 93.3335 li
813.471 117.917 li
813.554 88.8335 li
813.721 78 li
813.804 102.917 li
813.888 85.8335 li
814.054 95.9165 li
814.138 108.917 li
814.221 82.5835 li
814.388 81.6665 li
814.471 88.3335 li
814.638 80.0835 li
814.721 65.75 li
814.804 80.5 li
814.971 102.917 li
815.054 94 li
815.138 96.75 li
815.304 81.9165 li
815.388 88.0835 li
815.554 92.6665 li
815.638 89.4165 li
815.721 86.9165 li
815.888 89.0835 li
815.971 74.9165 li
816.054 93.75 li
816.221 96.5 li
816.304 60.25 li
816.471 92.8335 li
816.554 68.9165 li
816.638 92.4165 li
816.804 103.083 li
816.888 80.5 li
816.971 87 li
817.138 97.8335 li
817.221 112.583 li
817.388 97 li
817.471 96.25 li
817.554 54.75 li
817.721 84.8335 li
817.804 84.6665 li
817.971 78.0835 li
818.054 61.9165 li
818.138 82.6665 li
818.304 79.9165 li
818.388 91.5 li
818.471 99.1665 li
818.638 81.1665 li
818.721 66.8335 li
818.888 85.1665 li
818.971 96.75 li
819.054 56.1665 li
819.221 79.3335 li
819.304 57.9165 li
819.388 74 li
819.554 58.5835 li
819.638 80.6665 li
819.804 83.75 li
819.888 107.917 li
819.971 88.8335 li
820.138 84.75 li
820.221 108.583 li
820.304 117.667 li
820.471 76 li
820.554 105.417 li
820.721 83.6665 li
820.804 67.9165 li
820.888 85.4165 li
821.054 86.5 li
821.138 84.0835 li
821.221 86.5835 li
821.388 110.083 li
821.471 101.417 li
821.638 88.25 li
821.721 74.5835 li
821.804 93.75 li
821.971 56.25 li
822.054 94 li
822.138 101.083 li
822.304 127.333 li
822.388 100.917 li
822.554 106 li
822.638 109.333 li
822.721 89.8335 li
822.888 103.917 li
822.971 120.917 li
823.054 103.833 li
823.221 90.5835 li
823.304 94.667 li
823.471 75.917 li
823.554 67.917 li
823.638 91.5 li
823.804 102 li
823.888 90.667 li
824.054 79.667 li
824.138 102.25 li
824.221 84.25 li
824.388 96.0835 li
824.471 97.167 li
824.554 79 li
824.721 93.8335 li
824.804 110.5 li
824.971 90.917 li
825.054 109.417 li
825.138 82.417 li
825.304 93.5835 li
825.388 94.167 li
825.471 119.417 li
825.638 110.583 li
825.721 78 li
825.888 96.5 li
825.971 89.5835 li
826.054 95.167 li
826.221 119.083 li
826.304 91.3335 li
826.388 96 li
826.554 111.667 li
826.638 100.917 li
826.804 102.5 li
826.888 89.917 li
826.971 86.5 li
827.138 87.8335 li
827.221 99.667 li
827.304 116.917 li
827.471 87.8335 li
827.554 73.0835 li
827.721 110.667 li
827.804 110.167 li
827.888 106.25 li
828.054 104.833 li
828.138 115.75 li
828.221 75.3335 li
828.388 93.5 li
828.471 92.5835 li
828.638 86.5835 li
828.721 88.917 li
828.804 86.417 li
828.971 88.167 li
829.054 65 li
829.138 74.25 li
829.304 77 li
829.388 84.917 li
829.554 111.833 li
829.638 98.917 li
829.721 109.333 li
829.888 84.667 li
829.971 82.3335 li
830.138 77.417 li
830.221 97.667 li
830.304 107.583 li
830.471 104.167 li
830.47 104.167 mo
830.554 95.25 li
830.637 96 li
830.804 99.0835 li
830.887 69.75 li
831.054 82.3335 li
831.137 86.75 li
831.221 76.3335 li
831.387 106.417 li
831.471 88.75 li
831.554 91.25 li
831.721 84.4165 li
831.804 74.0835 li
831.971 66.5835 li
832.054 82.75 li
832.137 101.417 li
832.304 80.5835 li
832.387 80.25 li
832.471 89.3335 li
832.637 101.583 li
832.721 87.1665 li
832.887 104.75 li
832.971 81.9165 li
833.054 75.0835 li
833.221 82.9165 li
833.304 80.9165 li
833.387 44.3335 li
833.554 102.417 li
833.637 74.3335 li
833.804 72.3335 li
833.887 84.1665 li
833.971 82.4165 li
834.137 65.4165 li
834.221 78.6665 li
834.304 85 li
834.471 84.1665 li
834.554 101.667 li
834.721 87.75 li
834.804 85.4165 li
834.887 90.5835 li
835.054 85.0835 li
835.137 87.9165 li
835.221 96.4165 li
835.387 98.25 li
835.471 89.6665 li
835.637 114.833 li
835.721 95 li
835.804 108.417 li
835.971 84.25 li
836.054 105.75 li
836.221 95.75 li
836.304 96.25 li
836.387 106.25 li
836.554 105.833 li
836.637 110.083 li
836.721 95.1665 li
836.887 93.4165 li
836.971 127.083 li
837.137 96.9165 li
837.221 99.75 li
837.304 84.3335 li
837.471 111.5 li
837.554 98.4165 li
837.637 93.75 li
837.804 95.25 li
837.887 92.0835 li
838.054 109.083 li
838.137 108.25 li
838.221 105.917 li
838.387 110.25 li
838.471 104 li
838.554 72.0835 li
838.721 91 li
838.804 76.5 li
838.971 87.0835 li
839.054 104.167 li
839.137 76.75 li
839.304 85 li
839.387 95.5 li
839.471 71.8335 li
839.637 73.9165 li
839.721 72.75 li
839.887 72.0835 li
839.971 81.1665 li
840.054 83.8335 li
840.221 101 li
840.304 101.667 li
840.387 103.25 li
840.554 92.4165 li
840.637 71.25 li
840.804 98 li
840.887 102.5 li
840.971 125.583 li
841.137 101.417 li
841.221 51.3335 li
841.387 84.25 li
841.471 102.417 li
841.554 72.3335 li
841.721 73.5 li
841.804 109.167 li
841.887 115.75 li
842.054 121.75 li
842.137 107.667 li
842.304 115.583 li
842.387 95.3335 li
842.471 99.25 li
842.637 101.583 li
842.721 104.5 li
842.804 103.417 li
842.971 86.9165 li
843.054 109.083 li
843.221 88.25 li
843.304 74.5835 li
843.388 78.4165 li
843.554 73 li
843.638 98.6665 li
843.721 73.9165 li
843.888 81.3335 li
843.971 72.9165 li
844.138 71.6665 li
844.221 79.4165 li
844.304 96.75 li
844.471 86.25 li
844.554 72.1665 li
844.638 88.5 li
844.804 114 li
844.888 106.75 li
845.054 94.0835 li
845.138 100 li
845.221 91.25 li
845.388 106.083 li
845.471 73.6665 li
845.554 74.8335 li
845.721 104.75 li
845.804 83.25 li
845.971 80.5 li
846.054 96.1665 li
846.138 93.6665 li
846.304 90.1665 li
846.388 91.0835 li
846.471 95.1665 li
846.638 115 li
846.721 85.8335 li
846.888 96.6665 li
846.971 88.4165 li
847.054 90.75 li
847.221 78.4165 li
847.304 58 li
847.471 95.5 li
847.554 74.4165 li
847.638 81.6665 li
847.804 66.5835 li
847.888 73.4165 li
847.971 95.9165 li
848.138 111.25 li
848.221 115.5 li
848.388 101.667 li
848.471 115.75 li
848.554 90.1665 li
848.721 99.1665 li
848.804 68.6665 li
848.888 84.8335 li
849.054 100.917 li
849.138 90.75 li
849.304 95.6665 li
849.388 106 li
849.471 89.5 li
849.638 73.5835 li
849.721 100.917 li
849.804 86.4165 li
849.971 98.75 li
850.054 93.5835 li
850.221 76 li
850.304 77.0835 li
850.388 75.8335 li
850.554 114.333 li
850.638 87.9165 li
850.721 120.417 li
850.888 96.0835 li
850.971 110.25 li
851.138 121.75 li
851.221 116 li
851.304 106 li
851.471 107.667 li
851.554 102 li
851.638 96.0835 li
851.804 84.4165 li
851.888 94.9165 li
852.054 88.3335 li
852.138 82.8335 li
852.221 95.6665 li
852.388 98.4165 li
852.471 106.25 li
852.554 76.4165 li
852.721 100.667 li
852.804 73.3335 li
852.971 91.9165 li
853.054 94.3335 li
853.138 97.4165 li
853.304 106.667 li
853.388 114.917 li
853.554 99.5 li
853.638 114 li
853.721 94.5835 li
853.888 96.1665 li
853.971 76.5835 li
854.054 89.5 li
854.221 93.6665 li
854.304 111.5 li
854.471 93.3335 li
854.554 104.833 li
854.638 104.667 li
854.804 91.1665 li
854.888 81.5835 li
854.971 92.1665 li
855.138 93.4165 li
855.221 99.0835 li
855.388 102.167 li
855.471 97.5 li
855.554 86.1665 li
855.721 102.25 li
855.804 100.583 li
855.888 117.083 li
856.054 102.083 li
856.138 83.5 li
856.304 92.75 li
856.388 102 li
856.471 80.5835 li
856.638 80.3335 li
856.721 90.5 li
856.804 92.5 li
856.971 94.8335 li
857.054 92.25 li
857.221 92.0835 li
857.304 103.417 li
857.388 106.583 li
857.554 110.417 li
857.638 92.25 li
857.721 87.8335 li
857.888 88.75 li
857.971 110.167 li
858.138 88.6665 li
858.221 98.6665 li
858.304 89.8335 li
858.471 83.6665 li
858.554 53.75 li
858.638 71.8335 li
858.804 81.75 li
858.888 93.1665 li
859.054 68.5 li
859.138 68.4165 li
859.221 87.5 li
859.388 83.75 li
859.471 99.1665 li
859.638 96.5 li
859.721 71.4165 li
859.804 89.9165 li
859.971 81.25 li
860.054 78 li
860.138 56.5835 li
860.304 82.25 li
860.388 69.4165 li
860.554 96.8335 li
860.638 88.4165 li
860.721 65.4165 li
860.888 67.4165 li
860.971 64.75 li
861.054 92.3335 li
861.221 78.25 li
861.304 96.9165 li
861.471 94.3335 li
861.554 90.5835 li
861.638 84.5835 li
861.804 69.3335 li
861.888 71.1665 li
861.971 80.5 li
862.138 80.75 li
862.221 76 li
862.388 71.9165 li
862.471 75.9165 li
862.554 91.3335 li
862.721 61 li
862.804 63.1665 li
862.888 55.5 li
863.054 90.9165 li
863.138 71.6665 li
863.304 73.8335 li
863.388 55.6665 li
863.471 81 li
863.638 93.9165 li
863.721 81.1665 li
863.805 96.9165 li
863.971 89.5835 li
864.055 83.8335 li
864.221 94 li
864.305 74.6665 li
864.388 60.25 li
864.555 78.3335 li
864.638 62.8335 li
864.805 87.75 li
@
grestore
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginJCFGYG+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/I <1C60D8A8C9B854D0EE4B20327A907C36187261> |-/a <1C60D8A8C9B7EF322B0D17E770BC81022852C5639214CBF49D6EF8BAFB0188062A6BB41F6EB58ADD15E3D1B86AD22624C804FD4A4EBA73D78F7E503599DB65A7EB53D74C4A9A536152BF7A6B13AB96FF2727313FED0263E50A950746CED5AD5E7764E6E353716A8BE8970281B41D9429E56957BD1FCC84205F76AF78E807D18CA1CFFE724AECDDD2D385233E91066015AC7E0906FE359E28D96D9E0BD326B9E6C7D3E486FD1864E3B47A611B1D6D0D080020321300485E65AE9E4C12443E21865F474D46CD791839F25C8FD0A80215E3D2C3A5928427942DF3859AEF6E9035C909FC75082E8FF246F375DDB90EAC248C9121707FE869E161502F320A27113504> |-/e <1C60D8A8C9B7EF322BB83B593C4F5531F1493EEBEAC6F4C92C25FF10F1FB8EC7E530E4B1F1C9E51F31B44D59539AB4135F310FAB43C5A16AA1F4EA07D67BBB916AB355913EB7D45F3AC7C9CF1FD32728FCA1A2D5BBD257CEF831AE751904AD7F4FBE21E10F3A844E74CF6B850E894017941E45AE6BCDA168BF4979345C67DB13F0C5FE9888EB731B0A06A8D5D1475F60C11332FBE633540E50C86671A26FD83CD870BB68F7A9> |-/i <1C60D8A8C9B88C084EE8A68C7FA2A58C433876A9B19799899FEF7A13> |-/n <1C60D8A8C9B7EF3217E3BC2FA8BE5FFDDE7BA6B2BB97B82CAF2D20211744A627BCE3171C7124085EFB87C01551538DC74ADD76A4A469E736F37382A8E68FCF64FCF52E65C49BB3C47B4136748A05BC6A02EABE080CF030B375C809CD67343FEE2448D6> |-/o <1C60D8A8C9B7EF322BB7315D499F0FAA57DF741D86CA9D8DB7E5AD83A05FD148F53EC24E4E6BF5C292C0FC171599978D99E35AB7CAFB8CB65593939725D520CE4A30CDA834D29EB92A082721C79AE18875772ECDD437AD2148D76D23F045CDA1E61619294E456095F14AB8D580008870DAABB6481A0C5B1656CACCDE79F2741F9BB15B> |-/r <1C60D8A8C9B81F2C037408F8BF0E381AE4C9649BA754678B3C9CB9B6F5985C2C3DD85532C988309B457CF86E09A953B63981C0C686B55A9B6F57C7F684C3CFA5497AE68C179CE338521D1494441800> |-/s <1C60D8A8C9B7A73DE557A2AA450BB57EE39D611FDE79056DA153DEDE8E0D2C9D756143DA5E614060C362E0813E35369DA2F002330267D2CFA81D3D9AA172C91A8B8E19BB92CE3CFBA62200E9E8175CCCB3A5FA559ECF71DD7F2B47B117C69AC3637EDAE62020C9DAFDDB718C27C76EF62794CF8B187D103B05AC07655F04A6D9D5181CB287F032D98B2512B2A9B281D13745308AC05B350DA95BA0BE14F12630B5B2A718215DC0DE5A544FA267BEF8FD5CF5292808F195D31A5EEC3ADC63> |-/t <1C60D8A8C9B854D0DE8EB299D76AFE3A3E7733E2D967660702D2EB06537F4BAA1F2129056DC9771C91484E3F22B637802F61054AB3D0E9902E08C4E6B9ADDC0E2F51D38CAD652B2A777D9304919B1B524DD7CC56553E03BE971752FD0161CF> |-systemdict /gcheck known {setglobal} if end {end} ifendJCFGYG+Helvetica /Encoding getdup 73 /I putdup 97 /a putdup 101 /e putdup 105 /i putdup 110 /n putdup 111 /o putdup 114 /r putdup 115 /s putdup 116 /t putpop%ADOEndSubsetFont
/JCFGYG+Helvetica*1 [32{/.notdef}rp /minus /space 12{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /.notdef /eight /nine 15{/.notdef}rp /I 23{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o 2{/.notdef}rp /r /s /t 3{/.notdef}rp /x 135{/.notdef}rp]JCFGYG+Helvetica nfJCFGYG+Helvetica*1 [16 0 0 -16 0 0 ]msf461.472 440.504 mo(Iterations)[4.44531 4.44531 8.89844 5.32813 8.89844 4.44531 3.55469 8.89844 8.89844 0 ]xsh0.882353 0.768627 0 0 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginJCFGYG+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/L <1C60D8A8C9B7EF320B5E1B1901757FD427860A5A6931496E07> |-/d <1C60D8A8C9B7EF322B197A4CECAEBFA93CFC6ACCC571419BFA5461EED77BFB3D8FE900AE7AE7F3558D5F515A8BFDAAA816E55EE92701787F654353E7BD1A4CD427A1C3D52C079A2D5373BCA2D0E81E97334505A34C6046F7856771303B422A1AED127DFB82533DF581F3B1C10CE7C6EB68EFDC809921DBBDF534E7567CC2D2750B89DE10766FCFB923BB97A09A4C79BB9A> |-/g <1C60D8A8C9B7EF322B9E33783F120324D4831FD54687FCF0A3239094C0D4E3AAB20B4037430546FA4664C0C2EC6F9AF25AB8C7F18077B54094AD8EBB679EA5C6D7AFD732ED61A8DCEA904021433763160B264DB52A614A19F2765FBBC5798DAD5FE93A7CA6F9AD05E8ADF7528A45B919107B69D8844684194FE7F92E944890ACD166034B8B64BAE18E8E65CE4B5414E043D7BFC474CE1F5EA604A5C9DC3A7BA914202197CB4B05F919B47B1EB5B22C18D76DC248F3694EA79BFDDDCC0F068EB1529F2B8631C6> |-/h <1C60D8A8C9B7EF3217E3BC2FA8B1DA462FB5094608F57CE7723860E586F183A8CEF3068A0C010301729338C182E1C8129546DF528AA710511DF02DFE7ACA98F8F6531E02F7C3E3DBAF3320F3D602AE65A66CA41E6984> |-/k <1C60D8A8C9B7A73D847F857A1BFD24ACB75840E5C7CBB8AB7BE870135525EBD6DBF4EAE3173F6ABCE16E75318AB6C78B406BDB> |-/l <1C60D8A8C9B88C084B857C39B4185359B4FDA8> |-systemdict /gcheck known {setglobal} if end {end} ifendJCFGYG+Helvetica /Encoding getdup 76 /L putdup 100 /d putdup 103 /g putdup 104 /h putdup 107 /k putdup 108 /l putpop%ADOEndSubsetFont
/JCFGYG+Helvetica*1 [32{/.notdef}rp /minus /space 12{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /.notdef /eight /nine 15{/.notdef}rp /I 2{/.notdef}rp /L 20{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef /g /h /i /.notdef /k /l /.notdef /n /o 2{/.notdef}rp /r /s /t 3{/.notdef}rp /x 135{/.notdef}rp]JCFGYG+Helvetica nfJCFGYG+Helvetica*1 [0 -16 -16 0 0 0 ]msf72.4717 271.832 mo(Log!Likelihood)[-8.89844 -8.89844 -8.89844 -4.44531 -8.89844 -3.55469 -8 -8.89844 -3.55469 -3.55469 -8.89844 -8.89844 -8.89844 0 ]ysh123.97 406.499 mo
864.804 406.499 li
0 0 0 1 cmyk
@
864.804 406.499 mo
864.804 34.1665 li
0.87451 0.243137 1 0.129412 cmyk
@
236.97 406.499 mo
236.97 399.083 li
0 0 0 1 cmyk
@
JCFGYG+Helvetica*1 [16 0 0 -16 0 0 ]msf218.222 425.176 mo(5000)[8.89844 8.89844 8.89844 0 ]xsh351.804 406.499 mo
351.804 399.083 li
@
JCFGYG+Helvetica*1 [16 0 0 -16 0 0 ]msf329.05 425.176 mo(10000)[8.89844 8.89844 8.89844 8.89844 0 ]xsh466.554 406.499 mo
466.554 399.083 li
@
581.387 406.499 mo
581.387 399.083 li
@
696.137 406.499 mo
696.137 399.083 li
@
810.887 406.499 mo
810.887 399.083 li
@
864.804 392.167 mo
857.387 392.167 li
0.87451 0.243137 1 0.129412 cmyk
@
JCFGYG+Helvetica*1 [16 0 0 -16 0 0 ]msf867.636 398.082 mo(325)[8.89844 8.89844 0 ]xsh864.804 320.583 mo
857.387 320.583 li
@
JCFGYG+Helvetica*1 [16 0 0 -16 0 0 ]msf867.636 326.504 mo(350)[8.89844 8.89844 0 ]xsh864.804 248.999 mo
857.387 248.999 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginJCFGYG+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/seven <1C60D8A8C9B7EF326C86E2C8FFDAFAAAF8B2EE45CDE12ADFFACC9341D807009D1D241E6029AF890199C52728BBB0F3ADB8945AB4753C3621AAE632A8EC4FD7F79CCD78EF> |-systemdict /gcheck known {setglobal} if end {end} ifendJCFGYG+Helvetica /Encoding getdup 55 /seven putpop%ADOEndSubsetFont
/JCFGYG+Helvetica*1 [32{/.notdef}rp /minus /space 12{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 15{/.notdef}rp /I 2{/.notdef}rp /L 20{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef /g /h /i /.notdef /k /l /.notdef /n /o 2{/.notdef}rp /r /s /t 3{/.notdef}rp /x 135{/.notdef}rp]JCFGYG+Helvetica nfJCFGYG+Helvetica*1 [16 0 0 -16 0 0 ]msf867.636 254.918 mo(375)[8.89844 8.89844 0 ]xsh864.804 177.417 mo
857.387 177.417 li
@
JCFGYG+Helvetica*1 [16 0 0 -16 0 0 ]msf867.636 183.332 mo(400)[8.89844 8.89844 0 ]xsh864.804 105.833 mo
857.387 105.833 li
@
JCFGYG+Helvetica*1 [16 0 0 -16 0 0 ]msf867.636 111.754 mo(425)[8.89844 8.89844 0 ]xsh864.804 34.25 mo
857.387 34.25 li
@
JCFGYG+Helvetica*1 [16 0 0 -16 0 0 ]msf867.636 40.168 mo(450)[8.89844 8.89844 0 ]xshgsave
123.97 406.583 mo
864.887 406.583 li
864.887 34.25 li
123.97 34.25 li
123.97 406.583 li
cp
clp
124.72 406.583 mo
124.72 386.417 li
124.887 352.083 li
124.97 323.417 li
125.054 357.749 li
125.22 306.249 li
125.303 326.249 li
125.387 317.667 li
125.553 283.333 li
125.637 297.667 li
125.803 291.917 li
125.887 277.583 li
125.97 291.917 li
126.137 311.999 li
126.22 297.667 li
126.303 268.999 li
126.47 268.999 li
126.553 303.333 li
126.72 337.749 li
126.803 311.999 li
126.887 297.667 li
127.053 331.999 li
127.137 372.083 li
127.22 354.917 li
127.387 372.083 li
127.47 349.167 li
127.636 331.999 li
127.72 320.583 li
127.803 357.749 li
127.97 323.417 li
128.053 340.583 li
128.136 329.167 li
128.303 300.499 li
128.386 311.999 li
128.553 317.667 li
128.636 297.667 li
128.72 329.167 li
128.886 337.749 li
128.97 323.417 li
129.053 331.999 li
129.22 317.667 li
129.303 343.499 li
129.47 331.999 li
129.553 337.749 li
129.636 337.749 li
129.803 317.667 li
129.886 311.999 li
130.053 294.749 li
130.136 306.249 li
130.219 331.999 li
130.386 311.999 li
130.469 323.417 li
130.553 294.749 li
130.719 277.583 li
130.803 274.749 li
130.969 300.499 li
131.053 294.749 li
131.136 280.499 li
131.303 268.999 li
131.386 280.499 li
131.469 268.999 li
131.636 266.167 li
131.719 280.499 li
131.886 263.249 li
131.969 297.667 li
132.052 274.749 li
132.219 309.083 li
132.302 291.917 li
132.386 329.167 li
132.552 311.999 li
132.636 300.499 li
132.802 300.499 li
132.886 291.917 li
132.969 291.917 li
133.136 309.083 li
133.219 291.917 li
133.302 297.667 li
133.469 337.749 li
133.552 323.417 li
133.719 294.749 li
133.802 286.167 li
133.885 303.333 li
134.052 303.333 li
134.135 320.583 li
134.219 314.833 li
134.385 289.083 li
134.469 263.249 li
134.635 274.749 li
134.719 303.333 li
134.802 309.083 li
134.969 274.749 li
135.052 289.083 li
135.135 289.083 li
135.302 257.583 li
135.385 291.917 li
135.552 289.083 li
135.635 289.083 li
135.719 286.167 li
135.885 306.249 li
135.968 311.999 li
136.135 317.667 li
136.218 320.583 li
136.302 314.833 li
136.468 291.917 li
136.552 317.667 li
136.635 357.749 li
136.802 343.499 li
136.885 309.083 li
137.052 334.833 li
137.135 320.583 li
137.218 311.999 li
137.385 294.749 li
137.468 286.167 li
137.552 309.083 li
137.718 286.167 li
137.802 257.583 li
137.968 263.249 li
138.051 294.749 li
138.135 297.667 li
138.301 277.583 li
138.385 243.249 li
138.468 208.917 li
138.635 231.749 li
138.718 243.249 li
138.885 274.749 li
138.968 246.083 li
139.051 234.667 li
139.218 231.749 li
139.301 243.249 li
139.385 254.667 li
139.551 240.417 li
139.635 257.583 li
139.801 240.417 li
139.885 246.083 li
139.968 289.083 li
140.134 294.749 li
140.218 274.749 li
140.301 271.917 li
140.468 274.749 li
140.551 280.499 li
140.718 271.917 li
140.801 274.749 li
140.884 263.249 li
141.051 274.749 li
141.134 277.583 li
141.218 289.083 li
141.384 289.083 li
141.468 291.917 li
141.634 309.083 li
141.718 274.749 li
141.801 289.083 li
141.968 280.499 li
142.051 274.749 li
142.217 286.167 li
142.301 297.667 li
142.384 280.499 li
142.551 271.917 li
142.634 266.167 li
142.717 291.917 li
142.884 291.917 li
142.967 271.917 li
143.134 286.167 li
143.217 271.917 li
143.301 280.499 li
143.467 289.083 li
143.551 271.917 li
143.634 254.667 li
143.801 254.667 li
143.884 260.417 li
144.051 260.417 li
144.054 260.417 mo
144.137 263.249 li
144.22 263.249 li
144.387 268.999 li
144.47 286.167 li
144.554 291.917 li
144.72 283.333 li
144.804 260.417 li
144.97 277.583 li
145.053 266.167 li
145.137 274.749 li
145.303 280.499 li
145.387 260.417 li
145.47 289.083 li
145.637 303.333 li
145.72 286.167 li
145.887 268.999 li
145.97 289.083 li
146.053 283.333 li
146.22 274.749 li
146.303 271.917 li
146.387 283.333 li
146.553 260.417 li
146.637 280.499 li
146.803 254.667 li
146.887 248.999 li
146.97 257.583 li
147.136 234.667 li
147.22 220.333 li
147.303 228.917 li
147.47 223.167 li
147.553 234.667 li
147.72 197.417 li
147.803 206 li
147.886 206 li
148.053 211.75 li
148.136 211.75 li
148.303 226.083 li
148.386 263.249 li
148.47 243.249 li
148.636 246.083 li
148.72 246.083 li
148.803 223.167 li
148.97 220.333 li
149.053 243.249 li
149.219 248.999 li
149.303 228.917 li
149.386 220.333 li
149.553 183.083 li
149.636 217.5 li
149.719 234.667 li
149.886 211.75 li
149.969 203.167 li
150.136 228.917 li
150.219 217.5 li
150.303 206 li
150.469 206 li
150.553 211.75 li
150.636 231.749 li
150.803 211.75 li
150.886 188.833 li
151.053 160.167 li
151.136 180.25 li
151.219 194.583 li
151.386 194.583 li
151.469 211.75 li
151.552 174.5 li
151.719 197.417 li
151.802 223.167 li
151.969 223.167 li
152.052 217.5 li
152.136 206 li
152.302 191.667 li
152.386 228.917 li
152.469 208.917 li
152.636 223.167 li
152.719 208.917 li
152.886 214.583 li
152.969 200.25 li
153.052 191.667 li
153.219 231.749 li
153.302 211.75 li
153.469 220.333 li
153.552 214.583 li
153.635 208.917 li
153.802 180.25 li
153.885 186 li
153.969 177.417 li
154.135 180.25 li
154.219 168.75 li
154.385 168.75 li
154.469 180.25 li
154.552 203.167 li
154.719 203.167 li
154.802 208.917 li
154.885 203.167 li
155.052 200.25 li
155.135 206 li
155.302 206 li
155.385 206 li
155.468 208.917 li
155.635 226.083 li
155.718 223.167 li
155.802 237.499 li
155.968 223.167 li
156.052 234.667 li
156.218 220.333 li
156.302 240.417 li
156.385 260.417 li
156.552 257.583 li
156.635 231.749 li
156.718 251.833 li
156.885 251.833 li
156.968 243.249 li
157.135 226.083 li
157.218 240.417 li
157.302 237.499 li
157.468 240.417 li
157.551 234.667 li
157.635 237.499 li
157.801 223.167 li
157.885 257.583 li
158.051 237.499 li
158.135 248.999 li
158.218 260.417 li
158.385 263.249 li
158.468 248.999 li
158.551 254.667 li
158.718 243.249 li
158.801 251.833 li
158.968 257.583 li
159.051 257.583 li
159.135 271.917 li
159.301 274.749 li
159.385 274.749 li
159.551 271.917 li
159.635 251.833 li
159.718 228.917 li
159.885 240.417 li
159.968 237.499 li
160.051 240.417 li
160.218 237.499 li
160.301 243.249 li
160.468 246.083 li
160.551 243.249 li
160.635 214.583 li
160.801 220.333 li
160.885 220.333 li
160.968 197.417 li
161.135 206 li
161.218 228.917 li
161.385 220.333 li
161.468 217.5 li
161.551 231.749 li
161.718 243.249 li
161.801 248.999 li
161.885 243.249 li
162.051 220.333 li
162.135 237.499 li
162.301 237.499 li
162.385 234.667 li
162.468 260.417 li
162.635 268.999 li
162.718 260.417 li
162.801 274.749 li
162.968 286.167 li
163.051 266.167 li
163.218 309.083 li
163.301 300.499 li
163.384 300.499 li
163.551 297.667 li
163.634 297.667 li
163.718 311.999 li
163.884 309.083 li
163.968 300.501 li
164.134 300.501 li
164.218 280.501 li
164.301 294.749 li
164.468 280.499 li
164.551 268.999 li
164.634 268.999 li
164.801 240.417 li
164.884 231.749 li
165.051 240.417 li
165.134 286.167 li
165.218 277.583 li
165.384 254.667 li
165.468 263.251 li
165.634 260.417 li
165.718 268.999 li
165.801 294.749 li
165.968 263.249 li
166.051 260.417 li
166.134 240.417 li
166.301 214.583 li
166.384 211.75 li
166.551 234.667 li
166.634 226.083 li
166.718 228.917 li
166.884 211.75 li
166.968 208.917 li
167.051 200.25 li
167.218 217.5 li
167.301 226.083 li
167.468 237.499 li
167.551 226.083 li
167.634 246.083 li
167.801 246.083 li
167.884 228.917 li
167.967 228.917 li
168.134 211.75 li
168.217 188.833 li
168.384 223.167 li
168.467 200.25 li
168.551 208.917 li
168.717 183.083 li
168.801 197.417 li
168.884 220.333 li
169.051 197.417 li
169.134 186 li
169.301 200.25 li
169.384 191.667 li
169.467 197.417 li
169.634 217.5 li
169.717 211.75 li
169.801 234.667 li
169.967 231.749 li
170.051 234.667 li
170.217 220.333 li
170.301 214.583 li
170.384 217.5 li
170.551 200.25 li
170.634 206 li
170.717 188.833 li
170.884 194.583 li
170.967 197.417 li
171.134 208.917 li
171.217 220.333 li
171.301 231.749 li
171.467 228.917 li
171.551 203.167 li
171.717 200.25 li
171.801 160.167 li
171.884 168.75 li
172.051 183.083 li
172.134 183.083 li
172.217 197.417 li
172.384 171.667 li
172.467 154.5 li
172.634 194.583 li
172.717 191.667 li
172.801 188.833 li
172.967 214.583 li
173.051 206 li
173.134 203.167 li
173.301 228.917 li
173.384 200.25 li
173.551 203.167 li
173.634 211.75 li
173.717 211.75 li
173.884 197.417 li
173.967 186 li
174.05 220.333 li
174.217 226.083 li
174.3 234.667 li
174.467 237.499 li
174.55 217.5 li
174.634 228.917 li
174.8 226.083 li
174.884 226.083 li
174.967 223.167 li
175.134 220.333 li
175.217 200.25 li
175.384 194.583 li
175.467 214.583 li
175.55 211.75 li
175.717 214.583 li
175.8 188.833 li
175.884 200.25 li
176.05 197.417 li
176.134 203.167 li
176.3 200.25 li
176.384 220.333 li
176.467 188.833 li
176.634 211.75 li
176.717 194.583 li
176.884 174.5 li
176.967 206 li
177.05 220.333 li
177.217 234.667 li
177.3 231.749 li
177.384 194.583 li
177.55 208.917 li
177.634 206 li
177.8 208.917 li
177.884 211.75 li
177.967 194.583 li
178.134 183.083 li
178.217 186 li
178.3 203.167 li
178.304 203.167 mo
178.47 188.833 li
178.554 174.5 li
178.72 160.167 li
178.804 163.083 li
178.887 188.833 li
179.054 174.5 li
179.137 197.417 li
179.22 191.667 li
179.387 200.25 li
179.47 217.5 li
179.637 217.5 li
179.72 197.417 li
179.804 200.25 li
179.97 188.833 li
180.054 220.333 li
180.137 226.083 li
180.304 223.167 li
180.387 223.167 li
180.553 223.167 li
180.637 223.167 li
180.72 254.667 li
180.887 246.083 li
180.97 251.833 li
181.053 246.083 li
181.22 240.417 li
181.303 251.833 li
181.47 237.499 li
181.553 263.249 li
181.637 254.667 li
181.803 251.833 li
181.887 246.083 li
181.97 246.083 li
182.137 234.667 li
182.22 240.417 li
182.387 234.667 li
182.47 191.667 li
182.553 226.083 li
182.72 251.833 li
182.803 263.249 li
182.97 251.833 li
183.053 243.249 li
183.137 246.083 li
183.303 231.749 li
183.387 194.583 li
183.47 226.083 li
183.637 217.5 li
183.72 237.499 li
183.887 254.667 li
183.97 248.999 li
184.053 237.499 li
184.22 240.417 li
184.303 231.749 li
184.387 240.417 li
184.553 214.583 li
184.637 226.083 li
184.803 220.333 li
184.887 228.917 li
184.97 231.749 li
185.137 226.083 li
185.22 240.417 li
185.303 243.249 li
185.47 257.583 li
185.553 228.917 li
185.72 246.083 li
185.803 237.499 li
185.886 231.749 li
186.053 237.499 li
186.136 228.917 li
186.22 228.917 li
186.386 246.083 li
186.47 226.083 li
186.636 234.667 li
186.72 217.5 li
186.803 208.917 li
186.97 200.25 li
187.053 194.583 li
187.136 180.25 li
187.303 177.417 li
187.386 154.5 li
187.553 174.5 li
187.636 191.667 li
187.72 197.417 li
187.886 237.499 li
187.97 246.083 li
188.053 234.667 li
188.22 211.75 li
188.303 203.167 li
188.47 220.333 li
188.553 208.917 li
188.636 177.417 li
188.803 197.417 li
188.886 206 li
189.053 220.333 li
189.136 231.749 li
189.22 211.75 li
189.386 223.167 li
189.47 254.667 li
189.553 214.583 li
189.72 214.583 li
189.803 223.167 li
189.97 211.75 li
190.053 211.75 li
190.136 217.5 li
190.303 226.083 li
190.386 214.583 li
190.47 203.167 li
190.636 200.25 li
190.72 200.25 li
190.886 186 li
190.97 206 li
191.053 220.333 li
191.22 220.333 li
191.303 208.917 li
191.386 226.083 li
191.553 237.499 li
191.636 220.333 li
191.803 214.583 li
191.886 206 li
191.969 206 li
192.136 220.333 li
192.219 246.083 li
192.303 248.999 li
192.469 228.917 li
192.553 234.667 li
192.719 237.499 li
192.803 234.667 li
192.886 248.999 li
193.053 251.833 li
193.136 220.333 li
193.219 214.583 li
193.386 220.333 li
193.469 231.749 li
193.636 240.417 li
193.719 217.5 li
193.803 240.417 li
193.969 246.083 li
194.053 254.667 li
194.136 260.417 li
194.303 268.999 li
194.386 251.833 li
194.553 254.667 li
194.636 251.833 li
194.719 248.999 li
194.886 257.583 li
194.969 248.999 li
195.136 257.583 li
195.219 271.917 li
195.303 271.917 li
195.469 289.083 li
195.553 266.167 li
195.636 260.417 li
195.803 263.249 li
195.886 271.917 li
196.053 257.583 li
196.136 277.583 li
196.219 274.749 li
196.386 294.749 li
196.469 306.249 li
196.552 289.083 li
196.719 274.749 li
196.802 280.499 li
196.969 283.333 li
197.052 268.999 li
197.136 266.167 li
197.302 246.083 li
197.386 257.583 li
197.469 260.417 li
197.636 243.249 li
197.719 246.083 li
197.886 220.333 li
197.969 214.583 li
198.052 226.083 li
198.219 234.667 li
198.302 228.917 li
198.386 231.749 li
198.552 237.499 li
198.636 260.417 li
198.802 248.999 li
198.886 254.667 li
198.969 283.333 li
199.136 274.749 li
199.219 271.917 li
199.302 283.333 li
199.469 251.833 li
199.552 243.249 li
199.719 251.833 li
199.802 260.417 li
199.886 260.417 li
200.052 294.749 li
200.136 294.749 li
200.219 283.333 li
200.386 277.583 li
200.469 300.499 li
200.636 283.333 li
200.719 286.167 li
200.802 234.667 li
200.969 274.749 li
201.052 263.249 li
201.219 251.833 li
201.302 254.667 li
201.386 240.417 li
201.552 277.583 li
201.636 266.167 li
201.719 251.833 li
201.886 248.999 li
201.969 246.083 li
202.136 286.167 li
202.219 291.917 li
202.302 297.667 li
202.469 263.249 li
202.552 274.749 li
202.635 283.333 li
202.802 266.167 li
202.885 266.167 li
203.052 274.749 li
203.135 271.917 li
203.219 283.333 li
203.385 286.167 li
203.469 297.667 li
203.552 266.167 li
203.719 277.583 li
203.802 266.167 li
203.969 277.583 li
204.052 280.499 li
204.135 309.083 li
204.302 329.167 li
204.385 320.583 li
204.469 291.917 li
204.635 303.333 li
204.719 300.501 li
204.885 289.083 li
204.969 263.251 li
205.052 274.751 li
205.219 260.417 li
205.302 254.667 li
205.385 251.833 li
205.552 260.417 li
205.635 277.583 li
205.802 268.999 li
205.885 251.833 li
205.969 260.417 li
206.135 246.083 li
206.219 231.749 li
206.385 231.749 li
206.469 234.667 li
206.552 237.499 li
206.719 223.167 li
206.802 214.583 li
206.885 194.583 li
207.052 197.417 li
207.135 191.667 li
207.302 186 li
207.385 186 li
207.468 174.5 li
207.635 200.25 li
207.718 206 li
207.802 203.167 li
207.968 211.75 li
208.052 254.667 li
208.218 243.251 li
208.302 223.167 li
208.385 231.751 li
208.552 251.833 li
208.635 260.417 li
208.718 254.667 li
208.885 260.417 li
208.968 291.917 li
209.135 277.583 li
209.218 274.751 li
209.302 274.751 li
209.468 266.167 li
209.552 271.917 li
209.635 266.167 li
209.802 294.751 li
209.885 277.583 li
210.052 283.333 li
210.135 294.751 li
210.218 294.751 li
210.385 274.751 li
210.468 280.501 li
210.552 303.333 li
210.718 303.333 li
210.802 306.251 li
210.968 326.251 li
211.052 332.001 li
211.135 317.667 li
211.302 320.583 li
211.385 320.583 li
211.468 303.333 li
211.635 312.001 li
211.718 314.833 li
211.885 306.251 li
211.968 294.751 li
212.052 312.001 li
212.218 337.751 li
212.302 323.417 li
212.468 312.001 li
212.552 309.083 li
212.635 300.501 li
212.637 300.499 mo
212.804 294.749 li
212.887 289.083 li
212.97 257.583 li
213.137 260.417 li
213.22 223.167 li
213.387 263.249 li
213.47 260.417 li
213.554 254.667 li
213.72 277.583 li
213.804 280.499 li
213.887 271.917 li
214.054 266.167 li
214.137 286.167 li
214.304 268.999 li
214.387 286.167 li
214.47 268.999 li
214.637 263.249 li
214.72 268.999 li
214.804 274.749 li
214.97 254.667 li
215.053 248.999 li
215.22 251.833 li
215.303 260.417 li
215.387 251.833 li
215.553 283.333 li
215.637 289.083 li
215.72 291.917 li
215.887 274.749 li
215.97 260.417 li
216.137 266.167 li
216.22 257.583 li
216.303 274.749 li
216.47 294.749 li
216.553 291.917 li
216.637 294.749 li
216.803 286.167 li
216.887 277.583 li
217.053 263.249 li
217.137 286.167 li
217.22 294.749 li
217.387 286.167 li
217.47 294.749 li
217.553 274.749 li
217.72 271.917 li
217.803 271.917 li
217.97 277.583 li
218.053 274.749 li
218.137 283.333 li
218.303 286.167 li
218.387 280.499 li
218.553 286.167 li
218.637 297.667 li
218.72 303.333 li
218.887 309.083 li
218.97 306.249 li
219.053 289.083 li
219.22 280.499 li
219.303 294.749 li
219.47 323.417 li
219.553 320.583 li
219.637 331.999 li
219.803 320.583 li
219.887 314.833 li
219.97 320.583 li
220.137 297.667 li
220.22 329.167 li
220.387 314.833 li
220.47 323.417 li
220.553 311.999 li
220.72 306.249 li
220.803 311.999 li
220.886 289.083 li
221.053 314.833 li
221.136 311.999 li
221.303 326.249 li
221.386 340.583 li
221.47 357.749 li
221.636 323.417 li
221.72 329.167 li
221.803 326.249 li
221.97 320.583 li
222.053 320.583 li
222.22 334.833 li
222.303 346.333 li
222.386 354.917 li
222.553 343.499 li
222.636 343.499 li
222.72 329.167 li
222.886 320.583 li
222.97 303.333 li
223.136 303.333 li
223.22 311.999 li
223.303 294.749 li
223.47 300.499 li
223.553 286.167 li
223.636 291.917 li
223.803 303.333 li
223.886 297.667 li
224.053 311.999 li
224.136 326.249 li
224.22 271.917 li
224.386 300.499 li
224.47 286.167 li
224.636 289.083 li
224.72 280.499 li
224.803 291.917 li
224.97 286.167 li
225.053 306.249 li
225.136 306.249 li
225.303 294.749 li
225.386 291.917 li
225.553 306.249 li
225.636 309.083 li
225.72 300.499 li
225.886 306.249 li
225.969 306.249 li
226.053 268.999 li
226.219 260.417 li
226.303 294.749 li
226.469 300.499 li
226.553 283.333 li
226.636 289.083 li
226.803 283.333 li
226.886 271.917 li
226.969 271.917 li
227.136 260.417 li
227.219 226.083 li
227.386 240.417 li
227.469 268.999 li
227.553 254.667 li
227.719 231.749 li
227.803 257.583 li
227.886 274.749 li
228.053 254.667 li
228.136 266.167 li
228.303 266.167 li
228.386 297.667 li
228.469 257.583 li
228.636 257.583 li
228.719 260.417 li
228.803 240.417 li
228.969 206 li
229.053 208.917 li
229.219 243.249 li
229.303 251.833 li
229.386 240.417 li
229.553 257.583 li
229.636 280.501 li
229.803 286.167 li
229.886 289.083 li
229.969 277.583 li
230.136 280.499 li
230.219 268.999 li
230.303 240.417 li
230.469 234.667 li
230.553 254.667 li
230.719 248.999 li
230.803 240.417 li
230.886 237.499 li
231.053 234.667 li
231.136 254.667 li
231.219 260.417 li
231.386 260.417 li
231.469 257.583 li
231.636 260.417 li
231.719 243.249 li
231.802 237.499 li
231.969 257.583 li
232.052 257.583 li
232.136 268.999 li
232.302 271.917 li
232.386 268.999 li
232.552 251.833 li
232.636 228.917 li
232.719 248.999 li
232.886 248.999 li
232.969 266.167 li
233.052 243.249 li
233.219 228.917 li
233.302 248.999 li
233.469 246.083 li
233.552 260.417 li
233.636 251.833 li
233.802 243.249 li
233.886 240.417 li
233.969 231.749 li
234.136 257.583 li
234.219 266.167 li
234.386 243.249 li
234.469 237.499 li
234.552 260.417 li
234.719 260.417 li
234.802 283.333 li
234.886 266.167 li
235.052 251.833 li
235.136 260.417 li
235.302 268.999 li
235.386 266.167 li
235.469 263.249 li
235.636 251.833 li
235.719 246.083 li
235.886 254.667 li
235.969 234.667 li
236.052 271.917 li
236.219 243.249 li
236.302 240.417 li
236.386 266.167 li
236.552 271.917 li
236.636 240.417 li
236.802 223.167 li
236.886 260.417 li
236.969 257.583 li
237.135 260.417 li
237.219 271.917 li
237.302 283.333 li
237.469 286.167 li
237.552 254.667 li
237.719 268.999 li
237.802 277.583 li
237.885 274.749 li
238.052 263.249 li
238.135 274.749 li
238.219 260.417 li
238.385 271.917 li
238.469 260.417 li
238.635 280.499 li
238.719 283.333 li
238.802 257.583 li
238.969 251.833 li
239.052 246.083 li
239.135 231.749 li
239.302 203.167 li
239.385 208.917 li
239.552 186 li
239.635 183.083 li
239.719 208.917 li
239.885 231.749 li
239.969 228.917 li
240.052 234.667 li
240.219 220.333 li
240.302 228.917 li
240.469 211.75 li
240.552 223.167 li
240.635 217.5 li
240.802 226.083 li
240.885 231.749 li
240.969 257.583 li
241.135 237.499 li
241.219 248.999 li
241.385 234.667 li
241.469 254.667 li
241.552 266.167 li
241.719 266.167 li
241.802 277.583 li
241.969 268.999 li
242.052 234.667 li
242.135 271.917 li
242.302 263.249 li
242.385 266.167 li
242.468 251.833 li
242.635 248.999 li
242.718 266.167 li
242.885 248.999 li
242.968 263.249 li
243.052 263.249 li
243.218 289.083 li
243.302 268.999 li
243.385 280.499 li
243.552 277.583 li
243.635 263.249 li
243.802 266.167 li
243.885 257.583 li
243.968 260.417 li
244.135 251.833 li
244.218 246.083 li
244.302 251.833 li
244.468 277.583 li
244.552 280.499 li
244.718 248.999 li
244.802 271.917 li
244.885 274.749 li
245.052 274.749 li
245.135 268.999 li
245.218 246.083 li
245.385 240.417 li
245.468 243.249 li
245.635 254.667 li
245.718 268.999 li
245.802 289.083 li
245.968 251.833 li
246.052 251.833 li
246.135 240.417 li
246.302 277.583 li
246.385 214.583 li
246.552 228.917 li
246.635 237.499 li
246.718 228.917 li
246.885 228.917 li
246.968 243.249 li
246.97 243.249 mo
247.054 234.667 li
247.22 231.749 li
247.304 231.749 li
247.47 248.999 li
247.554 220.333 li
247.637 223.167 li
247.804 248.999 li
247.887 234.667 li
248.054 243.249 li
248.137 228.917 li
248.22 260.417 li
248.387 251.833 li
248.47 246.083 li
248.554 254.667 li
248.72 254.667 li
248.804 248.999 li
248.97 268.999 li
249.053 254.667 li
249.137 286.167 li
249.303 303.333 li
249.387 314.833 li
249.47 274.749 li
249.637 271.917 li
249.72 266.167 li
249.887 271.917 li
249.97 274.749 li
250.053 266.167 li
250.22 237.499 li
250.303 226.083 li
250.387 231.749 li
250.553 237.499 li
250.637 231.749 li
250.803 248.999 li
250.887 263.249 li
250.97 271.917 li
251.137 268.999 li
251.22 268.999 li
251.303 280.499 li
251.47 274.749 li
251.553 248.999 li
251.72 260.417 li
251.803 266.167 li
251.887 268.999 li
252.053 257.583 li
252.137 268.999 li
252.22 243.249 li
252.387 251.833 li
252.47 268.999 li
252.637 254.667 li
252.72 240.417 li
252.803 217.5 li
252.97 211.75 li
253.053 226.083 li
253.137 186 li
253.303 194.583 li
253.387 217.5 li
253.553 228.917 li
253.637 228.917 li
253.72 220.333 li
253.887 231.749 li
253.97 231.749 li
254.137 228.917 li
254.22 231.749 li
254.303 234.667 li
254.47 237.499 li
254.553 231.749 li
254.636 231.749 li
254.803 248.999 li
254.886 237.499 li
255.053 234.667 li
255.136 234.667 li
255.22 220.333 li
255.386 231.749 li
255.47 226.083 li
255.553 214.583 li
255.72 223.167 li
255.803 223.167 li
255.97 200.25 li
256.053 223.167 li
256.136 231.749 li
256.303 211.75 li
256.386 206 li
256.47 186 li
256.636 174.5 li
256.72 214.583 li
256.886 240.417 li
256.97 208.917 li
257.053 197.417 li
257.22 197.417 li
257.303 226.083 li
257.386 197.417 li
257.553 188.833 li
257.636 165.917 li
257.803 197.417 li
257.886 186 li
257.97 194.583 li
258.136 206 li
258.22 186 li
258.303 206 li
258.47 197.417 li
258.553 194.583 li
258.72 200.25 li
258.803 208.917 li
258.886 211.75 li
259.053 228.917 li
259.136 237.499 li
259.303 197.417 li
259.386 188.833 li
259.47 186 li
259.636 168.75 li
259.72 177.417 li
259.803 197.417 li
259.969 188.833 li
260.053 197.417 li
260.219 200.25 li
260.303 203.167 li
260.386 194.583 li
260.553 208.917 li
260.636 226.083 li
260.719 223.167 li
260.886 217.5 li
260.969 228.917 li
261.136 234.667 li
261.219 228.917 li
261.303 223.167 li
261.469 214.583 li
261.553 203.167 li
261.636 206 li
261.803 228.917 li
261.886 231.749 li
262.053 237.499 li
262.136 206 li
262.219 206 li
262.386 208.917 li
262.469 194.583 li
262.553 214.583 li
262.719 211.75 li
262.803 197.417 li
262.969 177.417 li
263.053 211.75 li
263.136 214.583 li
263.303 246.083 li
263.386 234.667 li
263.469 226.083 li
263.636 226.083 li
263.719 220.333 li
263.886 228.917 li
263.969 240.417 li
264.053 220.333 li
264.219 208.917 li
264.303 240.417 li
264.386 237.499 li
264.553 228.917 li
264.636 220.333 li
264.803 266.167 li
264.886 268.999 li
264.969 266.167 li
265.136 263.251 li
265.219 271.917 li
265.386 280.501 li
265.469 257.583 li
265.552 283.333 li
265.719 294.751 li
265.802 294.751 li
265.886 300.501 li
266.052 300.501 li
266.136 300.501 li
266.302 300.501 li
266.386 294.751 li
266.469 303.333 li
266.636 303.333 li
266.719 300.501 li
266.802 312.001 li
266.969 286.167 li
267.052 312.001 li
267.219 320.583 li
267.302 306.251 li
267.386 294.751 li
267.552 294.751 li
267.636 312.001 li
267.719 314.833 li
267.886 326.251 li
267.969 340.583 li
268.136 334.833 li
268.219 317.667 li
268.302 360.667 li
268.469 343.501 li
268.552 329.167 li
268.636 323.417 li
268.802 323.417 li
268.886 320.583 li
269.052 297.667 li
269.136 280.501 li
269.219 300.501 li
269.386 303.333 li
269.469 294.749 li
269.552 306.249 li
269.719 300.499 li
269.802 320.583 li
269.969 317.667 li
270.052 294.749 li
270.136 314.833 li
270.302 331.999 li
270.386 329.167 li
270.469 317.667 li
270.636 320.583 li
270.719 306.249 li
270.885 291.917 li
270.969 300.499 li
271.052 306.249 li
271.219 297.667 li
271.302 280.499 li
271.469 289.083 li
271.552 280.499 li
271.635 280.499 li
271.802 294.749 li
271.885 291.917 li
271.969 263.249 li
272.135 257.583 li
272.219 271.917 li
272.385 271.917 li
272.469 277.583 li
272.552 277.583 li
272.719 289.083 li
272.802 271.917 li
272.885 274.749 li
273.052 266.167 li
273.135 274.749 li
273.302 263.249 li
273.385 283.333 li
273.469 271.917 li
273.635 277.583 li
273.719 283.333 li
273.802 260.417 li
273.969 274.749 li
274.052 260.417 li
274.219 243.249 li
274.302 246.083 li
274.385 268.999 li
274.552 243.249 li
274.635 268.999 li
274.719 274.749 li
274.885 274.749 li
274.969 266.167 li
275.135 286.167 li
275.219 274.749 li
275.302 266.167 li
275.469 266.167 li
275.552 289.083 li
275.635 297.667 li
275.802 280.499 li
275.885 271.917 li
276.052 268.999 li
276.135 280.499 li
276.218 297.667 li
276.385 303.333 li
276.468 291.917 li
276.552 280.499 li
276.718 314.833 li
276.802 289.083 li
276.968 286.167 li
277.052 294.749 li
277.135 306.249 li
277.302 303.333 li
277.385 309.083 li
277.552 280.499 li
277.635 271.917 li
277.718 263.249 li
277.885 289.083 li
277.968 286.167 li
278.052 303.333 li
278.218 286.167 li
278.302 274.749 li
278.468 294.749 li
278.552 257.583 li
278.635 237.499 li
278.802 286.167 li
278.885 274.749 li
278.968 291.917 li
279.135 260.417 li
279.218 283.333 li
279.385 300.499 li
279.468 283.333 li
279.552 268.999 li
279.718 274.749 li
279.802 289.083 li
279.885 297.667 li
280.052 300.499 li
280.135 303.333 li
280.302 311.999 li
280.385 306.249 li
280.468 300.499 li
280.635 297.667 li
280.718 289.083 li
280.802 283.333 li
280.968 240.417 li
281.052 254.667 li
281.218 251.833 li
281.302 248.999 li
281.304 248.999 mo
281.387 274.749 li
281.554 268.999 li
281.637 274.749 li
281.72 297.667 li
281.887 309.083 li
281.97 291.917 li
282.137 320.583 li
282.22 306.249 li
282.304 320.583 li
282.47 309.083 li
282.554 268.999 li
282.72 268.999 li
282.804 277.583 li
282.887 283.333 li
283.054 277.583 li
283.137 280.499 li
283.22 283.333 li
283.387 306.249 li
283.47 303.333 li
283.637 311.999 li
283.72 314.833 li
283.803 297.667 li
283.97 294.749 li
284.053 289.083 li
284.137 311.999 li
284.303 309.083 li
284.387 300.501 li
284.553 300.501 li
284.637 277.583 li
284.72 274.751 li
284.887 248.999 li
284.97 254.667 li
285.053 246.083 li
285.22 280.499 li
285.303 263.249 li
285.47 243.249 li
285.553 246.083 li
285.637 240.417 li
285.803 243.249 li
285.887 237.499 li
285.97 231.749 li
286.137 220.333 li
286.22 240.417 li
286.387 231.749 li
286.47 220.333 li
286.553 237.499 li
286.72 237.499 li
286.803 257.583 li
286.887 274.749 li
287.053 263.249 li
287.137 240.417 li
287.303 228.917 li
287.387 220.333 li
287.47 177.417 li
287.637 191.667 li
287.72 183.083 li
287.803 183.083 li
287.97 214.583 li
288.053 203.167 li
288.22 188.833 li
288.303 223.167 li
288.387 231.749 li
288.553 246.083 li
288.636 257.583 li
288.803 268.999 li
288.886 248.999 li
288.97 234.667 li
289.136 240.417 li
289.22 234.667 li
289.303 228.917 li
289.47 214.583 li
289.553 231.749 li
289.72 231.749 li
289.803 228.917 li
289.886 243.249 li
290.053 228.917 li
290.136 228.917 li
290.22 226.083 li
290.386 260.417 li
290.47 274.751 li
290.636 269.001 li
290.72 289.083 li
290.803 246.083 li
290.97 249.001 li
291.053 266.167 li
291.136 246.083 li
291.303 243.251 li
291.386 249.001 li
291.553 269.001 li
291.636 246.083 li
291.72 243.251 li
291.886 257.583 li
291.97 257.583 li
292.053 251.833 li
292.22 251.833 li
292.303 243.251 li
292.47 237.501 li
292.553 223.167 li
292.636 254.667 li
292.803 249.001 li
292.886 266.167 li
292.97 263.251 li
293.136 231.751 li
293.22 243.251 li
293.386 234.667 li
293.47 217.5 li
293.553 203.167 li
293.72 200.25 li
293.803 226.083 li
293.886 228.917 li
294.053 231.751 li
294.136 214.583 li
294.303 231.751 li
294.386 214.583 li
294.469 237.501 li
294.636 237.501 li
294.719 217.5 li
294.886 194.583 li
294.969 183.083 li
295.053 234.667 li
295.219 206 li
295.303 194.583 li
295.386 220.333 li
295.553 223.167 li
295.636 214.583 li
295.803 200.25 li
295.886 217.5 li
295.969 203.167 li
296.136 214.583 li
296.219 214.583 li
296.303 228.917 li
296.469 226.083 li
296.553 191.667 li
296.719 197.417 li
296.803 206 li
296.886 200.25 li
297.053 220.333 li
297.136 180.25 li
297.219 197.417 li
297.386 220.333 li
297.469 231.751 li
297.636 257.583 li
297.719 263.251 li
297.803 249.001 li
297.969 228.917 li
298.053 200.25 li
298.136 217.5 li
298.303 200.25 li
298.386 228.917 li
298.553 231.751 li
298.636 257.583 li
298.719 266.167 li
298.886 260.417 li
298.969 246.083 li
299.053 240.417 li
299.219 246.083 li
299.303 240.417 li
299.469 254.667 li
299.552 254.667 li
299.636 231.751 li
299.802 231.751 li
299.886 237.501 li
299.969 257.583 li
300.136 251.833 li
300.219 251.833 li
300.386 266.167 li
300.469 260.417 li
300.552 251.833 li
300.719 260.417 li
300.802 269.001 li
300.969 271.917 li
301.052 260.417 li
301.136 263.251 li
301.302 220.333 li
301.386 246.083 li
301.469 274.751 li
301.636 269.001 li
301.719 271.917 li
301.886 283.333 li
301.969 274.751 li
302.052 277.583 li
302.219 283.333 li
302.302 271.917 li
302.386 254.667 li
302.552 249.001 li
302.636 220.333 li
302.802 243.251 li
302.886 237.501 li
302.969 223.167 li
303.136 220.333 li
303.219 240.417 li
303.302 254.667 li
303.469 263.251 li
303.552 274.751 li
303.719 269.001 li
303.802 246.083 li
303.886 263.251 li
304.052 260.417 li
304.136 251.833 li
304.219 234.667 li
304.386 234.667 li
304.469 240.417 li
304.636 226.083 li
304.719 240.417 li
304.802 226.083 li
304.969 243.251 li
305.052 246.083 li
305.135 223.167 li
305.302 228.917 li
305.385 249.001 li
305.552 260.417 li
305.635 266.167 li
305.719 249.001 li
305.885 254.667 li
305.969 263.251 li
306.052 291.917 li
306.219 240.417 li
306.302 220.333 li
306.469 251.833 li
306.552 203.167 li
306.635 211.75 li
306.802 186 li
306.885 194.583 li
307.052 186 li
307.135 228.917 li
307.219 228.917 li
307.385 203.167 li
307.469 188.833 li
307.552 240.417 li
307.719 243.249 li
307.802 234.667 li
307.969 263.251 li
308.052 257.583 li
308.135 231.749 li
308.302 226.083 li
308.385 237.499 li
308.469 208.917 li
308.635 217.5 li
308.719 226.083 li
308.885 240.417 li
308.969 266.167 li
309.052 237.499 li
309.219 246.083 li
309.302 243.249 li
309.385 251.833 li
309.552 237.499 li
309.635 240.417 li
309.802 240.417 li
309.885 217.5 li
309.969 214.583 li
310.135 200.25 li
310.219 197.417 li
310.302 186 li
310.468 208.917 li
310.552 226.083 li
310.718 214.583 li
310.802 208.917 li
310.885 200.25 li
311.052 165.917 li
311.135 174.5 li
311.218 197.417 li
311.385 197.417 li
311.468 237.501 li
311.635 243.251 li
311.718 211.75 li
311.802 249.001 li
311.968 237.501 li
312.052 254.667 li
312.218 237.501 li
312.302 240.417 li
312.385 237.501 li
312.552 243.251 li
312.635 240.417 li
312.718 249.001 li
312.885 223.167 li
312.968 228.917 li
313.135 234.667 li
313.218 249.001 li
313.302 208.917 li
313.468 223.167 li
313.552 223.167 li
313.635 240.417 li
313.802 246.083 li
313.885 237.499 li
314.052 260.417 li
314.135 286.167 li
314.218 271.917 li
314.385 266.167 li
314.468 263.251 li
314.552 220.333 li
314.718 237.501 li
314.802 240.417 li
314.968 240.417 li
315.052 246.083 li
315.135 246.083 li
315.302 240.417 li
315.385 220.333 li
315.468 217.5 li
315.635 183.083 li
315.637 183.083 mo
315.72 211.75 li
315.887 200.25 li
315.97 183.083 li
316.054 203.167 li
316.22 223.167 li
316.304 226.083 li
316.387 240.417 li
316.554 260.417 li
316.637 263.249 li
316.804 263.249 li
316.887 274.749 li
316.97 268.999 li
317.137 283.333 li
317.22 257.583 li
317.303 240.417 li
317.47 246.083 li
317.553 220.333 li
317.72 223.167 li
317.803 246.083 li
317.887 246.083 li
318.053 248.999 li
318.137 240.417 li
318.303 254.667 li
318.387 280.499 li
318.47 266.167 li
318.637 254.667 li
318.72 234.667 li
318.803 257.583 li
318.97 268.999 li
319.053 263.249 li
319.22 268.999 li
319.303 254.667 li
319.387 271.917 li
319.553 260.417 li
319.637 231.749 li
319.72 217.5 li
319.887 200.25 li
319.97 220.333 li
320.137 217.5 li
320.22 200.25 li
320.303 208.917 li
320.47 234.667 li
320.553 246.083 li
320.637 243.249 li
320.803 271.917 li
320.887 263.249 li
321.053 254.667 li
321.137 248.999 li
321.22 280.499 li
321.387 297.667 li
321.47 291.917 li
321.553 277.583 li
321.72 277.583 li
321.803 251.833 li
321.97 246.083 li
322.053 280.499 li
322.137 277.583 li
322.303 274.749 li
322.387 277.583 li
322.47 268.999 li
322.637 297.667 li
322.72 303.333 li
322.887 289.083 li
322.97 286.167 li
323.053 329.167 li
323.22 320.583 li
323.303 314.833 li
323.386 323.417 li
323.553 300.499 li
323.636 260.417 li
323.803 277.583 li
323.886 283.333 li
323.97 294.749 li
324.136 283.333 li
324.22 283.333 li
324.386 291.917 li
324.47 291.917 li
324.553 297.667 li
324.72 283.333 li
324.803 260.417 li
324.886 254.667 li
325.053 243.249 li
325.136 240.417 li
325.303 251.833 li
325.386 286.167 li
325.47 274.749 li
325.636 268.999 li
325.72 257.583 li
325.803 254.667 li
325.97 289.083 li
326.053 286.167 li
326.22 266.167 li
326.303 254.667 li
326.386 260.417 li
326.553 277.583 li
326.636 280.499 li
326.72 289.083 li
326.886 266.167 li
326.97 289.083 li
327.136 283.333 li
327.22 266.167 li
327.303 263.249 li
327.47 246.083 li
327.553 214.583 li
327.636 191.667 li
327.803 220.333 li
327.886 203.167 li
328.053 246.083 li
328.136 251.833 li
328.219 234.667 li
328.386 243.249 li
328.469 266.167 li
328.553 243.249 li
328.719 248.999 li
328.803 277.583 li
328.969 266.167 li
329.053 283.333 li
329.136 283.333 li
329.303 291.917 li
329.386 271.917 li
329.469 274.749 li
329.636 268.999 li
329.719 274.749 li
329.886 268.999 li
329.969 257.583 li
330.053 263.249 li
330.219 263.249 li
330.303 254.667 li
330.469 251.833 li
330.553 266.167 li
330.636 240.417 li
330.803 223.167 li
330.886 226.083 li
330.969 231.749 li
331.136 240.417 li
331.219 240.417 li
331.386 254.667 li
331.469 254.667 li
331.553 243.249 li
331.719 240.417 li
331.803 274.749 li
331.886 254.667 li
332.053 246.083 li
332.136 237.499 li
332.303 237.499 li
332.386 246.083 li
332.469 240.417 li
332.636 271.917 li
332.719 268.999 li
332.803 257.583 li
332.969 266.167 li
333.053 243.249 li
333.219 263.249 li
333.303 268.999 li
333.386 263.249 li
333.553 263.249 li
333.636 271.917 li
333.719 268.999 li
333.886 254.667 li
333.969 248.999 li
334.136 248.999 li
334.219 263.249 li
334.302 271.917 li
334.469 268.999 li
334.552 263.249 li
334.636 274.749 li
334.802 268.999 li
334.886 268.999 li
335.052 294.749 li
335.136 291.917 li
335.219 300.499 li
335.386 297.667 li
335.469 300.499 li
335.636 309.083 li
335.719 317.667 li
335.802 291.917 li
335.969 286.167 li
336.052 306.249 li
336.136 283.333 li
336.302 309.083 li
336.386 326.249 li
336.552 329.167 li
336.636 314.833 li
336.719 314.833 li
336.886 320.583 li
336.969 309.083 li
337.052 311.999 li
337.219 306.249 li
337.302 303.333 li
337.469 329.167 li
337.552 306.249 li
337.636 309.083 li
337.802 300.499 li
337.886 323.417 li
337.969 314.833 li
338.136 303.333 li
338.219 289.083 li
338.386 294.749 li
338.469 294.749 li
338.552 291.917 li
338.719 329.167 li
338.802 309.083 li
338.886 306.249 li
339.052 320.583 li
339.135 314.833 li
339.302 300.499 li
339.385 300.499 li
339.469 320.583 li
339.635 314.833 li
339.719 297.667 li
339.802 289.083 li
339.969 303.333 li
340.052 286.167 li
340.219 306.249 li
340.302 309.083 li
340.385 311.999 li
340.552 326.249 li
340.635 309.083 li
340.719 309.083 li
340.885 291.917 li
340.969 289.083 li
341.135 291.917 li
341.219 291.917 li
341.302 297.667 li
341.469 311.999 li
341.552 334.833 li
341.719 331.999 li
341.802 311.999 li
341.885 317.667 li
342.052 271.917 li
342.135 260.417 li
342.219 268.999 li
342.385 257.583 li
342.469 274.749 li
342.635 289.083 li
342.719 300.501 li
342.802 283.333 li
342.969 271.917 li
343.052 314.833 li
343.135 314.833 li
343.302 306.251 li
343.385 300.501 li
343.552 289.083 li
343.635 297.667 li
343.719 271.917 li
343.885 266.167 li
343.969 263.251 li
344.052 274.751 li
344.219 269.001 li
344.302 271.917 li
344.469 260.417 li
344.552 269.001 li
344.635 274.751 li
344.802 297.667 li
344.885 274.751 li
344.968 269.001 li
345.135 280.501 li
345.218 263.251 li
345.385 260.417 li
345.468 254.667 li
345.552 231.751 li
345.718 251.833 li
345.802 240.417 li
345.885 269.001 li
346.052 217.5 li
346.135 223.167 li
346.302 226.083 li
346.385 243.251 li
346.468 251.833 li
346.635 243.251 li
346.718 246.083 li
346.802 234.667 li
346.968 237.501 li
347.052 246.083 li
347.218 249.001 li
347.302 260.417 li
347.385 243.251 li
347.552 266.167 li
347.635 263.251 li
347.802 269.001 li
347.885 269.001 li
347.968 263.251 li
348.135 269.001 li
348.218 263.251 li
348.302 289.083 li
348.468 283.333 li
348.552 283.333 li
348.718 266.167 li
348.802 269.001 li
348.885 294.751 li
349.052 306.251 li
349.135 297.667 li
349.218 289.083 li
349.385 286.167 li
349.468 274.751 li
349.635 286.167 li
349.718 277.583 li
349.802 294.751 li
349.968 274.751 li
349.97 274.749 mo
350.054 306.249 li
350.137 280.499 li
350.304 277.583 li
350.387 289.083 li
350.554 289.083 li
350.637 280.499 li
350.72 274.749 li
350.887 271.917 li
350.97 277.583 li
351.054 260.417 li
351.22 266.167 li
351.304 297.667 li
351.47 306.249 li
351.554 297.667 li
351.637 300.499 li
351.804 300.499 li
351.887 303.333 li
351.97 283.333 li
352.137 277.583 li
352.22 291.917 li
352.387 294.749 li
352.47 277.583 li
352.553 266.167 li
352.72 283.333 li
352.803 271.917 li
352.887 291.917 li
353.053 294.749 li
353.137 297.667 li
353.303 297.667 li
353.387 297.667 li
353.47 291.917 li
353.637 306.249 li
353.72 314.833 li
353.887 331.999 li
353.97 314.833 li
354.053 309.083 li
354.22 337.749 li
354.303 340.583 li
354.387 331.999 li
354.553 329.167 li
354.637 297.667 li
354.803 306.249 li
354.887 326.249 li
354.97 303.333 li
355.137 254.667 li
355.22 271.917 li
355.303 240.417 li
355.47 268.999 li
355.553 268.999 li
355.72 300.499 li
355.803 283.333 li
355.887 280.499 li
356.053 280.499 li
356.137 274.749 li
356.22 289.083 li
356.387 274.749 li
356.47 289.083 li
356.637 289.083 li
356.72 271.917 li
356.803 240.417 li
356.97 254.667 li
357.053 260.417 li
357.137 266.167 li
357.303 243.249 li
357.387 254.667 li
357.553 237.499 li
357.636 243.249 li
357.72 243.249 li
357.886 240.417 li
357.97 260.417 li
358.053 266.167 li
358.22 266.167 li
358.303 266.167 li
358.47 251.833 li
358.553 240.417 li
358.636 254.667 li
358.803 248.999 li
358.886 260.417 li
358.97 246.083 li
359.136 240.417 li
359.22 231.749 li
359.386 248.999 li
359.47 251.833 li
359.553 274.749 li
359.72 260.417 li
359.803 251.833 li
359.97 246.083 li
360.053 228.917 li
360.136 240.417 li
360.303 248.999 li
360.386 260.417 li
360.47 268.999 li
360.636 260.417 li
360.72 257.583 li
360.886 283.333 li
360.97 283.333 li
361.053 300.499 li
361.22 283.333 li
361.303 286.167 li
361.386 277.583 li
361.553 283.333 li
361.636 286.167 li
361.803 294.749 li
361.886 260.417 li
361.97 271.917 li
362.136 283.333 li
362.22 268.999 li
362.303 263.249 li
362.47 277.583 li
362.553 257.583 li
362.72 266.167 li
362.803 240.417 li
362.886 251.833 li
363.053 271.917 li
363.136 260.417 li
363.219 268.999 li
363.386 260.417 li
363.469 286.167 li
363.636 271.917 li
363.719 294.749 li
363.803 294.749 li
363.969 291.917 li
364.053 274.749 li
364.136 260.417 li
364.303 251.833 li
364.386 274.749 li
364.553 257.583 li
364.636 248.999 li
364.719 271.917 li
364.886 283.333 li
364.969 260.417 li
365.136 277.583 li
365.219 289.083 li
365.303 294.749 li
365.469 291.917 li
365.553 268.999 li
365.636 251.833 li
365.803 246.083 li
365.886 263.249 li
366.053 257.583 li
366.136 266.167 li
366.219 286.167 li
366.386 297.667 li
366.469 297.667 li
366.553 297.667 li
366.719 286.167 li
366.803 297.667 li
366.969 289.083 li
367.053 263.249 li
367.136 257.583 li
367.303 257.583 li
367.386 254.667 li
367.469 266.167 li
367.636 260.417 li
367.719 240.417 li
367.886 237.499 li
367.969 234.667 li
368.053 248.999 li
368.219 237.499 li
368.303 228.917 li
368.386 217.5 li
368.552 257.583 li
368.636 251.833 li
368.802 257.583 li
368.886 248.999 li
368.969 248.999 li
369.136 246.083 li
369.219 246.083 li
369.302 248.999 li
369.469 248.999 li
369.552 217.5 li
369.719 188.833 li
369.802 194.583 li
369.886 246.083 li
370.052 223.167 li
370.136 223.167 li
370.219 237.499 li
370.386 234.667 li
370.469 237.499 li
370.636 271.917 li
370.719 271.917 li
370.802 260.417 li
370.969 263.249 li
371.052 263.249 li
371.219 266.167 li
371.302 257.583 li
371.386 266.167 li
371.552 280.499 li
371.636 271.917 li
371.719 254.667 li
371.886 260.417 li
371.969 268.999 li
372.136 289.083 li
372.219 280.499 li
372.302 271.917 li
372.469 271.917 li
372.552 268.999 li
372.636 251.833 li
372.802 268.999 li
372.886 268.999 li
373.052 277.583 li
373.136 263.249 li
373.219 266.167 li
373.386 263.249 li
373.469 266.167 li
373.552 246.083 li
373.719 220.333 li
373.802 226.083 li
373.969 217.5 li
374.052 220.333 li
374.135 214.583 li
374.302 217.5 li
374.385 231.749 li
374.469 223.167 li
374.635 200.25 li
374.719 206 li
374.885 194.583 li
374.969 203.167 li
375.052 217.5 li
375.219 228.917 li
375.302 214.583 li
375.385 203.167 li
375.552 220.333 li
375.635 237.499 li
375.802 217.5 li
375.885 223.167 li
375.969 234.667 li
376.135 217.5 li
376.219 217.5 li
376.302 208.917 li
376.469 211.75 li
376.552 217.5 li
376.719 231.749 li
376.802 231.749 li
376.885 208.917 li
377.052 223.167 li
377.135 234.667 li
377.302 220.333 li
377.385 208.917 li
377.469 177.417 li
377.635 183.083 li
377.719 191.667 li
377.802 197.417 li
377.969 214.583 li
378.052 197.417 li
378.219 180.25 li
378.302 186 li
378.385 200.25 li
378.552 200.25 li
378.635 203.167 li
378.719 214.583 li
378.885 237.499 li
378.969 220.333 li
379.135 191.667 li
379.219 200.25 li
379.302 203.167 li
379.468 206 li
379.552 208.917 li
379.635 203.167 li
379.802 217.5 li
379.885 200.25 li
380.052 203.167 li
380.135 194.583 li
380.218 214.583 li
380.385 223.167 li
380.468 203.167 li
380.552 211.75 li
380.718 200.25 li
380.802 191.667 li
380.968 191.667 li
381.052 171.667 li
381.135 186 li
381.302 180.25 li
381.385 174.5 li
381.468 168.75 li
381.635 174.5 li
381.718 174.5 li
381.885 160.167 li
381.968 165.917 li
382.052 174.5 li
382.218 188.833 li
382.302 191.667 li
382.385 217.5 li
382.552 228.917 li
382.635 231.749 li
382.802 234.667 li
382.885 237.499 li
382.968 228.917 li
383.135 220.333 li
383.218 223.167 li
383.385 208.917 li
383.468 194.583 li
383.552 197.417 li
383.718 208.917 li
383.802 211.75 li
383.885 206 li
384.052 220.333 li
384.135 203.167 li
384.302 214.583 li
384.304 214.583 mo
384.387 188.833 li
384.47 186 li
384.637 174.5 li
384.72 174.5 li
384.804 168.75 li
384.97 214.583 li
385.054 220.333 li
385.22 228.917 li
385.304 220.333 li
385.387 211.75 li
385.554 217.5 li
385.637 188.833 li
385.72 203.167 li
385.887 223.167 li
385.97 214.583 li
386.137 206 li
386.22 211.75 li
386.303 197.417 li
386.47 206 li
386.553 211.75 li
386.637 206 li
386.803 220.333 li
386.887 208.917 li
387.053 234.667 li
387.137 226.083 li
387.22 214.583 li
387.387 220.333 li
387.47 208.917 li
387.553 197.417 li
387.72 217.5 li
387.803 234.667 li
387.97 214.583 li
388.053 197.417 li
388.137 180.25 li
388.303 217.5 li
388.387 223.167 li
388.553 206 li
388.637 186 li
388.72 203.167 li
388.887 203.167 li
388.97 177.417 li
389.053 186 li
389.22 191.667 li
389.303 188.833 li
389.47 188.833 li
389.553 188.833 li
389.637 183.083 li
389.803 203.167 li
389.887 217.5 li
389.97 206 li
390.137 208.917 li
390.22 234.667 li
390.387 240.417 li
390.47 220.333 li
390.553 228.917 li
390.72 217.5 li
390.803 208.917 li
390.887 208.917 li
391.053 217.5 li
391.137 223.167 li
391.303 226.083 li
391.387 223.167 li
391.47 248.999 li
391.637 226.083 li
391.72 234.667 li
391.803 220.333 li
391.97 237.499 li
392.053 248.999 li
392.22 248.999 li
392.303 228.917 li
392.386 197.417 li
392.553 206 li
392.636 248.999 li
392.72 237.499 li
392.886 231.749 li
392.97 217.5 li
393.136 226.083 li
393.22 217.5 li
393.303 200.25 li
393.47 214.583 li
393.553 214.583 li
393.636 206 li
393.803 214.583 li
393.886 220.333 li
394.053 214.583 li
394.136 226.083 li
394.22 234.667 li
394.386 217.5 li
394.47 214.583 li
394.636 231.749 li
394.72 243.249 li
394.803 260.417 li
394.97 271.917 li
395.053 266.167 li
395.136 271.917 li
395.303 266.167 li
395.386 268.999 li
395.553 277.583 li
395.636 260.417 li
395.72 254.667 li
395.886 223.167 li
395.97 231.749 li
396.053 251.833 li
396.22 263.249 li
396.303 257.583 li
396.47 271.917 li
396.553 271.917 li
396.636 260.417 li
396.803 237.499 li
396.886 223.167 li
396.969 246.083 li
397.136 220.333 li
397.219 217.5 li
397.386 228.917 li
397.469 217.5 li
397.553 211.75 li
397.719 211.75 li
397.803 226.083 li
397.886 240.417 li
398.053 228.917 li
398.136 223.167 li
398.303 228.917 li
398.386 248.999 li
398.469 231.749 li
398.636 228.917 li
398.719 243.249 li
398.803 220.333 li
398.969 214.583 li
399.053 220.333 li
399.219 206 li
399.303 217.5 li
399.386 231.749 li
399.553 211.75 li
399.636 243.249 li
399.719 246.083 li
399.886 234.667 li
399.969 263.249 li
400.136 248.999 li
400.219 208.917 li
400.303 217.5 li
400.469 234.667 li
400.553 243.249 li
400.719 257.583 li
400.803 254.667 li
400.886 237.499 li
401.053 223.167 li
401.136 248.999 li
401.219 248.999 li
401.386 260.417 li
401.469 231.749 li
401.636 274.749 li
401.719 263.249 li
401.803 289.083 li
401.969 280.499 li
402.053 286.167 li
402.136 280.499 li
402.303 277.583 li
402.386 286.167 li
402.553 294.749 li
402.636 286.167 li
402.719 277.583 li
402.886 257.583 li
402.969 268.999 li
403.052 263.249 li
403.219 268.999 li
403.302 248.999 li
403.469 231.749 li
403.552 251.833 li
403.636 266.167 li
403.802 243.249 li
403.886 248.999 li
403.969 248.999 li
404.136 254.667 li
404.219 228.917 li
404.386 231.749 li
404.469 226.083 li
404.552 240.417 li
404.719 257.583 li
404.802 237.499 li
404.886 248.999 li
405.052 251.833 li
405.136 208.917 li
405.302 220.333 li
405.386 234.667 li
405.469 237.499 li
405.636 220.333 li
405.719 211.75 li
405.802 234.667 li
405.969 228.917 li
406.053 240.417 li
406.219 260.417 li
406.303 257.583 li
406.386 268.999 li
406.553 263.249 li
406.636 266.167 li
406.803 243.249 li
406.886 246.083 li
406.969 277.583 li
407.136 257.583 li
407.219 257.583 li
407.303 277.583 li
407.469 248.999 li
407.553 243.249 li
407.719 248.999 li
407.803 243.249 li
407.886 263.249 li
408.053 254.667 li
408.136 257.583 li
408.219 280.499 li
408.386 277.583 li
408.469 266.167 li
408.636 263.249 li
408.719 271.917 li
408.803 268.999 li
408.969 263.249 li
409.053 263.249 li
409.136 266.167 li
409.303 246.083 li
409.386 257.583 li
409.553 254.667 li
409.636 254.667 li
409.719 251.833 li
409.886 263.249 li
409.969 274.749 li
410.053 271.917 li
410.219 268.999 li
410.303 266.167 li
410.469 257.583 li
410.553 248.999 li
410.636 254.667 li
410.803 248.999 li
410.886 254.667 li
410.969 257.583 li
411.136 260.417 li
411.219 268.999 li
411.386 277.583 li
411.469 286.167 li
411.553 266.167 li
411.719 297.667 li
411.803 268.999 li
411.886 266.167 li
412.053 271.917 li
412.136 274.749 li
412.303 251.833 li
412.386 234.667 li
412.469 266.167 li
412.636 280.499 li
412.719 271.917 li
412.886 277.583 li
412.969 254.667 li
413.053 257.583 li
413.219 257.583 li
413.303 263.249 li
413.386 248.999 li
413.553 251.833 li
413.636 251.833 li
413.803 263.249 li
413.886 289.083 li
413.969 251.833 li
414.136 263.249 li
414.219 268.999 li
414.303 309.083 li
414.469 309.083 li
414.553 317.667 li
414.719 306.249 li
414.803 306.249 li
414.886 323.417 li
415.053 294.749 li
415.136 283.333 li
415.219 289.083 li
415.386 263.249 li
415.469 260.417 li
415.636 260.417 li
415.719 280.499 li
415.803 277.583 li
415.969 271.917 li
416.053 257.583 li
416.136 260.417 li
416.303 248.999 li
416.386 246.083 li
416.553 268.999 li
416.636 251.833 li
416.719 246.083 li
416.886 240.417 li
416.969 234.667 li
417.053 248.999 li
417.219 240.417 li
417.303 260.417 li
417.469 254.667 li
417.553 260.417 li
417.636 274.749 li
417.803 277.583 li
417.886 271.917 li
418.053 263.249 li
418.136 291.917 li
418.219 283.333 li
418.386 246.083 li
418.469 251.833 li
418.553 271.917 li
418.554 271.917 mo
418.72 271.917 li
418.804 228.917 li
418.97 234.667 li
419.054 266.167 li
419.137 263.249 li
419.304 251.833 li
419.387 220.333 li
419.47 277.583 li
419.637 283.333 li
419.72 280.499 li
419.887 268.999 li
419.97 280.499 li
420.054 306.249 li
420.22 306.249 li
420.304 291.917 li
420.387 314.833 li
420.554 289.083 li
420.637 291.917 li
420.804 311.999 li
420.887 314.833 li
420.97 289.083 li
421.137 300.499 li
421.22 294.749 li
421.304 303.333 li
421.47 306.249 li
421.554 289.083 li
421.72 311.999 li
421.804 320.583 li
421.887 291.917 li
422.054 289.083 li
422.137 248.999 li
422.22 274.749 li
422.387 291.917 li
422.47 289.083 li
422.637 266.167 li
422.72 283.333 li
422.804 263.249 li
422.97 243.249 li
423.054 266.167 li
423.137 277.583 li
423.304 280.499 li
423.387 297.667 li
423.554 291.917 li
423.637 297.667 li
423.72 289.083 li
423.887 274.749 li
423.97 271.917 li
424.137 263.249 li
424.22 271.917 li
424.304 277.583 li
424.47 280.499 li
424.554 289.083 li
424.637 300.499 li
424.804 280.499 li
424.887 271.917 li
425.054 280.499 li
425.137 291.917 li
425.22 280.499 li
425.387 289.083 li
425.47 294.749 li
425.554 283.333 li
425.72 286.167 li
425.804 286.167 li
425.97 271.917 li
426.054 266.167 li
426.137 274.749 li
426.304 274.749 li
426.387 271.917 li
426.47 240.417 li
426.637 257.583 li
426.72 268.999 li
426.887 271.917 li
426.97 271.917 li
427.054 260.417 li
427.22 266.167 li
427.304 240.417 li
427.387 237.499 li
427.554 260.417 li
427.637 271.917 li
427.804 243.249 li
427.887 231.749 li
427.97 243.249 li
428.137 268.999 li
428.22 268.999 li
428.304 266.167 li
428.47 283.333 li
428.554 280.499 li
428.72 260.417 li
428.804 277.583 li
428.887 280.499 li
429.054 260.417 li
429.137 254.667 li
429.221 297.667 li
429.387 289.083 li
429.471 260.417 li
429.637 266.167 li
429.721 263.249 li
429.804 251.833 li
429.971 240.417 li
430.054 254.667 li
430.221 257.583 li
430.304 263.249 li
430.387 277.583 li
430.554 283.333 li
430.637 274.749 li
430.721 268.999 li
430.887 277.583 li
430.971 283.333 li
431.137 277.583 li
431.221 231.749 li
431.304 226.083 li
431.471 223.167 li
431.554 223.167 li
431.637 237.499 li
431.804 248.999 li
431.887 251.833 li
432.054 237.499 li
432.137 228.917 li
432.221 234.667 li
432.387 231.749 li
432.471 240.417 li
432.554 240.417 li
432.721 220.333 li
432.804 206 li
432.971 208.917 li
433.054 208.917 li
433.137 228.917 li
433.304 174.5 li
433.387 177.417 li
433.471 214.583 li
433.637 220.333 li
433.721 203.167 li
433.887 231.749 li
433.971 237.499 li
434.054 206 li
434.221 214.583 li
434.304 191.667 li
434.387 220.333 li
434.554 186 li
434.637 206 li
434.804 197.417 li
434.887 217.5 li
434.971 251.833 li
435.137 234.667 li
435.221 217.5 li
435.304 217.5 li
435.471 217.5 li
435.554 203.167 li
435.721 208.917 li
435.804 220.333 li
435.887 231.749 li
436.054 234.667 li
436.137 254.667 li
436.304 266.167 li
436.387 248.999 li
436.471 271.917 li
436.637 277.583 li
436.721 260.417 li
436.804 283.333 li
436.971 300.499 li
437.054 294.749 li
437.221 280.499 li
437.304 289.083 li
437.387 286.167 li
437.554 263.249 li
437.637 277.583 li
437.721 271.917 li
437.887 268.999 li
437.971 274.749 li
438.137 277.583 li
438.221 268.999 li
438.304 274.749 li
438.471 277.583 li
438.554 254.667 li
438.637 277.583 li
438.804 266.167 li
438.887 274.749 li
439.054 277.583 li
439.137 289.083 li
439.221 294.749 li
439.387 311.999 li
439.471 309.083 li
439.554 291.917 li
439.721 286.167 li
439.804 280.499 li
439.971 289.083 li
440.054 274.749 li
440.137 274.749 li
440.304 243.249 li
440.387 271.917 li
440.471 263.249 li
440.637 263.249 li
440.721 254.667 li
440.887 263.249 li
440.971 268.999 li
441.054 289.083 li
441.221 286.167 li
441.304 263.249 li
441.471 260.417 li
441.554 234.667 li
441.637 251.833 li
441.804 266.167 li
441.887 277.583 li
441.971 280.499 li
442.137 257.583 li
442.221 231.749 li
442.387 271.917 li
442.471 257.583 li
442.554 280.499 li
442.721 266.167 li
442.804 280.499 li
442.887 271.917 li
443.054 283.333 li
443.137 286.167 li
443.304 268.999 li
443.387 260.417 li
443.471 228.917 li
443.637 246.083 li
443.721 246.083 li
443.804 240.417 li
443.971 237.499 li
444.054 243.249 li
444.221 240.417 li
444.304 251.833 li
444.387 254.667 li
444.554 231.749 li
444.637 240.417 li
444.721 234.667 li
444.887 260.417 li
444.971 274.749 li
445.137 248.999 li
445.221 243.249 li
445.304 231.749 li
445.471 231.749 li
445.554 223.167 li
445.638 220.333 li
445.804 228.917 li
445.888 231.749 li
446.054 231.749 li
446.138 231.749 li
446.221 234.667 li
446.388 246.083 li
446.471 234.667 li
446.554 234.667 li
446.721 231.749 li
446.804 251.833 li
446.971 254.667 li
447.054 228.917 li
447.138 228.917 li
447.304 231.749 li
447.388 237.499 li
447.554 240.417 li
447.638 223.167 li
447.721 271.917 li
447.888 257.583 li
447.971 231.749 li
448.054 240.417 li
448.221 254.667 li
448.304 234.667 li
448.471 254.667 li
448.554 251.833 li
448.638 254.667 li
448.804 248.999 li
448.888 254.667 li
448.971 251.833 li
449.138 248.999 li
449.221 248.999 li
449.388 260.417 li
449.471 291.917 li
449.554 271.917 li
449.721 286.167 li
449.804 289.083 li
449.888 306.249 li
450.054 309.083 li
450.138 297.667 li
450.304 309.083 li
450.388 291.917 li
450.471 266.167 li
450.638 268.999 li
450.721 268.999 li
450.804 260.417 li
450.971 274.749 li
451.054 263.249 li
451.221 248.999 li
451.304 254.667 li
451.388 266.167 li
451.554 263.249 li
451.638 263.249 li
451.721 257.583 li
451.888 228.917 li
451.971 251.833 li
452.138 231.749 li
452.221 234.667 li
452.304 246.083 li
452.471 254.667 li
452.554 260.417 li
452.638 277.583 li
452.804 260.417 li
452.888 266.167 li
452.887 266.167 mo
453.054 277.583 li
453.137 268.999 li
453.22 283.333 li
453.387 291.917 li
453.47 286.167 li
453.637 286.167 li
453.72 280.499 li
453.804 280.499 li
453.97 286.167 li
454.054 306.249 li
454.137 314.833 li
454.304 280.499 li
454.387 311.999 li
454.554 314.833 li
454.637 309.083 li
454.72 271.917 li
454.887 300.499 li
454.97 303.333 li
455.054 317.667 li
455.22 289.083 li
455.304 303.333 li
455.47 268.999 li
455.554 277.583 li
455.637 303.333 li
455.804 309.083 li
455.887 300.499 li
455.97 286.167 li
456.137 286.167 li
456.22 297.667 li
456.387 303.333 li
456.47 291.917 li
456.554 283.333 li
456.72 323.417 li
456.804 283.333 li
456.887 306.249 li
457.054 297.667 li
457.137 280.499 li
457.304 286.167 li
457.387 291.917 li
457.47 317.667 li
457.637 291.917 li
457.72 306.249 li
457.804 291.917 li
457.97 309.083 li
458.054 291.917 li
458.22 294.749 li
458.304 297.667 li
458.387 297.667 li
458.554 323.417 li
458.637 297.667 li
458.72 303.333 li
458.887 306.249 li
458.97 334.833 li
459.137 326.249 li
459.22 323.417 li
459.304 331.999 li
459.47 326.249 li
459.554 314.833 li
459.72 323.417 li
459.804 311.999 li
459.887 323.417 li
460.054 349.167 li
460.137 354.917 li
460.22 331.999 li
460.387 326.249 li
460.47 337.749 li
460.637 340.583 li
460.72 331.999 li
460.804 326.249 li
460.97 337.749 li
461.054 320.583 li
461.137 314.833 li
461.304 297.667 li
461.387 314.833 li
461.554 297.667 li
461.637 303.333 li
461.72 283.333 li
461.887 271.917 li
461.97 271.917 li
462.054 309.083 li
462.22 311.999 li
462.304 303.333 li
462.47 283.333 li
462.554 277.583 li
462.637 283.333 li
462.804 289.083 li
462.887 303.333 li
462.97 303.333 li
463.137 297.667 li
463.22 297.667 li
463.387 309.083 li
463.471 323.417 li
463.554 300.499 li
463.721 326.249 li
463.804 311.999 li
463.887 286.167 li
464.054 294.749 li
464.137 291.917 li
464.304 297.667 li
464.387 297.667 li
464.471 306.249 li
464.637 329.167 li
464.721 326.249 li
464.804 337.749 li
464.971 331.999 li
465.054 337.749 li
465.221 349.167 li
465.304 349.167 li
465.387 354.917 li
465.554 340.583 li
465.637 349.167 li
465.804 340.583 li
465.887 334.833 li
465.971 337.749 li
466.137 331.999 li
466.221 340.583 li
466.304 354.917 li
466.471 346.333 li
466.554 349.167 li
466.721 349.167 li
466.804 326.249 li
466.887 340.583 li
467.054 346.333 li
467.137 334.833 li
467.221 326.249 li
467.387 320.583 li
467.471 349.167 li
467.637 326.249 li
467.721 337.749 li
467.804 349.167 li
467.971 311.999 li
468.054 329.167 li
468.137 320.583 li
468.304 331.999 li
468.387 334.833 li
468.554 340.583 li
468.637 334.833 li
468.721 334.833 li
468.887 354.917 li
468.971 380.667 li
469.054 363.499 li
469.221 352.083 li
469.304 352.083 li
469.471 334.833 li
469.554 323.417 li
469.637 329.167 li
469.804 323.417 li
469.887 303.333 li
469.971 320.583 li
470.137 303.333 li
470.221 326.249 li
470.387 329.167 li
470.471 291.917 li
470.554 309.083 li
470.721 326.249 li
470.804 331.999 li
470.971 314.833 li
471.054 311.999 li
471.137 320.583 li
471.304 334.833 li
471.387 337.749 li
471.471 326.249 li
471.637 314.833 li
471.721 334.833 li
471.887 320.583 li
471.971 349.167 li
472.054 329.167 li
472.221 320.583 li
472.304 297.667 li
472.387 323.417 li
472.554 340.583 li
472.637 326.249 li
472.804 346.333 li
472.887 340.583 li
472.971 343.499 li
473.137 334.833 li
473.221 357.749 li
473.304 354.917 li
473.471 357.749 li
473.554 340.583 li
473.721 343.499 li
473.804 340.583 li
473.887 363.499 li
474.054 372.083 li
474.137 360.667 li
474.221 346.333 li
474.387 343.499 li
474.471 346.333 li
474.637 329.167 li
474.721 352.083 li
474.804 354.917 li
474.971 349.167 li
475.054 340.583 li
475.137 320.583 li
475.304 334.833 li
475.387 323.417 li
475.554 337.749 li
475.637 314.833 li
475.721 337.749 li
475.887 331.999 li
475.971 334.833 li
476.054 326.249 li
476.221 329.167 li
476.304 331.999 li
476.471 306.249 li
476.554 314.833 li
476.637 329.167 li
476.804 306.249 li
476.887 323.417 li
477.054 331.999 li
477.137 331.999 li
477.221 320.583 li
477.387 317.667 li
477.471 297.667 li
477.554 329.167 li
477.721 329.167 li
477.804 306.249 li
477.971 317.667 li
478.054 331.999 li
478.137 317.667 li
478.304 323.417 li
478.387 320.583 li
478.471 300.499 li
478.638 300.499 li
478.721 294.749 li
478.888 277.583 li
478.971 291.917 li
479.054 297.667 li
479.221 297.667 li
479.304 286.167 li
479.388 320.583 li
479.554 306.249 li
479.638 314.833 li
479.804 306.249 li
479.888 300.499 li
479.971 326.249 li
480.138 346.333 li
480.221 357.749 li
480.304 340.583 li
480.471 343.499 li
480.554 331.999 li
480.721 320.583 li
480.804 306.249 li
480.888 320.583 li
481.054 320.583 li
481.138 331.999 li
481.221 354.917 li
481.388 326.249 li
481.471 329.167 li
481.638 326.249 li
481.721 334.833 li
481.804 314.833 li
481.971 349.167 li
482.054 334.833 li
482.138 349.167 li
482.304 343.499 li
482.388 349.167 li
482.554 346.333 li
482.638 349.167 li
482.721 334.833 li
482.888 343.499 li
482.971 334.833 li
483.138 340.583 li
483.221 337.749 li
483.304 329.167 li
483.471 317.667 li
483.554 323.417 li
483.638 329.167 li
483.804 326.249 li
483.888 303.333 li
484.054 311.999 li
484.138 326.249 li
484.221 300.499 li
484.388 314.833 li
484.471 323.417 li
484.554 314.833 li
484.721 329.167 li
484.804 340.583 li
484.971 337.749 li
485.054 323.417 li
485.138 343.499 li
485.304 349.167 li
485.388 337.749 li
485.471 340.583 li
485.638 329.167 li
485.721 334.833 li
485.888 340.583 li
485.971 357.749 li
486.054 343.499 li
486.221 360.667 li
486.304 352.083 li
486.388 346.333 li
486.555 326.249 li
486.638 320.583 li
486.805 349.167 li
486.888 317.667 li
486.971 334.833 li
487.138 329.167 li
487.221 340.583 li
487.22 340.583 mo
487.304 311.999 li
487.47 337.749 li
487.554 323.417 li
487.721 320.583 li
487.804 311.999 li
487.887 314.833 li
488.054 277.583 li
488.137 297.667 li
488.221 286.167 li
488.387 274.749 li
488.471 266.167 li
488.637 266.167 li
488.721 280.499 li
488.804 291.917 li
488.971 280.499 li
489.054 271.917 li
489.221 271.917 li
489.304 271.917 li
489.387 291.917 li
489.554 274.749 li
489.637 317.667 li
489.721 317.667 li
489.887 320.583 li
489.971 311.999 li
490.137 303.333 li
490.221 323.417 li
490.304 317.667 li
490.471 300.499 li
490.554 294.749 li
490.637 317.667 li
490.804 294.749 li
490.887 291.917 li
491.054 311.999 li
491.137 323.417 li
491.221 309.083 li
491.387 297.667 li
491.471 309.083 li
491.554 323.417 li
491.721 309.083 li
491.804 309.083 li
491.971 314.833 li
492.054 306.249 li
492.137 297.667 li
492.304 300.499 li
492.387 306.249 li
492.471 294.749 li
492.637 314.833 li
492.721 317.667 li
492.887 323.417 li
492.971 300.499 li
493.054 297.667 li
493.221 274.749 li
493.304 300.499 li
493.387 314.833 li
493.554 283.333 li
493.637 277.583 li
493.804 291.917 li
493.887 306.249 li
493.971 294.749 li
494.137 289.083 li
494.221 286.167 li
494.387 286.167 li
494.471 297.667 li
494.554 309.083 li
494.721 314.833 li
494.804 286.167 li
494.887 280.499 li
495.054 280.499 li
495.137 266.167 li
495.304 263.249 li
495.387 246.083 li
495.471 254.667 li
495.637 274.749 li
495.721 248.999 li
495.804 271.917 li
495.971 294.749 li
496.054 300.499 li
496.221 300.499 li
496.304 294.749 li
496.387 311.999 li
496.554 326.249 li
496.637 323.417 li
496.721 320.583 li
496.887 323.417 li
496.971 326.249 li
497.137 306.249 li
497.221 309.083 li
497.304 323.417 li
497.471 311.999 li
497.554 311.999 li
497.637 311.999 li
497.804 323.417 li
497.887 323.417 li
498.054 320.583 li
498.137 331.999 li
498.221 309.083 li
498.387 320.583 li
498.471 306.249 li
498.554 343.499 li
498.721 352.083 li
498.804 357.749 li
498.971 337.749 li
499.054 346.333 li
499.137 343.499 li
499.304 329.167 li
499.387 343.499 li
499.471 331.999 li
499.637 354.917 li
499.721 337.749 li
499.887 349.167 li
499.971 352.083 li
500.054 340.583 li
500.221 346.333 li
500.304 337.749 li
500.471 329.167 li
500.554 311.999 li
500.637 306.249 li
500.804 320.583 li
500.887 320.583 li
500.971 323.417 li
501.137 366.333 li
501.221 343.499 li
501.387 337.749 li
501.471 329.167 li
501.554 334.833 li
501.721 329.167 li
501.804 331.999 li
501.887 334.833 li
502.054 331.999 li
502.138 331.999 li
502.304 340.583 li
502.388 337.749 li
502.471 320.583 li
502.638 300.499 li
502.721 280.499 li
502.804 300.499 li
502.971 309.083 li
503.054 300.499 li
503.221 311.999 li
503.304 323.417 li
503.388 297.667 li
503.554 300.499 li
503.638 289.083 li
503.721 311.999 li
503.888 306.249 li
503.971 309.083 li
504.138 329.167 li
504.221 329.167 li
504.304 329.167 li
504.471 326.249 li
504.554 340.583 li
504.638 329.167 li
504.804 346.333 li
504.888 317.667 li
505.054 334.833 li
505.138 329.167 li
505.221 320.583 li
505.388 331.999 li
505.471 311.999 li
505.554 334.833 li
505.721 331.999 li
505.804 337.749 li
505.971 340.583 li
506.054 334.833 li
506.138 357.749 li
506.304 380.667 li
506.388 354.917 li
506.554 354.917 li
506.638 340.583 li
506.721 329.167 li
506.888 323.417 li
506.971 334.833 li
507.054 337.749 li
507.221 352.083 li
507.304 357.749 li
507.471 363.499 li
507.554 354.917 li
507.638 346.333 li
507.804 357.749 li
507.888 357.749 li
507.971 334.833 li
508.138 303.333 li
508.221 317.667 li
508.388 311.999 li
508.471 326.249 li
508.554 337.749 li
508.721 337.749 li
508.804 346.333 li
508.888 343.499 li
509.054 340.583 li
509.138 334.833 li
509.304 323.417 li
509.388 291.917 li
509.471 329.167 li
509.638 329.167 li
509.721 311.999 li
509.804 291.917 li
509.971 311.999 li
510.054 300.499 li
510.221 286.167 li
510.304 271.917 li
510.388 263.249 li
510.554 248.999 li
510.638 248.999 li
510.721 254.667 li
510.888 260.417 li
510.971 306.249 li
511.138 306.249 li
511.221 289.083 li
511.304 280.499 li
511.471 289.083 li
511.554 291.917 li
511.638 283.333 li
511.804 291.917 li
511.888 286.167 li
512.054 303.333 li
512.138 271.917 li
512.221 280.499 li
512.388 277.583 li
512.471 277.583 li
512.638 268.999 li
512.721 268.999 li
512.804 291.917 li
512.971 283.333 li
513.054 320.583 li
513.138 311.999 li
513.304 300.499 li
513.388 311.999 li
513.554 294.749 li
513.638 314.833 li
513.721 331.999 li
513.888 352.083 li
513.971 352.083 li
514.054 340.583 li
514.221 326.249 li
514.304 334.833 li
514.471 334.833 li
514.554 337.749 li
514.638 340.583 li
514.804 366.333 li
514.888 377.833 li
514.971 357.749 li
515.138 349.167 li
515.221 366.333 li
515.388 374.999 li
515.471 366.333 li
515.554 357.749 li
515.721 366.333 li
515.804 354.917 li
515.888 352.083 li
516.054 331.999 li
516.138 337.749 li
516.304 329.167 li
516.388 331.999 li
516.471 306.249 li
516.638 311.999 li
516.721 317.667 li
516.804 314.833 li
516.971 300.499 li
517.054 309.083 li
517.221 289.083 li
517.304 283.333 li
517.388 271.917 li
517.554 263.249 li
517.638 260.417 li
517.721 254.667 li
517.888 254.667 li
517.971 277.583 li
518.138 277.583 li
518.221 289.083 li
518.304 271.917 li
518.471 266.167 li
518.554 283.333 li
518.721 271.917 li
518.804 254.667 li
518.888 243.249 li
519.054 260.417 li
519.138 271.917 li
519.221 291.917 li
519.388 309.083 li
519.471 277.583 li
519.638 271.917 li
519.721 251.833 li
519.804 240.417 li
519.971 274.749 li
520.054 280.499 li
520.138 274.749 li
520.304 283.333 li
520.388 263.249 li
520.554 283.333 li
520.638 291.917 li
520.721 286.167 li
520.888 314.833 li
520.971 303.333 li
521.055 271.917 li
521.221 277.583 li
521.305 260.417 li
521.471 271.917 li
521.555 283.333 li
521.554 283.333 mo
521.637 271.917 li
521.804 280.499 li
521.887 283.333 li
521.971 320.583 li
522.137 326.249 li
522.221 303.333 li
522.387 331.999 li
522.471 340.583 li
522.554 331.999 li
522.721 329.167 li
522.804 320.583 li
522.887 297.667 li
523.054 291.917 li
523.137 283.333 li
523.304 291.917 li
523.387 297.667 li
523.471 314.833 li
523.637 309.083 li
523.721 317.667 li
523.887 306.249 li
523.971 294.749 li
524.054 317.667 li
524.221 331.999 li
524.304 334.833 li
524.387 300.499 li
524.554 306.249 li
524.637 303.333 li
524.804 309.083 li
524.887 314.833 li
524.971 297.667 li
525.137 280.499 li
525.221 268.999 li
525.304 268.999 li
525.471 266.167 li
525.554 263.251 li
525.721 268.999 li
525.804 303.333 li
525.887 297.667 li
526.054 300.499 li
526.137 294.749 li
526.221 300.499 li
526.387 274.749 li
526.471 266.167 li
526.637 251.833 li
526.721 271.917 li
526.804 294.749 li
526.971 289.083 li
527.054 283.333 li
527.137 257.583 li
527.304 248.999 li
527.387 240.417 li
527.554 266.167 li
527.637 257.583 li
527.721 240.417 li
527.887 243.249 li
527.971 243.249 li
528.054 231.749 li
528.221 248.999 li
528.304 246.083 li
528.471 248.999 li
528.554 251.833 li
528.637 237.499 li
528.804 274.749 li
528.887 297.667 li
528.971 274.749 li
529.137 291.917 li
529.221 286.167 li
529.387 274.749 li
529.471 254.667 li
529.554 263.249 li
529.721 251.833 li
529.804 257.583 li
529.971 266.167 li
530.054 246.083 li
530.137 251.833 li
530.304 274.749 li
530.387 251.833 li
530.471 266.167 li
530.637 268.999 li
530.721 286.167 li
530.887 291.917 li
530.971 297.667 li
531.054 291.917 li
531.221 277.583 li
531.304 271.917 li
531.387 263.249 li
531.554 254.667 li
531.637 266.167 li
531.804 294.749 li
531.887 286.167 li
531.971 274.749 li
532.137 283.333 li
532.221 286.167 li
532.304 254.667 li
532.471 266.167 li
532.554 234.667 li
532.721 251.833 li
532.804 271.917 li
532.887 268.999 li
533.054 240.417 li
533.137 260.417 li
533.221 257.583 li
533.387 268.999 li
533.471 251.833 li
533.637 226.083 li
533.721 248.999 li
533.804 254.667 li
533.971 246.083 li
534.054 271.917 li
534.137 286.167 li
534.304 283.333 li
534.387 289.083 li
534.554 283.333 li
534.637 283.333 li
534.721 283.333 li
534.887 277.583 li
534.971 280.499 li
535.054 306.249 li
535.221 286.167 li
535.304 283.333 li
535.471 260.417 li
535.554 257.583 li
535.637 268.999 li
535.804 274.749 li
535.887 268.999 li
536.054 277.583 li
536.137 260.417 li
536.221 240.417 li
536.387 260.417 li
536.471 260.417 li
536.554 263.249 li
536.721 289.083 li
536.804 280.499 li
536.971 277.583 li
537.054 300.499 li
537.138 309.083 li
537.304 314.833 li
537.388 297.667 li
537.471 289.083 li
537.638 317.667 li
537.721 291.917 li
537.888 243.249 li
537.971 260.417 li
538.054 237.499 li
538.221 263.249 li
538.304 268.999 li
538.388 277.583 li
538.554 274.749 li
538.638 260.417 li
538.804 248.999 li
538.888 263.249 li
538.971 263.249 li
539.138 274.749 li
539.221 289.083 li
539.304 263.249 li
539.471 240.417 li
539.554 254.667 li
539.721 268.999 li
539.804 268.999 li
539.888 254.667 li
540.054 260.417 li
540.138 303.333 li
540.221 286.167 li
540.388 309.083 li
540.471 300.501 li
540.638 317.667 li
540.721 311.999 li
540.804 311.999 li
540.971 294.749 li
541.054 277.583 li
541.138 283.333 li
541.304 280.499 li
541.388 323.417 li
541.554 323.417 li
541.638 329.167 li
541.721 306.249 li
541.888 300.499 li
541.971 309.083 li
542.138 306.249 li
542.221 331.999 li
542.304 317.667 li
542.471 274.749 li
542.554 283.333 li
542.638 274.749 li
542.804 300.499 li
542.888 300.499 li
543.054 314.833 li
543.138 297.667 li
543.221 314.833 li
543.388 323.417 li
543.471 306.249 li
543.554 291.917 li
543.721 303.333 li
543.804 300.501 li
543.971 303.333 li
544.054 291.917 li
544.138 309.083 li
544.304 309.083 li
544.388 314.833 li
544.471 326.249 li
544.638 323.417 li
544.721 337.749 li
544.888 349.167 li
544.971 334.833 li
545.054 303.333 li
545.221 320.583 li
545.304 323.417 li
545.388 300.499 li
545.554 294.749 li
545.638 306.249 li
545.804 300.499 li
545.888 311.999 li
545.971 309.083 li
546.138 277.583 li
546.221 291.917 li
546.304 314.833 li
546.471 317.667 li
546.554 314.833 li
546.721 326.249 li
546.804 329.167 li
546.888 340.583 li
547.054 331.999 li
547.138 303.333 li
547.304 291.917 li
547.388 294.749 li
547.471 306.249 li
547.638 309.083 li
547.721 317.667 li
547.804 294.749 li
547.971 317.667 li
548.054 323.417 li
548.221 309.083 li
548.304 329.167 li
548.388 334.833 li
548.554 323.417 li
548.638 311.999 li
548.721 306.249 li
548.888 303.333 li
548.971 297.667 li
549.138 300.499 li
549.221 294.749 li
549.304 291.917 li
549.471 289.083 li
549.554 280.499 li
549.638 286.167 li
549.804 317.667 li
549.888 309.083 li
550.054 297.667 li
550.138 309.083 li
550.221 309.083 li
550.388 303.333 li
550.471 309.083 li
550.554 291.917 li
550.721 291.917 li
550.804 274.749 li
550.971 303.333 li
551.054 277.583 li
551.138 289.083 li
551.304 303.333 li
551.388 294.749 li
551.471 280.499 li
551.638 306.249 li
551.721 294.749 li
551.888 306.249 li
551.971 309.083 li
552.054 303.333 li
552.221 291.917 li
552.304 303.333 li
552.388 294.749 li
552.554 297.667 li
552.638 286.167 li
552.804 303.333 li
552.888 297.667 li
552.971 289.083 li
553.138 286.167 li
553.221 286.167 li
553.388 283.333 li
553.471 306.249 li
553.554 317.667 li
553.721 306.249 li
553.804 283.333 li
553.888 277.583 li
554.054 286.167 li
554.138 280.499 li
554.304 277.583 li
554.388 271.917 li
554.471 303.333 li
554.638 314.833 li
554.721 297.667 li
554.804 294.749 li
554.971 289.083 li
555.054 286.167 li
555.221 291.917 li
555.305 286.167 li
555.388 257.583 li
555.555 266.167 li
555.638 271.917 li
555.721 297.667 li
555.888 300.499 li
555.887 300.499 mo
555.971 291.917 li
556.137 294.749 li
556.221 291.917 li
556.304 303.333 li
556.471 311.999 li
556.554 323.417 li
556.637 334.833 li
556.804 360.667 li
556.887 337.749 li
557.054 334.833 li
557.137 323.417 li
557.221 343.499 li
557.387 329.167 li
557.471 349.167 li
557.554 343.499 li
557.721 320.583 li
557.804 326.249 li
557.971 314.833 li
558.054 317.667 li
558.137 320.583 li
558.304 309.083 li
558.387 309.083 li
558.471 314.833 li
558.637 309.083 li
558.721 317.667 li
558.887 317.667 li
558.971 306.249 li
559.054 291.917 li
559.221 286.167 li
559.304 309.083 li
559.471 297.667 li
559.554 317.667 li
559.637 311.999 li
559.804 311.999 li
559.887 309.083 li
559.971 300.499 li
560.137 286.167 li
560.221 294.749 li
560.387 300.499 li
560.471 317.667 li
560.554 311.999 li
560.721 314.833 li
560.804 309.083 li
560.887 309.083 li
561.054 294.749 li
561.137 274.749 li
561.304 294.749 li
561.387 277.583 li
561.471 277.583 li
561.637 271.917 li
561.721 263.249 li
561.804 271.917 li
561.971 283.333 li
562.054 277.583 li
562.221 291.917 li
562.304 291.917 li
562.387 309.083 li
562.554 294.749 li
562.637 300.499 li
562.721 303.333 li
562.887 289.083 li
562.971 286.167 li
563.137 294.749 li
563.221 286.167 li
563.304 268.999 li
563.471 268.999 li
563.554 286.167 li
563.637 266.167 li
563.804 283.333 li
563.887 268.999 li
564.054 280.499 li
564.137 254.667 li
564.221 266.167 li
564.387 260.417 li
564.471 283.333 li
564.554 268.999 li
564.721 257.583 li
564.804 263.249 li
564.971 283.333 li
565.054 283.333 li
565.137 294.749 li
565.304 289.083 li
565.387 297.667 li
565.554 271.917 li
565.637 271.917 li
565.721 286.167 li
565.887 283.333 li
565.971 254.667 li
566.054 263.249 li
566.221 289.083 li
566.304 286.167 li
566.471 266.167 li
566.554 297.667 li
566.637 291.917 li
566.804 289.083 li
566.887 291.917 li
566.971 300.499 li
567.137 303.333 li
567.221 289.083 li
567.387 286.167 li
567.471 300.499 li
567.554 291.917 li
567.721 291.917 li
567.804 297.667 li
567.887 309.083 li
568.054 300.499 li
568.137 320.583 li
568.304 291.917 li
568.387 297.667 li
568.471 286.167 li
568.637 300.499 li
568.721 289.083 li
568.804 271.917 li
568.971 297.667 li
569.054 309.083 li
569.221 297.667 li
569.304 306.249 li
569.387 303.333 li
569.554 303.333 li
569.638 294.749 li
569.721 289.083 li
569.888 323.417 li
569.971 294.749 li
570.138 309.083 li
570.221 300.499 li
570.304 309.083 li
570.471 320.583 li
570.554 329.167 li
570.638 323.417 li
570.804 306.249 li
570.888 303.333 li
571.054 306.249 li
571.138 314.833 li
571.221 320.583 li
571.388 323.417 li
571.471 320.583 li
571.638 329.167 li
571.721 340.583 li
571.804 311.999 li
571.971 309.083 li
572.054 323.417 li
572.138 314.833 li
572.304 311.999 li
572.388 303.333 li
572.554 280.499 li
572.638 286.167 li
572.721 289.083 li
572.888 289.083 li
572.971 289.083 li
573.054 291.917 li
573.221 297.667 li
573.304 300.499 li
573.471 291.917 li
573.554 294.749 li
573.638 311.999 li
573.804 346.333 li
573.888 306.249 li
573.971 323.417 li
574.138 309.083 li
574.221 294.749 li
574.388 300.499 li
574.471 314.833 li
574.554 300.499 li
574.721 286.167 li
574.804 289.083 li
574.888 283.333 li
575.054 297.667 li
575.138 306.249 li
575.304 323.417 li
575.388 320.583 li
575.471 323.417 li
575.638 309.083 li
575.721 309.083 li
575.804 314.833 li
575.971 297.667 li
576.054 283.333 li
576.221 263.249 li
576.304 286.167 li
576.388 289.083 li
576.554 277.583 li
576.638 277.583 li
576.804 268.999 li
576.888 251.833 li
576.971 243.249 li
577.138 243.249 li
577.221 271.917 li
577.304 283.333 li
577.471 277.583 li
577.554 286.167 li
577.721 274.749 li
577.804 306.249 li
577.888 291.917 li
578.054 289.083 li
578.138 280.499 li
578.221 283.333 li
578.388 289.083 li
578.471 289.083 li
578.638 289.083 li
578.721 277.583 li
578.804 277.583 li
578.971 306.249 li
579.054 300.499 li
579.138 291.917 li
579.304 320.583 li
579.388 297.667 li
579.554 326.249 li
579.638 320.583 li
579.721 320.583 li
579.888 326.249 li
579.971 291.917 li
580.054 320.583 li
580.221 280.499 li
580.304 303.333 li
580.471 314.833 li
580.554 277.583 li
580.638 271.917 li
580.804 289.083 li
580.888 297.667 li
580.971 271.917 li
581.138 286.167 li
581.221 300.499 li
581.388 291.917 li
581.471 300.499 li
581.554 286.167 li
581.721 309.083 li
581.804 337.749 li
581.888 343.499 li
582.054 337.749 li
582.138 340.583 li
582.304 343.499 li
582.388 352.083 li
582.471 329.167 li
582.638 331.999 li
582.721 334.833 li
582.888 331.999 li
582.971 334.833 li
583.054 346.333 li
583.221 346.333 li
583.304 372.083 li
583.388 354.917 li
583.554 331.999 li
583.638 340.583 li
583.804 326.249 li
583.888 346.333 li
583.971 337.749 li
584.138 309.083 li
584.221 323.417 li
584.304 331.999 li
584.471 309.083 li
584.554 289.083 li
584.721 294.749 li
584.804 297.667 li
584.888 309.083 li
585.054 283.333 li
585.138 323.417 li
585.221 323.417 li
585.388 300.499 li
585.471 317.667 li
585.638 311.999 li
585.721 314.833 li
585.804 294.749 li
585.971 280.499 li
586.054 297.667 li
586.138 286.167 li
586.304 309.083 li
586.388 317.667 li
586.554 306.249 li
586.638 309.083 li
586.721 323.417 li
586.888 329.167 li
586.971 309.083 li
587.054 294.749 li
587.221 306.249 li
587.304 306.249 li
587.471 311.999 li
587.554 337.749 li
587.638 309.083 li
587.804 326.249 li
587.888 329.167 li
587.971 337.749 li
588.138 337.749 li
588.221 337.749 li
588.388 343.499 li
588.471 346.333 li
588.554 340.583 li
588.721 337.749 li
588.805 329.167 li
588.971 314.833 li
589.054 306.249 li
589.138 317.667 li
589.305 300.499 li
589.388 271.917 li
589.471 274.749 li
589.638 263.249 li
589.721 277.583 li
589.888 286.167 li
589.971 274.749 li
590.055 277.583 li
590.221 289.083 li
590.22 289.083 mo
590.304 300.499 li
590.387 311.999 li
590.554 317.667 li
590.637 311.999 li
590.804 326.249 li
590.887 326.249 li
590.97 349.167 li
591.137 352.083 li
591.22 360.667 li
591.304 363.499 li
591.471 346.333 li
591.554 349.167 li
591.72 374.999 li
591.804 369.249 li
591.887 360.667 li
592.054 354.917 li
592.137 334.833 li
592.221 360.667 li
592.387 346.333 li
592.471 340.583 li
592.637 357.749 li
592.721 357.749 li
592.804 380.667 li
592.971 374.999 li
593.054 363.499 li
593.137 346.333 li
593.304 343.499 li
593.387 352.083 li
593.554 329.167 li
593.637 320.583 li
593.721 314.833 li
593.887 314.833 li
593.971 334.833 li
594.054 329.167 li
594.221 326.249 li
594.304 323.417 li
594.471 309.083 li
594.554 317.667 li
594.637 320.583 li
594.804 303.333 li
594.887 317.667 li
595.054 320.583 li
595.137 326.249 li
595.221 323.417 li
595.387 309.083 li
595.471 314.833 li
595.554 314.833 li
595.721 317.667 li
595.804 306.249 li
595.971 306.249 li
596.054 309.083 li
596.137 311.999 li
596.304 303.333 li
596.387 297.667 li
596.471 271.917 li
596.637 289.083 li
596.721 280.499 li
596.887 266.167 li
596.971 268.999 li
597.054 274.749 li
597.221 246.083 li
597.304 263.249 li
597.387 280.499 li
597.554 294.749 li
597.637 306.249 li
597.804 314.833 li
597.887 320.583 li
597.971 303.333 li
598.137 286.167 li
598.221 291.917 li
598.304 280.499 li
598.471 297.667 li
598.554 286.167 li
598.721 291.917 li
598.804 257.583 li
598.887 257.583 li
599.054 251.833 li
599.137 260.417 li
599.221 266.167 li
599.387 274.749 li
599.471 286.167 li
599.637 294.749 li
599.721 286.167 li
599.804 303.333 li
599.971 309.083 li
600.054 311.999 li
600.221 311.999 li
600.304 314.833 li
600.387 309.083 li
600.554 283.333 li
600.637 286.167 li
600.721 291.917 li
600.887 300.499 li
600.971 300.499 li
601.137 317.667 li
601.221 294.749 li
601.304 297.667 li
601.471 300.499 li
601.554 289.083 li
601.637 283.333 li
601.804 271.917 li
601.887 303.333 li
602.054 306.249 li
602.137 291.917 li
602.221 294.749 li
602.387 300.499 li
602.471 311.999 li
602.554 314.833 li
602.721 329.167 li
602.804 320.583 li
602.971 311.999 li
603.054 317.667 li
603.137 314.833 li
603.304 326.249 li
603.387 309.083 li
603.471 326.249 li
603.637 314.833 li
603.721 326.249 li
603.887 326.249 li
603.971 306.249 li
604.054 271.917 li
604.221 271.917 li
604.304 263.249 li
604.387 283.333 li
604.554 257.583 li
604.637 246.083 li
604.804 246.083 li
604.887 260.417 li
604.971 234.667 li
605.137 251.833 li
605.221 240.417 li
605.304 263.249 li
605.471 268.999 li
605.554 271.917 li
605.721 274.749 li
605.804 277.583 li
605.887 283.333 li
606.054 263.249 li
606.137 280.499 li
606.304 303.333 li
606.387 303.333 li
606.471 326.249 li
606.637 303.333 li
606.721 311.999 li
606.804 309.083 li
606.971 303.333 li
607.054 311.999 li
607.221 300.499 li
607.304 280.499 li
607.387 268.999 li
607.554 280.499 li
607.637 289.083 li
607.721 294.749 li
607.887 297.667 li
607.971 286.167 li
608.137 283.333 li
608.221 289.083 li
608.304 283.333 li
608.471 289.083 li
608.554 280.499 li
608.637 280.499 li
608.804 283.333 li
608.887 280.499 li
609.054 280.499 li
609.137 277.583 li
609.221 286.167 li
609.387 268.999 li
609.471 309.083 li
609.554 309.083 li
609.721 309.083 li
609.804 306.249 li
609.971 300.499 li
610.054 286.167 li
610.137 300.499 li
610.304 289.083 li
610.387 283.333 li
610.471 303.333 li
610.637 297.667 li
610.721 291.917 li
610.887 283.333 li
610.971 277.583 li
611.054 306.249 li
611.221 306.249 li
611.304 309.083 li
611.387 320.583 li
611.554 346.333 li
611.637 363.499 li
611.804 346.333 li
611.887 326.249 li
611.971 283.333 li
612.137 314.833 li
612.221 286.167 li
612.387 297.667 li
612.471 286.167 li
612.554 286.167 li
612.721 271.917 li
612.804 280.499 li
612.887 283.333 li
613.054 268.999 li
613.137 283.333 li
613.304 311.999 li
613.387 311.999 li
613.471 289.083 li
613.637 289.083 li
613.721 286.167 li
613.804 291.917 li
613.971 311.999 li
614.054 320.583 li
614.221 314.833 li
614.304 329.167 li
614.387 337.749 li
614.554 363.499 li
614.637 323.417 li
614.721 320.583 li
614.887 331.999 li
614.971 337.749 li
615.137 294.749 li
615.221 306.249 li
615.304 317.667 li
615.471 329.167 li
615.554 334.833 li
615.637 329.167 li
615.804 309.083 li
615.887 320.583 li
616.054 334.833 li
616.137 340.583 li
616.221 337.749 li
616.387 331.999 li
616.471 309.083 li
616.554 311.999 li
616.721 320.583 li
616.804 309.083 li
616.971 340.583 li
617.054 343.499 li
617.137 340.583 li
617.304 337.749 li
617.387 337.749 li
617.471 291.917 li
617.637 289.083 li
617.721 271.917 li
617.887 297.667 li
617.971 326.249 li
618.054 331.999 li
618.221 329.167 li
618.304 314.833 li
618.471 311.999 li
618.554 300.499 li
618.637 309.083 li
618.804 314.833 li
618.887 317.667 li
618.971 323.417 li
619.137 329.167 li
619.221 311.999 li
619.387 309.083 li
619.471 314.833 li
619.554 320.583 li
619.721 320.583 li
619.804 323.417 li
619.887 326.249 li
620.054 306.249 li
620.137 300.499 li
620.304 294.749 li
620.387 300.499 li
620.471 306.249 li
620.637 294.749 li
620.721 300.499 li
620.804 303.333 li
620.971 317.667 li
621.054 317.667 li
621.221 323.417 li
621.304 331.999 li
621.387 331.999 li
621.554 306.249 li
621.637 317.667 li
621.721 291.917 li
621.887 314.833 li
621.971 309.083 li
622.137 326.249 li
622.221 326.249 li
622.304 329.167 li
622.471 337.749 li
622.554 331.999 li
622.637 329.167 li
622.804 329.167 li
622.887 311.999 li
623.054 326.249 li
623.137 309.083 li
623.221 297.667 li
623.387 303.333 li
623.471 314.833 li
623.554 303.333 li
623.721 289.083 li
623.804 297.667 li
623.971 320.583 li
624.054 317.667 li
624.137 297.667 li
624.304 331.999 li
624.387 331.999 li
624.554 331.999 li
624.554 331.999 mo
624.637 331.999 li
624.721 311.999 li
624.887 306.249 li
624.971 309.083 li
625.054 294.749 li
625.221 268.999 li
625.304 280.499 li
625.471 266.167 li
625.554 274.749 li
625.637 254.667 li
625.804 266.167 li
625.887 260.417 li
625.971 254.667 li
626.137 257.583 li
626.221 263.249 li
626.387 260.417 li
626.471 283.333 li
626.554 274.749 li
626.721 234.667 li
626.804 248.999 li
626.887 260.417 li
627.054 260.417 li
627.137 243.249 li
627.304 237.499 li
627.387 237.499 li
627.471 226.083 li
627.637 220.333 li
627.721 243.249 li
627.804 248.999 li
627.971 217.5 li
628.054 200.25 li
628.221 226.083 li
628.304 237.499 li
628.387 206 li
628.554 223.167 li
628.637 231.749 li
628.721 240.417 li
628.887 248.999 li
628.971 237.499 li
629.137 260.417 li
629.221 246.083 li
629.304 231.749 li
629.471 257.583 li
629.554 243.249 li
629.721 237.499 li
629.804 231.749 li
629.887 268.999 li
630.054 237.499 li
630.137 231.749 li
630.221 226.083 li
630.387 211.75 li
630.471 211.75 li
630.637 188.833 li
630.721 206 li
630.804 188.833 li
630.971 228.917 li
631.054 228.917 li
631.137 234.667 li
631.304 223.167 li
631.387 237.499 li
631.554 234.667 li
631.637 231.749 li
631.721 234.667 li
631.887 228.917 li
631.971 234.667 li
632.054 231.749 li
632.221 214.583 li
632.304 203.167 li
632.47 211.75 li
632.554 211.75 li
632.637 200.25 li
632.804 220.333 li
632.887 200.25 li
632.97 200.25 li
633.137 191.667 li
633.22 186 li
633.387 177.417 li
633.47 211.75 li
633.554 200.25 li
633.72 183.083 li
633.804 197.417 li
633.887 186 li
634.054 208.917 li
634.137 191.667 li
634.304 206 li
634.387 188.833 li
634.47 177.417 li
634.637 203.167 li
634.72 203.167 li
634.804 211.75 li
634.97 183.083 li
635.054 154.5 li
635.22 177.417 li
635.304 180.25 li
635.387 168.75 li
635.554 180.25 li
635.637 180.25 li
635.804 180.25 li
635.887 180.25 li
635.97 194.583 li
636.137 197.417 li
636.22 206 li
636.304 200.25 li
636.47 203.167 li
636.554 186 li
636.72 203.167 li
636.804 206 li
636.887 226.083 li
637.054 217.5 li
637.137 214.583 li
637.22 214.583 li
637.387 226.083 li
637.47 220.333 li
637.637 203.167 li
637.72 200.25 li
637.804 214.583 li
637.97 208.917 li
638.054 200.25 li
638.137 211.75 li
638.304 214.583 li
638.387 211.75 li
638.554 180.25 li
638.637 191.667 li
638.72 177.417 li
638.887 186 li
638.97 168.75 li
639.054 171.667 li
639.22 165.917 li
639.304 174.5 li
639.47 180.25 li
639.554 180.25 li
639.637 194.583 li
639.804 174.5 li
639.887 165.917 li
639.97 177.417 li
640.137 186 li
640.22 180.25 li
640.387 197.417 li
640.47 217.5 li
640.554 203.167 li
640.72 220.333 li
640.804 200.25 li
640.887 234.667 li
641.054 231.749 li
641.137 223.167 li
641.304 217.5 li
641.387 197.417 li
641.47 223.167 li
641.637 208.917 li
641.72 217.5 li
641.887 183.083 li
641.97 194.583 li
642.054 206 li
642.22 214.583 li
642.304 186 li
642.387 197.417 li
642.554 203.167 li
642.637 200.25 li
642.804 194.583 li
642.887 183.083 li
642.97 183.083 li
643.137 165.917 li
643.22 168.75 li
643.304 131.583 li
643.47 151.583 li
643.554 154.5 li
643.72 177.417 li
643.804 183.083 li
643.887 191.667 li
644.054 174.5 li
644.137 191.667 li
644.22 191.667 li
644.387 200.25 li
644.47 168.75 li
644.637 183.083 li
644.72 191.667 li
644.804 194.583 li
644.97 183.083 li
645.054 160.167 li
645.137 154.5 li
645.304 183.083 li
645.387 180.25 li
645.554 191.667 li
645.637 217.5 li
645.72 217.5 li
645.887 177.417 li
645.97 186 li
646.054 177.417 li
646.22 180.25 li
646.304 191.667 li
646.47 203.167 li
646.554 237.499 li
646.637 240.417 li
646.804 268.999 li
646.887 254.667 li
646.97 260.417 li
647.137 240.417 li
647.22 237.499 li
647.387 243.249 li
647.47 251.833 li
647.554 234.667 li
647.72 217.5 li
647.804 211.75 li
647.97 214.583 li
648.054 191.667 li
648.137 200.25 li
648.304 206 li
648.387 188.833 li
648.47 197.417 li
648.637 197.417 li
648.72 165.917 li
648.887 194.583 li
648.97 194.583 li
649.054 217.5 li
649.22 220.333 li
649.304 226.083 li
649.387 211.75 li
649.554 183.083 li
649.637 220.333 li
649.804 217.5 li
649.887 211.75 li
649.97 234.667 li
650.137 234.667 li
650.22 246.083 li
650.304 226.083 li
650.47 214.583 li
650.554 211.75 li
650.72 220.333 li
650.804 220.333 li
650.887 226.083 li
651.054 214.583 li
651.137 243.249 li
651.22 246.083 li
651.387 240.417 li
651.47 234.667 li
651.637 223.167 li
651.72 211.75 li
651.804 217.5 li
651.97 214.583 li
652.054 191.667 li
652.137 191.667 li
652.304 200.25 li
652.387 211.75 li
652.554 186 li
652.637 208.917 li
652.72 206 li
652.887 206 li
652.97 206 li
653.137 208.917 li
653.22 206 li
653.304 211.75 li
653.47 206 li
653.554 177.417 li
653.637 157.333 li
653.804 197.417 li
653.887 228.917 li
654.054 206 li
654.137 211.75 li
654.22 226.083 li
654.387 237.499 li
654.47 254.667 li
654.554 237.499 li
654.72 240.417 li
654.804 248.999 li
654.97 254.667 li
655.054 243.249 li
655.137 251.833 li
655.304 248.999 li
655.387 251.833 li
655.47 280.499 li
655.637 268.999 li
655.72 266.167 li
655.887 234.667 li
655.97 228.917 li
656.054 257.583 li
656.22 257.583 li
656.304 277.583 li
656.387 266.167 li
656.554 283.333 li
656.637 257.583 li
656.804 248.999 li
656.887 248.999 li
656.97 237.499 li
657.137 248.999 li
657.22 240.417 li
657.304 260.417 li
657.47 240.417 li
657.554 268.999 li
657.72 271.917 li
657.804 268.999 li
657.887 257.583 li
658.054 240.417 li
658.137 234.667 li
658.22 231.749 li
658.387 211.75 li
658.47 206 li
658.637 208.917 li
658.72 217.5 li
658.804 231.749 li
658.804 231.749 mo
658.971 228.917 li
659.054 237.499 li
659.221 240.417 li
659.304 254.667 li
659.387 243.249 li
659.554 243.249 li
659.637 246.083 li
659.721 237.499 li
659.887 234.667 li
659.97 248.999 li
660.137 254.667 li
660.221 263.249 li
660.304 240.417 li
660.47 243.249 li
660.554 240.417 li
660.637 266.167 li
660.804 246.083 li
660.887 243.249 li
661.054 223.167 li
661.137 214.583 li
661.22 214.583 li
661.387 220.333 li
661.47 208.917 li
661.554 203.167 li
661.72 214.583 li
661.804 211.75 li
661.97 208.917 li
662.054 197.417 li
662.137 200.25 li
662.304 226.083 li
662.387 226.083 li
662.47 248.999 li
662.637 271.917 li
662.72 251.833 li
662.887 251.833 li
662.97 243.249 li
663.054 263.249 li
663.22 280.499 li
663.304 266.167 li
663.387 240.417 li
663.554 266.167 li
663.637 271.917 li
663.804 277.583 li
663.887 306.249 li
663.97 300.499 li
664.137 286.167 li
664.22 309.083 li
664.304 303.333 li
664.47 314.833 li
664.554 286.167 li
664.72 311.999 li
664.804 300.499 li
664.887 306.249 li
665.054 277.583 li
665.137 268.999 li
665.304 274.749 li
665.387 283.333 li
665.47 268.999 li
665.637 248.999 li
665.72 223.167 li
665.804 231.749 li
665.97 226.083 li
666.054 231.749 li
666.22 254.667 li
666.304 260.417 li
666.387 266.167 li
666.554 237.499 li
666.637 220.333 li
666.72 234.667 li
666.887 246.083 li
666.97 231.749 li
667.137 251.833 li
667.22 268.999 li
667.304 289.083 li
667.47 294.749 li
667.554 280.499 li
667.637 277.583 li
667.804 268.999 li
667.887 274.749 li
668.054 286.167 li
668.137 300.499 li
668.22 280.499 li
668.387 271.917 li
668.47 257.583 li
668.554 257.583 li
668.72 263.249 li
668.804 260.417 li
668.97 268.999 li
669.054 263.249 li
669.137 280.499 li
669.304 260.417 li
669.387 266.167 li
669.47 283.333 li
669.637 277.583 li
669.72 294.749 li
669.887 271.917 li
669.97 266.167 li
670.054 266.167 li
670.22 263.249 li
670.304 263.249 li
670.387 234.667 li
670.554 254.667 li
670.637 289.083 li
670.804 280.499 li
670.887 266.167 li
670.97 283.333 li
671.137 266.167 li
671.22 271.917 li
671.387 277.583 li
671.47 268.999 li
671.554 251.833 li
671.72 243.249 li
671.804 263.249 li
671.887 271.917 li
672.054 271.917 li
672.137 277.583 li
672.304 263.249 li
672.387 271.917 li
672.47 271.917 li
672.637 251.833 li
672.72 237.499 li
672.804 268.999 li
672.97 251.833 li
673.054 254.667 li
673.22 268.999 li
673.304 283.333 li
673.387 274.749 li
673.554 277.583 li
673.637 291.917 li
673.72 268.999 li
673.887 266.167 li
673.97 268.999 li
674.137 266.167 li
674.22 274.749 li
674.304 297.667 li
674.47 286.167 li
674.554 268.999 li
674.637 314.833 li
674.804 309.083 li
674.887 291.917 li
675.054 289.083 li
675.137 274.749 li
675.22 274.749 li
675.387 280.499 li
675.47 277.583 li
675.554 271.917 li
675.72 248.999 li
675.804 246.083 li
675.97 237.499 li
676.054 274.749 li
676.137 274.749 li
676.304 266.167 li
676.387 260.417 li
676.47 277.583 li
676.637 286.167 li
676.72 260.417 li
676.887 291.917 li
676.97 266.167 li
677.054 263.249 li
677.22 248.999 li
677.304 254.667 li
677.47 260.417 li
677.554 266.167 li
677.637 280.499 li
677.804 246.083 li
677.887 260.417 li
677.97 263.249 li
678.137 280.499 li
678.22 257.583 li
678.387 257.583 li
678.47 271.917 li
678.554 280.499 li
678.72 277.583 li
678.804 260.417 li
678.887 291.917 li
679.054 300.499 li
679.137 266.167 li
679.304 243.249 li
679.387 274.749 li
679.47 283.333 li
679.637 257.583 li
679.72 271.917 li
679.804 271.917 li
679.97 283.333 li
680.054 291.917 li
680.22 277.583 li
680.304 283.333 li
680.387 297.667 li
680.554 289.083 li
680.637 274.749 li
680.72 263.249 li
680.887 280.499 li
680.97 271.917 li
681.137 257.583 li
681.22 251.833 li
681.304 251.833 li
681.47 266.167 li
681.554 246.083 li
681.637 274.749 li
681.804 280.499 li
681.887 277.583 li
682.054 283.333 li
682.137 257.583 li
682.22 274.749 li
682.387 271.917 li
682.47 274.749 li
682.637 280.499 li
682.72 297.667 li
682.804 274.749 li
682.97 283.333 li
683.054 300.499 li
683.137 306.249 li
683.304 309.083 li
683.387 323.417 li
683.554 291.917 li
683.637 291.917 li
683.72 280.499 li
683.887 254.667 li
683.97 271.917 li
684.054 291.917 li
684.22 286.167 li
684.304 280.499 li
684.47 294.749 li
684.554 257.583 li
684.637 280.499 li
684.804 289.083 li
684.887 303.333 li
684.97 306.249 li
685.137 303.333 li
685.22 291.917 li
685.387 323.417 li
685.47 303.333 li
685.554 274.749 li
685.72 283.333 li
685.804 303.333 li
685.887 300.499 li
686.054 291.917 li
686.137 280.499 li
686.304 280.499 li
686.387 280.499 li
686.47 286.167 li
686.637 294.749 li
686.72 303.333 li
686.804 289.083 li
686.97 274.749 li
687.054 246.083 li
687.22 277.583 li
687.304 257.583 li
687.387 263.249 li
687.554 251.833 li
687.637 246.083 li
687.72 251.833 li
687.887 274.749 li
687.97 274.749 li
688.137 246.083 li
688.22 257.583 li
688.304 234.667 li
688.471 220.333 li
688.554 240.417 li
688.72 251.833 li
688.804 237.499 li
688.887 246.083 li
689.054 251.833 li
689.137 243.249 li
689.221 268.999 li
689.387 260.417 li
689.471 251.833 li
689.637 268.999 li
689.721 294.749 li
689.804 291.917 li
689.971 314.833 li
690.054 306.249 li
690.137 306.249 li
690.304 297.667 li
690.387 271.917 li
690.554 283.333 li
690.637 274.749 li
690.721 291.917 li
690.887 289.083 li
690.971 289.083 li
691.054 277.583 li
691.221 271.917 li
691.304 291.917 li
691.471 274.749 li
691.554 266.167 li
691.637 234.667 li
691.804 237.499 li
691.887 220.333 li
691.971 220.333 li
692.137 214.583 li
692.221 220.333 li
692.387 214.583 li
692.471 263.249 li
692.554 280.499 li
692.721 268.999 li
692.804 271.917 li
692.887 263.249 li
693.054 231.749 li
693.137 234.667 li
693.137 234.667 mo
693.304 237.499 li
693.387 240.417 li
693.471 246.083 li
693.637 257.583 li
693.721 237.499 li
693.804 226.083 li
693.971 271.917 li
694.054 277.583 li
694.221 277.583 li
694.304 268.999 li
694.387 271.917 li
694.554 280.499 li
694.637 260.417 li
694.804 277.583 li
694.887 286.167 li
694.971 286.167 li
695.137 280.499 li
695.221 280.499 li
695.304 280.499 li
695.471 271.917 li
695.554 271.917 li
695.721 277.583 li
695.804 280.499 li
695.887 266.167 li
696.054 263.249 li
696.137 251.833 li
696.221 263.249 li
696.387 263.249 li
696.471 271.917 li
696.637 260.417 li
696.721 271.917 li
696.804 266.167 li
696.971 286.167 li
697.054 271.917 li
697.137 266.167 li
697.304 286.167 li
697.387 257.583 li
697.554 266.167 li
697.637 286.167 li
697.721 277.583 li
697.887 268.999 li
697.971 283.333 li
698.054 306.249 li
698.221 277.583 li
698.304 277.583 li
698.471 283.333 li
698.554 274.749 li
698.637 300.499 li
698.804 303.333 li
698.887 280.499 li
698.971 277.583 li
699.137 268.999 li
699.221 251.833 li
699.387 268.999 li
699.471 294.749 li
699.554 283.333 li
699.721 306.249 li
699.804 303.333 li
699.887 294.749 li
700.054 317.667 li
700.137 326.249 li
700.304 326.249 li
700.387 297.667 li
700.471 283.333 li
700.637 291.917 li
700.721 309.083 li
700.887 300.499 li
700.971 297.667 li
701.054 257.583 li
701.221 266.167 li
701.304 263.249 li
701.387 260.417 li
701.554 237.499 li
701.637 266.167 li
701.804 263.249 li
701.887 263.249 li
701.971 237.499 li
702.137 263.249 li
702.221 248.999 li
702.304 254.667 li
702.471 260.417 li
702.554 257.583 li
702.721 237.499 li
702.804 251.833 li
702.887 226.083 li
703.054 243.249 li
703.137 246.083 li
703.221 226.083 li
703.387 231.749 li
703.471 228.917 li
703.637 211.75 li
703.721 231.749 li
703.804 237.499 li
703.971 246.083 li
704.054 231.749 li
704.137 206 li
704.304 231.749 li
704.387 243.249 li
704.554 263.249 li
704.637 254.667 li
704.721 263.249 li
704.887 277.583 li
704.971 263.249 li
705.054 277.583 li
705.221 248.999 li
705.304 257.583 li
705.471 257.583 li
705.554 254.667 li
705.637 260.417 li
705.804 271.917 li
705.887 277.583 li
706.054 243.249 li
706.137 243.249 li
706.221 240.417 li
706.387 231.749 li
706.471 251.833 li
706.554 266.167 li
706.721 263.249 li
706.804 263.249 li
706.971 268.999 li
707.054 266.167 li
707.137 240.417 li
707.304 228.917 li
707.387 214.583 li
707.471 203.167 li
707.637 214.583 li
707.721 194.583 li
707.887 194.583 li
707.971 191.667 li
708.054 171.667 li
708.221 186 li
708.304 203.167 li
708.387 211.75 li
708.554 208.917 li
708.637 211.75 li
708.804 206 li
708.887 226.083 li
708.971 231.749 li
709.137 211.75 li
709.221 231.749 li
709.304 251.833 li
709.471 211.75 li
709.554 200.25 li
709.721 200.25 li
709.804 206 li
709.887 217.5 li
710.054 226.083 li
710.137 248.999 li
710.221 231.749 li
710.387 231.749 li
710.471 206 li
710.637 223.167 li
710.721 226.083 li
710.804 223.167 li
710.971 234.667 li
711.054 214.583 li
711.137 197.417 li
711.304 217.5 li
711.387 226.083 li
711.554 194.583 li
711.637 220.333 li
711.721 254.667 li
711.887 231.749 li
711.971 237.499 li
712.137 226.083 li
712.221 223.167 li
712.304 211.75 li
712.471 188.833 li
712.554 194.583 li
712.637 191.667 li
712.804 177.417 li
712.887 180.25 li
713.054 200.25 li
713.137 203.167 li
713.221 197.417 li
713.387 211.75 li
713.471 217.5 li
713.554 231.749 li
713.721 220.333 li
713.804 211.75 li
713.971 197.417 li
714.054 203.167 li
714.137 160.167 li
714.304 168.75 li
714.387 217.5 li
714.471 217.5 li
714.637 217.5 li
714.721 203.167 li
714.887 197.417 li
714.971 203.167 li
715.054 237.499 li
715.221 240.417 li
715.304 217.5 li
715.387 228.917 li
715.554 206 li
715.637 220.333 li
715.804 231.749 li
715.887 246.083 li
715.971 237.499 li
716.137 223.167 li
716.221 220.333 li
716.304 197.417 li
716.471 206 li
716.554 237.499 li
716.721 243.249 li
716.804 234.667 li
716.888 223.167 li
717.054 223.167 li
717.138 240.417 li
717.221 263.249 li
717.388 266.167 li
717.471 240.417 li
717.638 228.917 li
717.721 254.667 li
717.804 246.083 li
717.971 217.5 li
718.054 203.167 li
718.221 234.667 li
718.304 217.5 li
718.388 220.333 li
718.554 226.083 li
718.638 208.917 li
718.721 211.75 li
718.888 214.583 li
718.971 188.833 li
719.138 197.417 li
719.221 186 li
719.304 197.417 li
719.471 194.583 li
719.554 197.417 li
719.638 211.75 li
719.804 226.083 li
719.888 237.499 li
720.054 228.917 li
720.138 220.333 li
720.221 203.167 li
720.388 194.583 li
720.471 197.417 li
720.554 234.667 li
720.721 228.917 li
720.804 240.417 li
720.971 251.833 li
721.054 237.499 li
721.138 243.249 li
721.304 266.167 li
721.388 274.749 li
721.471 266.167 li
721.638 260.417 li
721.721 214.583 li
721.888 228.917 li
721.971 223.167 li
722.054 208.917 li
722.221 226.083 li
722.304 237.499 li
722.388 228.917 li
722.554 246.083 li
722.638 251.833 li
722.804 237.499 li
722.888 274.749 li
722.971 283.333 li
723.138 294.749 li
723.221 294.749 li
723.304 300.499 li
723.471 277.583 li
723.554 260.417 li
723.721 263.249 li
723.804 268.999 li
723.888 246.083 li
724.054 257.583 li
724.138 300.499 li
724.304 263.249 li
724.388 277.583 li
724.471 297.667 li
724.638 306.249 li
724.721 271.917 li
724.804 254.667 li
724.971 228.917 li
725.054 228.917 li
725.221 206 li
725.304 257.583 li
725.388 254.667 li
725.554 246.083 li
725.638 234.667 li
725.721 223.167 li
725.888 248.999 li
725.971 248.999 li
726.138 248.999 li
726.221 240.417 li
726.304 266.167 li
726.471 254.667 li
726.554 266.167 li
726.638 277.583 li
726.804 257.583 li
726.888 248.999 li
727.054 260.417 li
727.138 274.749 li
727.221 280.499 li
727.388 286.167 li
727.471 280.499 li
727.47 280.499 mo
727.554 271.917 li
727.72 291.917 li
727.804 311.999 li
727.97 314.833 li
728.054 306.249 li
728.137 309.083 li
728.304 297.667 li
728.387 291.917 li
728.47 283.333 li
728.637 277.583 li
728.721 283.333 li
728.887 277.583 li
728.971 271.917 li
729.054 268.999 li
729.221 280.499 li
729.304 303.333 li
729.387 303.333 li
729.554 294.749 li
729.637 277.583 li
729.804 266.167 li
729.887 289.083 li
729.971 280.499 li
730.137 289.083 li
730.221 294.749 li
730.387 283.333 li
730.471 274.749 li
730.554 263.249 li
730.721 277.583 li
730.804 268.999 li
730.887 280.499 li
731.054 271.917 li
731.137 277.583 li
731.304 291.917 li
731.387 274.749 li
731.471 286.167 li
731.637 289.083 li
731.721 280.499 li
731.804 283.333 li
731.971 271.917 li
732.054 226.083 li
732.221 214.583 li
732.304 246.083 li
732.387 260.417 li
732.554 271.917 li
732.637 263.249 li
732.721 257.583 li
732.887 268.999 li
732.971 260.417 li
733.137 254.667 li
733.221 240.417 li
733.304 237.499 li
733.471 240.417 li
733.554 254.667 li
733.637 271.917 li
733.804 277.583 li
733.887 286.167 li
734.054 286.167 li
734.137 289.083 li
734.221 294.749 li
734.387 309.083 li
734.471 311.999 li
734.554 314.833 li
734.721 320.583 li
734.804 320.583 li
734.971 314.833 li
735.054 289.083 li
735.137 306.249 li
735.304 294.749 li
735.387 300.501 li
735.554 294.749 li
735.637 297.667 li
735.721 280.499 li
735.887 294.749 li
735.971 320.583 li
736.054 306.249 li
736.221 283.333 li
736.304 289.083 li
736.471 300.499 li
736.554 294.749 li
736.637 274.749 li
736.804 268.999 li
736.887 283.333 li
736.971 268.999 li
737.137 277.583 li
737.221 283.333 li
737.387 271.917 li
737.471 231.749 li
737.554 237.499 li
737.721 248.999 li
737.804 257.583 li
737.887 226.083 li
738.054 237.499 li
738.137 246.083 li
738.304 228.917 li
738.387 231.749 li
738.471 254.667 li
738.637 251.833 li
738.721 260.417 li
738.804 271.917 li
738.971 283.333 li
739.054 274.749 li
739.221 283.333 li
739.304 246.083 li
739.387 274.749 li
739.554 271.917 li
739.637 271.917 li
739.721 257.583 li
739.887 243.249 li
739.971 243.249 li
740.137 251.833 li
740.221 248.999 li
740.304 246.083 li
740.471 257.583 li
740.554 283.333 li
740.637 268.999 li
740.804 257.583 li
740.887 248.999 li
741.054 248.999 li
741.137 226.083 li
741.221 228.917 li
741.387 243.249 li
741.471 248.999 li
741.638 223.167 li
741.721 188.833 li
741.804 220.333 li
741.971 217.5 li
742.054 237.499 li
742.138 243.249 li
742.304 271.917 li
742.388 271.917 li
742.554 254.667 li
742.638 266.167 li
742.721 280.499 li
742.888 271.917 li
742.971 280.499 li
743.054 271.917 li
743.221 286.167 li
743.304 268.999 li
743.471 286.167 li
743.554 271.917 li
743.638 274.749 li
743.804 260.417 li
743.888 208.917 li
743.971 248.999 li
744.138 248.999 li
744.221 266.167 li
744.388 277.583 li
744.471 277.583 li
744.554 260.417 li
744.721 260.417 li
744.804 266.167 li
744.888 243.249 li
745.054 260.417 li
745.138 237.499 li
745.304 231.749 li
745.388 206 li
745.471 257.583 li
745.638 260.417 li
745.721 257.583 li
745.804 254.667 li
745.971 271.917 li
746.054 257.583 li
746.221 251.833 li
746.304 223.167 li
746.388 220.333 li
746.554 246.083 li
746.638 257.583 li
746.721 257.583 li
746.888 243.249 li
746.971 248.999 li
747.138 246.083 li
747.221 214.583 li
747.304 214.583 li
747.471 228.917 li
747.554 211.75 li
747.721 234.667 li
747.804 231.749 li
747.888 240.417 li
748.054 240.417 li
748.138 240.417 li
748.221 231.749 li
748.388 234.667 li
748.471 251.833 li
748.638 268.999 li
748.721 266.167 li
748.804 277.583 li
748.971 286.167 li
749.054 277.583 li
749.138 266.167 li
749.304 283.333 li
749.388 274.749 li
749.554 266.167 li
749.638 266.167 li
749.721 248.999 li
749.888 271.917 li
749.971 271.917 li
750.054 266.167 li
750.221 257.583 li
750.304 263.249 li
750.471 254.667 li
750.554 254.667 li
750.638 237.499 li
750.804 234.667 li
750.888 231.749 li
750.971 240.417 li
751.138 266.167 li
751.221 277.583 li
751.388 263.249 li
751.471 263.249 li
751.554 251.833 li
751.721 248.999 li
751.804 266.167 li
751.888 277.583 li
752.054 283.333 li
752.138 277.583 li
752.304 277.583 li
752.388 280.499 li
752.471 266.167 li
752.638 266.167 li
752.721 271.917 li
752.804 254.667 li
752.971 277.583 li
753.054 266.167 li
753.221 291.917 li
753.304 277.583 li
753.388 271.917 li
753.554 280.499 li
753.638 271.917 li
753.804 271.917 li
753.888 277.583 li
753.971 268.999 li
754.138 263.249 li
754.221 246.083 li
754.304 266.167 li
754.471 268.999 li
754.554 266.167 li
754.721 240.417 li
754.804 271.917 li
754.888 263.249 li
755.054 248.999 li
755.138 251.833 li
755.221 251.833 li
755.388 257.583 li
755.471 257.583 li
755.638 266.167 li
755.721 257.583 li
755.804 243.249 li
755.971 243.249 li
756.054 251.833 li
756.138 274.749 li
756.304 280.499 li
756.388 300.499 li
756.554 294.749 li
756.638 283.333 li
756.721 300.499 li
756.888 289.083 li
756.971 306.249 li
757.054 309.083 li
757.221 277.583 li
757.304 286.167 li
757.471 311.999 li
757.554 306.249 li
757.638 303.333 li
757.804 283.333 li
757.888 280.499 li
757.971 280.499 li
758.138 277.583 li
758.221 280.499 li
758.388 294.749 li
758.471 280.499 li
758.554 291.917 li
758.721 291.917 li
758.804 306.249 li
758.971 311.999 li
759.054 314.833 li
759.138 297.667 li
759.304 309.083 li
759.388 303.333 li
759.471 309.083 li
759.638 289.083 li
759.721 271.917 li
759.888 300.499 li
759.971 286.167 li
760.054 294.749 li
760.221 277.583 li
760.304 291.917 li
760.388 286.167 li
760.554 280.499 li
760.638 306.249 li
760.804 291.917 li
760.888 294.749 li
760.971 306.249 li
761.138 317.667 li
761.221 306.249 li
761.304 323.417 li
761.471 294.749 li
761.554 286.167 li
761.721 283.333 li
761.805 289.083 li
761.804 289.083 mo
761.887 277.583 li
762.054 268.999 li
762.137 283.333 li
762.221 271.917 li
762.387 277.583 li
762.471 274.749 li
762.637 257.583 li
762.721 257.583 li
762.804 254.667 li
762.971 254.667 li
763.054 294.749 li
763.137 297.667 li
763.304 283.333 li
763.387 300.499 li
763.554 306.249 li
763.637 300.499 li
763.721 297.667 li
763.887 306.249 li
763.971 291.917 li
764.054 283.333 li
764.221 260.417 li
764.304 266.167 li
764.471 283.333 li
764.554 286.167 li
764.637 309.083 li
764.804 300.499 li
764.887 291.917 li
765.054 306.249 li
765.137 309.083 li
765.221 306.249 li
765.387 294.749 li
765.471 291.917 li
765.554 306.249 li
765.721 291.917 li
765.804 286.167 li
765.971 294.749 li
766.054 289.083 li
766.137 297.667 li
766.304 314.833 li
766.387 303.333 li
766.471 283.333 li
766.637 277.583 li
766.721 309.083 li
766.887 303.333 li
766.971 300.499 li
767.054 283.333 li
767.221 286.167 li
767.304 300.499 li
767.387 289.083 li
767.554 286.167 li
767.637 280.499 li
767.804 268.999 li
767.887 257.583 li
767.971 257.583 li
768.137 257.583 li
768.221 257.583 li
768.304 280.499 li
768.471 277.583 li
768.554 254.667 li
768.721 286.167 li
768.804 280.499 li
768.887 280.499 li
769.054 277.583 li
769.137 283.333 li
769.221 280.499 li
769.387 280.499 li
769.471 283.333 li
769.637 248.999 li
769.721 260.417 li
769.804 266.167 li
769.971 248.999 li
770.054 263.249 li
770.137 291.917 li
770.304 280.499 li
770.387 291.917 li
770.554 274.749 li
770.637 286.167 li
770.721 286.167 li
770.887 271.917 li
770.971 280.499 li
771.137 271.917 li
771.221 300.499 li
771.304 277.583 li
771.471 271.917 li
771.554 277.583 li
771.637 280.499 li
771.804 294.749 li
771.887 300.499 li
772.054 283.333 li
772.137 306.249 li
772.221 294.749 li
772.387 283.333 li
772.471 283.333 li
772.554 283.333 li
772.721 263.249 li
772.804 291.917 li
772.971 303.333 li
773.054 289.083 li
773.137 266.167 li
773.304 286.167 li
773.387 237.499 li
773.471 240.417 li
773.637 237.499 li
773.721 217.5 li
773.887 234.667 li
773.971 231.749 li
774.054 214.583 li
774.221 254.667 li
774.304 254.667 li
774.387 263.249 li
774.554 254.667 li
774.638 277.583 li
774.804 274.749 li
774.888 274.749 li
774.971 311.999 li
775.138 294.749 li
775.221 303.333 li
775.304 277.583 li
775.471 274.749 li
775.554 268.999 li
775.721 286.167 li
775.804 286.167 li
775.888 291.917 li
776.054 271.917 li
776.138 283.333 li
776.221 309.083 li
776.388 291.917 li
776.471 291.917 li
776.638 291.917 li
776.721 294.749 li
776.804 291.917 li
776.971 297.667 li
777.054 303.333 li
777.221 289.083 li
777.304 280.499 li
777.388 289.083 li
777.554 274.749 li
777.638 280.499 li
777.721 289.083 li
777.888 263.249 li
777.971 286.167 li
778.138 277.583 li
778.221 283.333 li
778.304 294.749 li
778.471 277.583 li
778.554 289.083 li
778.638 271.917 li
778.804 254.667 li
778.888 251.833 li
779.054 263.249 li
779.138 274.749 li
779.221 246.083 li
779.388 251.833 li
779.471 254.667 li
779.554 289.083 li
779.721 311.999 li
779.804 297.667 li
779.971 291.917 li
780.054 283.333 li
780.138 291.917 li
780.304 277.583 li
780.388 294.749 li
780.471 294.749 li
780.638 289.083 li
780.721 291.917 li
780.888 274.749 li
780.971 277.583 li
781.054 274.749 li
781.221 280.499 li
781.304 291.917 li
781.388 311.999 li
781.554 289.083 li
781.638 291.917 li
781.804 323.417 li
781.888 329.167 li
781.971 340.583 li
782.138 334.833 li
782.221 323.417 li
782.304 317.667 li
782.471 340.583 li
782.554 323.417 li
782.721 309.083 li
782.804 306.249 li
782.888 309.083 li
783.054 320.583 li
783.138 303.333 li
783.304 297.667 li
783.388 306.249 li
783.471 303.333 li
783.638 286.167 li
783.721 286.167 li
783.804 283.333 li
783.971 291.917 li
784.054 297.667 li
784.221 294.749 li
784.304 300.499 li
784.388 280.499 li
784.554 283.333 li
784.638 263.249 li
784.721 257.583 li
784.888 277.583 li
784.971 271.917 li
785.138 263.249 li
785.221 243.249 li
785.304 254.667 li
785.471 280.499 li
785.554 268.999 li
785.638 251.833 li
785.804 257.583 li
785.888 274.749 li
786.054 257.583 li
786.138 254.667 li
786.221 246.083 li
786.388 257.583 li
786.471 274.749 li
786.554 251.833 li
786.721 277.583 li
786.804 268.999 li
786.971 240.417 li
787.054 254.667 li
787.138 274.749 li
787.304 257.583 li
787.388 283.333 li
787.471 280.499 li
787.638 283.333 li
787.721 277.583 li
787.888 254.667 li
787.971 246.083 li
788.054 246.083 li
788.221 243.249 li
788.304 228.917 li
788.471 243.249 li
788.554 208.917 li
788.638 234.667 li
788.804 246.083 li
788.888 240.417 li
788.971 234.667 li
789.138 240.417 li
789.221 237.499 li
789.388 254.667 li
789.471 268.999 li
789.554 277.583 li
789.721 248.999 li
789.804 240.417 li
789.888 248.999 li
790.054 234.667 li
790.138 251.833 li
790.304 248.999 li
790.388 263.249 li
790.471 266.167 li
790.638 263.249 li
790.721 300.499 li
790.804 297.667 li
790.971 300.499 li
791.054 300.499 li
791.221 300.499 li
791.304 268.999 li
791.388 277.583 li
791.554 274.749 li
791.638 271.917 li
791.721 291.917 li
791.888 300.499 li
791.971 274.749 li
792.138 251.833 li
792.221 257.583 li
792.304 243.249 li
792.471 286.167 li
792.554 317.667 li
792.638 320.583 li
792.804 320.583 li
792.888 317.667 li
793.054 314.833 li
793.138 300.499 li
793.221 294.749 li
793.388 314.833 li
793.471 289.083 li
793.554 274.749 li
793.721 251.833 li
793.804 266.167 li
793.971 228.917 li
794.054 231.749 li
794.138 243.249 li
794.304 251.833 li
794.388 228.917 li
794.554 237.499 li
794.638 243.249 li
794.721 266.167 li
794.888 266.167 li
794.971 260.417 li
795.055 251.833 li
795.221 268.999 li
795.305 266.167 li
795.471 280.499 li
795.555 286.167 li
795.638 311.999 li
795.805 289.083 li
795.888 300.499 li
795.971 271.917 li
796.138 274.749 li
796.137 274.749 mo
796.22 266.167 li
796.387 263.249 li
796.47 251.833 li
796.554 303.333 li
796.72 277.583 li
796.804 266.167 li
796.887 277.583 li
797.054 274.749 li
797.137 280.499 li
797.304 268.999 li
797.387 271.917 li
797.47 291.917 li
797.637 277.583 li
797.721 277.583 li
797.804 300.499 li
797.971 289.083 li
798.054 309.083 li
798.221 317.667 li
798.304 306.249 li
798.387 303.333 li
798.554 311.999 li
798.637 303.333 li
798.721 297.667 li
798.887 274.749 li
798.971 266.167 li
799.137 268.999 li
799.221 268.999 li
799.304 274.749 li
799.471 271.917 li
799.554 257.583 li
799.637 274.749 li
799.804 289.083 li
799.887 280.499 li
800.054 268.999 li
800.137 251.833 li
800.221 274.749 li
800.387 286.167 li
800.471 277.583 li
800.637 289.083 li
800.721 260.417 li
800.804 266.167 li
800.971 268.999 li
801.054 268.999 li
801.137 254.667 li
801.304 274.749 li
801.387 286.167 li
801.554 291.917 li
801.637 277.583 li
801.721 260.417 li
801.887 263.249 li
801.971 254.667 li
802.054 271.917 li
802.221 280.499 li
802.304 271.917 li
802.471 283.333 li
802.554 277.583 li
802.637 260.417 li
802.804 266.167 li
802.887 254.667 li
802.971 277.583 li
803.137 291.917 li
803.221 297.667 li
803.387 300.499 li
803.471 283.333 li
803.554 277.583 li
803.721 266.167 li
803.804 271.917 li
803.887 263.249 li
804.054 280.499 li
804.137 277.583 li
804.304 266.167 li
804.387 254.667 li
804.471 254.667 li
804.637 260.417 li
804.721 266.167 li
804.804 277.583 li
804.971 266.167 li
805.054 243.249 li
805.221 243.249 li
805.304 240.417 li
805.387 228.917 li
805.554 211.75 li
805.637 231.749 li
805.721 260.417 li
805.887 231.749 li
805.971 254.667 li
806.137 246.083 li
806.221 257.583 li
806.304 268.999 li
806.471 266.167 li
806.554 294.749 li
806.721 300.499 li
806.804 260.417 li
806.887 297.667 li
807.054 309.083 li
807.137 257.583 li
807.221 266.167 li
807.387 274.749 li
807.471 286.167 li
807.637 263.249 li
807.721 248.999 li
807.804 260.417 li
807.971 268.999 li
808.054 266.167 li
808.137 283.333 li
808.304 280.499 li
808.387 283.333 li
808.554 291.917 li
808.637 297.667 li
808.721 306.249 li
808.887 280.499 li
808.971 280.499 li
809.054 263.249 li
809.221 274.749 li
809.304 251.833 li
809.471 271.917 li
809.554 263.249 li
809.637 260.417 li
809.804 271.917 li
809.887 271.917 li
809.971 277.583 li
810.137 283.333 li
810.221 280.499 li
810.388 277.583 li
810.471 277.583 li
810.554 271.917 li
810.721 248.999 li
810.804 271.917 li
810.888 260.417 li
811.054 283.333 li
811.138 257.583 li
811.304 234.667 li
811.388 226.083 li
811.471 217.5 li
811.638 208.917 li
811.721 234.667 li
811.888 274.749 li
811.971 268.999 li
812.054 263.249 li
812.221 274.749 li
812.304 254.667 li
812.388 271.917 li
812.554 260.417 li
812.638 251.833 li
812.804 248.999 li
812.888 254.667 li
812.971 266.167 li
813.138 254.667 li
813.221 246.083 li
813.304 237.499 li
813.471 266.167 li
813.554 251.833 li
813.721 263.249 li
813.804 248.999 li
813.888 251.833 li
814.054 263.249 li
814.138 240.417 li
814.221 274.749 li
814.388 263.249 li
814.471 260.417 li
814.638 223.167 li
814.721 243.249 li
814.804 254.667 li
814.971 271.917 li
815.054 271.917 li
815.138 254.667 li
815.304 271.917 li
815.388 251.833 li
815.554 237.499 li
815.638 248.999 li
815.721 228.917 li
815.888 234.667 li
815.971 246.083 li
816.054 206 li
816.221 214.583 li
816.304 223.167 li
816.471 206 li
816.554 223.167 li
816.638 208.917 li
816.804 237.499 li
816.888 257.583 li
816.971 223.167 li
817.138 206 li
817.221 191.667 li
817.388 200.25 li
817.471 208.917 li
817.554 203.167 li
817.721 217.5 li
817.804 217.5 li
817.971 206 li
818.054 208.917 li
818.138 186 li
818.304 168.75 li
818.388 191.667 li
818.471 194.583 li
818.638 211.75 li
818.721 240.417 li
818.888 231.749 li
818.971 211.75 li
819.054 188.833 li
819.221 200.25 li
819.304 226.083 li
819.388 220.333 li
819.554 194.583 li
819.638 174.5 li
819.804 203.167 li
819.888 186 li
819.971 180.25 li
820.138 180.25 li
820.221 200.25 li
820.304 194.583 li
820.471 208.917 li
820.554 200.25 li
820.721 203.167 li
820.804 217.5 li
820.888 203.167 li
821.054 197.417 li
821.138 188.833 li
821.221 177.417 li
821.388 217.5 li
821.471 211.75 li
821.638 211.75 li
821.721 223.167 li
821.804 226.083 li
821.971 237.499 li
822.054 226.083 li
822.138 206 li
822.304 200.25 li
822.388 214.583 li
822.554 231.749 li
822.638 217.5 li
822.721 217.5 li
822.888 248.999 li
822.971 251.833 li
823.054 240.417 li
823.221 226.083 li
823.304 211.75 li
823.471 231.749 li
823.554 234.667 li
823.638 220.333 li
823.804 208.917 li
823.888 223.167 li
824.054 226.083 li
824.138 251.833 li
824.221 223.167 li
824.388 248.999 li
824.471 243.249 li
824.554 268.999 li
824.721 251.833 li
824.804 260.417 li
824.971 257.583 li
825.054 277.583 li
825.138 266.167 li
825.304 243.249 li
825.388 231.749 li
825.471 237.499 li
825.638 203.167 li
825.721 231.749 li
825.888 228.917 li
825.971 231.749 li
826.054 257.583 li
826.221 246.083 li
826.304 240.417 li
826.388 263.249 li
826.554 251.833 li
826.638 251.833 li
826.804 251.833 li
826.888 240.417 li
826.971 266.167 li
827.138 263.249 li
827.221 266.167 li
827.304 268.999 li
827.471 271.917 li
827.554 260.417 li
827.721 260.417 li
827.804 280.499 li
827.888 291.917 li
828.054 289.083 li
828.138 268.999 li
828.221 234.667 li
828.388 248.999 li
828.471 246.083 li
828.638 234.667 li
828.721 217.5 li
828.804 214.583 li
828.971 220.333 li
829.054 214.583 li
829.138 231.749 li
829.304 214.583 li
829.388 194.583 li
829.554 180.25 li
829.638 180.25 li
829.721 203.167 li
829.888 194.583 li
829.971 206 li
830.138 231.749 li
830.221 237.499 li
830.304 260.417 li
830.471 251.833 li
830.47 251.833 mo
830.554 240.417 li
830.637 246.083 li
830.804 240.417 li
830.887 240.417 li
831.054 254.667 li
831.137 254.667 li
831.221 266.167 li
831.387 263.249 li
831.471 254.667 li
831.554 246.083 li
831.721 246.083 li
831.804 257.583 li
831.971 283.333 li
832.054 237.499 li
832.137 237.499 li
832.304 226.083 li
832.387 237.499 li
832.471 240.417 li
832.637 248.999 li
832.721 248.999 li
832.887 251.833 li
832.971 271.917 li
833.054 260.417 li
833.221 263.249 li
833.304 237.499 li
833.387 223.167 li
833.554 257.583 li
833.637 240.417 li
833.804 254.667 li
833.887 246.083 li
833.971 246.083 li
834.137 260.417 li
834.221 248.999 li
834.304 266.167 li
834.471 280.499 li
834.554 280.499 li
834.721 266.167 li
834.804 283.333 li
834.887 283.333 li
835.054 260.417 li
835.137 260.417 li
835.221 274.749 li
835.387 263.249 li
835.471 263.249 li
835.637 268.999 li
835.721 260.417 li
835.804 248.999 li
835.971 248.999 li
836.054 283.333 li
836.221 274.751 li
836.304 266.167 li
836.387 277.583 li
836.554 297.667 li
836.637 297.667 li
836.721 306.249 li
836.887 306.249 li
836.971 300.499 li
837.137 303.333 li
837.221 294.749 li
837.304 286.167 li
837.471 274.749 li
837.554 291.917 li
837.637 294.749 li
837.804 294.749 li
837.887 297.667 li
838.054 274.749 li
838.137 291.917 li
838.221 291.917 li
838.387 268.999 li
838.471 271.917 li
838.554 263.249 li
838.721 271.917 li
838.804 277.583 li
838.971 268.999 li
839.054 289.083 li
839.137 268.999 li
839.304 257.583 li
839.387 260.417 li
839.471 251.833 li
839.637 257.583 li
839.721 231.749 li
839.887 251.833 li
839.971 231.749 li
840.054 214.583 li
840.221 231.749 li
840.304 228.917 li
840.387 226.083 li
840.554 211.75 li
840.637 223.167 li
840.804 217.5 li
840.887 214.583 li
840.971 197.417 li
841.137 188.833 li
841.221 211.75 li
841.387 228.917 li
841.471 240.417 li
841.554 251.833 li
841.721 263.249 li
841.804 257.583 li
841.887 266.167 li
842.054 246.083 li
842.137 251.833 li
842.304 251.833 li
842.387 251.833 li
842.471 251.833 li
842.637 271.917 li
842.721 274.749 li
842.804 257.583 li
842.971 268.999 li
843.054 280.499 li
843.221 263.249 li
843.304 274.749 li
843.388 274.749 li
843.554 274.749 li
843.638 280.499 li
843.721 268.999 li
843.888 274.749 li
843.971 260.417 li
844.138 248.999 li
844.221 251.833 li
844.304 277.583 li
844.471 283.333 li
844.554 277.583 li
844.638 286.167 li
844.804 289.083 li
844.888 280.499 li
845.054 297.667 li
845.138 311.999 li
845.221 303.333 li
845.388 286.167 li
845.471 283.333 li
845.554 260.417 li
845.721 263.249 li
845.804 286.167 li
845.971 268.999 li
846.054 263.249 li
846.138 277.583 li
846.304 286.167 li
846.388 291.917 li
846.471 286.167 li
846.638 280.499 li
846.721 266.167 li
846.888 260.417 li
846.971 266.167 li
847.054 260.417 li
847.221 248.999 li
847.304 240.417 li
847.471 248.999 li
847.554 254.667 li
847.638 246.083 li
847.804 246.083 li
847.888 257.583 li
847.971 283.333 li
848.138 280.499 li
848.221 283.333 li
848.388 286.167 li
848.471 274.749 li
848.554 280.499 li
848.721 300.499 li
848.804 291.917 li
848.888 303.333 li
849.054 291.917 li
849.138 303.333 li
849.304 314.833 li
849.388 303.333 li
849.471 297.667 li
849.638 291.917 li
849.721 291.917 li
849.804 283.333 li
849.971 277.583 li
850.054 289.083 li
850.221 280.499 li
850.304 283.333 li
850.388 306.249 li
850.554 303.333 li
850.638 309.083 li
850.721 314.833 li
850.888 283.333 li
850.971 300.499 li
851.138 286.167 li
851.221 300.499 li
851.304 286.167 li
851.471 309.083 li
851.554 311.999 li
851.638 283.333 li
851.804 277.583 li
851.888 263.249 li
852.054 263.249 li
852.138 274.749 li
852.221 248.999 li
852.388 268.999 li
852.471 277.583 li
852.554 283.333 li
852.721 291.917 li
852.804 291.917 li
852.971 268.999 li
853.054 280.499 li
853.138 271.917 li
853.304 286.167 li
853.388 274.749 li
853.554 283.333 li
853.638 280.499 li
853.721 271.917 li
853.888 274.749 li
853.971 291.917 li
854.054 306.249 li
854.221 286.167 li
854.304 280.499 li
854.471 294.749 li
854.554 263.249 li
854.638 251.833 li
854.804 263.249 li
854.888 266.167 li
854.971 263.249 li
855.138 246.083 li
855.221 243.249 li
855.388 263.249 li
855.471 277.583 li
855.554 254.667 li
855.721 263.249 li
855.804 254.667 li
855.888 286.167 li
856.054 291.917 li
856.138 268.999 li
856.304 254.667 li
856.388 234.667 li
856.471 228.917 li
856.638 266.167 li
856.721 266.167 li
856.804 289.083 li
856.971 283.333 li
857.054 291.917 li
857.221 294.749 li
857.304 320.583 li
857.388 303.333 li
857.554 320.583 li
857.638 306.249 li
857.721 291.917 li
857.888 294.749 li
857.971 309.083 li
858.138 317.667 li
858.221 303.333 li
858.304 274.749 li
858.471 294.749 li
858.554 243.249 li
858.638 240.417 li
858.804 208.917 li
858.888 237.499 li
859.054 226.083 li
859.138 228.917 li
859.221 243.249 li
859.388 228.917 li
859.471 220.333 li
859.638 214.583 li
859.721 248.999 li
859.804 263.249 li
859.971 254.667 li
860.054 251.833 li
860.138 263.249 li
860.304 268.999 li
860.388 260.417 li
860.554 280.499 li
860.638 263.249 li
860.721 274.749 li
860.888 286.167 li
860.971 280.499 li
861.054 283.333 li
861.221 228.917 li
861.304 231.749 li
861.471 246.083 li
861.554 240.417 li
861.638 266.167 li
861.804 234.667 li
861.888 257.583 li
861.971 260.417 li
862.138 263.249 li
862.221 266.167 li
862.388 274.749 li
862.471 271.917 li
862.554 260.417 li
862.721 234.667 li
862.804 226.083 li
862.888 248.999 li
863.054 226.083 li
863.138 231.749 li
863.304 254.667 li
863.388 263.249 li
863.471 274.749 li
863.638 271.917 li
863.721 268.999 li
863.805 257.583 li
863.971 248.999 li
864.055 260.417 li
864.221 271.917 li
864.305 274.749 li
864.388 271.917 li
864.555 237.499 li
864.638 217.5 li
864.805 240.417 li
@
grestore
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginJCFGYG+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/S <1C60D8A8C9B64EDFB8831DC7D3DA5352C683CFE7ADDB1F2F7D19136185D1F816C3BE09EC1E84619F52030DEE9359B5F11BDC142E51FA821DBBAA94D355CDB3194A176F4CAFE2F8762140A61B8DB4801B25EC39CF8CD3F7F21C11EB8BF2FEAA7BF71364CB0E29D9153C5428F8E2556CFDCDFCF7C63E7AA008F518E6EAA3DEB5EC8960FB0234452B3B55FF1BB7B980C85D0DFF1CA34BE144E02D5E8A581ACC1C4C80D7396F6E85C6E2CC3BAA0E140AF4F656AC7D073077DF7B4E8B5856F92B> |-systemdict /gcheck known {setglobal} if end {end} ifendJCFGYG+Helvetica /Encoding getdup 83 /S putpop%ADOEndSubsetFont
/JCFGYG+Helvetica*1 [32{/.notdef}rp /minus /space 12{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 15{/.notdef}rp /I 2{/.notdef}rp /L 6{/.notdef}rp /S 13{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef /g /h /i /.notdef /k /l /.notdef /n /o 2{/.notdef}rp /r /s /t 3{/.notdef}rp /x 135{/.notdef}rp]JCFGYG+Helvetica nfJCFGYG+Helvetica*1 [0 -16 -16 0 0 0 ]msf910.479 243.082 mo(States)[-10.6719 -4.44531 -8.89844 -4.44531 -8.89844 0 ]ysh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/JCFGYG+Helvetica*1 uf/JCFGYG+Helvetica uf/Helvetica ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.0%%For: (David Pfau) ()%%Title: (aiw_sampler_trace.eps)%%CreationDate: 6/3/10 2:37 PM%AI9_DataStream%Gb".!B6uBqY5epEIt7P!8Osu2.1?W\&3;)4=41eS88+]uk?7]"q<c4CRDq)+^";!$H?3FP0JabSQ6f[s-/7n7%;1<:GOV">r\s5(%n;.;Ei-90<:3f8WiUQdqh5ei>ZkO<N``&h3*)6"',V<=>[V#K`@!XOK[Q9UDIb5U"-Y[Mun&E.igA"'3)W#e<f,O_0S*Mq85FPYG%_nd$%X`Sl=Ff*tq6hBMf2B)8"Sb@GnCfPd3FaK\-E85A*]r<CbpNYXK2s^1kB=!&n1JW;W>QSf$D]#)##m(7G"M`(GlCc[s[6#01%U/&>S7uo%e+SgbA?[&AGe9TOtO'p,&ek`Zd97&B;3!"FTP&aggnIJBXAb74dnYlZ[%6Rp=5.d$C\2!@\#;8BklqOBBl8>FZN)l&W%U6:iZ'%$h8$\h;X*d&0`'u[&poA59GaO,7&MgM:"$JjYdYJa"08P8O6"a)X_Is!jQ8Y[GBFU-CSjGRF*U>$k?b`8UQh>]c38YE's%K"u^:8W*)Ob`h3kZX.9l46TEG'!g%%WShmNme#]p>YD'J!(:i%+0U-V!]Q,/B4m)-C=o!V,19ecUQ<bueJ`p]`bGV=UX%e0G_b7<%L^8j#O91LH<$O%?dZ\s0+;qX3ESdKZ>N9^]'I9U[WaKrsd0O'O0g-V&5J)P)Ke3%#*d?B(3%"m59Kk0";-EKT`VpN!;2;'uc@A6@%#VU\-eq85.oU7UUo7^jtd-(P>"PK9#HY!=P%T13<d$Q`<>u$8)&8D0rS,7O>oZ*Xi;2!7`!^9O3prqpS>u?8n;1tjA#Z!mO4=uiV%D=U^O!MpD8\4S$><$D@>&rBMCeX9#qR8aO9UsL3rSOu2I<!l760DL2uq)jnakMa[5*hMHa:o73DVkm98!H4;sn@V^Emgt9]]EB;(%,'aN6ZKItGn\Z`=Jj.!uP_)*(Ss!a5,PZpIcm/==IPXZZGG.h%$!5Iupk5(ASk.,Q,PZq@_`-A)5!bY@S"tH\"oX$K-rVV34Z5J(%3PdGd,/Fn>OuGtY$1n@D!ZPho+D53&8ru7c"oX'LW/6HUkr!`U7L[#)'_IHG0Yn*A(]"B/E!<p"it%abEju4D:^[%(T4AWBPn:Tk%p7XoE!rt?V+#[^65([o*7I\=d6@)D"#KR3VUg6kS)_Y*@rBV=b*MZ<l*P>*m9qF]Oi"J]pqM+t]S<.sR'?WT/4FTcQN->Qi8.1*^%)%AB*@FPLC'1sFT_"`M@.D\)sNaSEb9CN.IZOpVo,HsNaeiKe$]MG,_56<k(9L@!7bR&/X%41pBkZ?khnrCc:\5hWAL*r8[$$A&8%=6U7P<b[A0\iRtBbN_%e6k#:K[YbLu.ta1r9BmgAniV^-i1!8+T)K#tH(obO5;X\G5P:NDH2Ngnm\o%(0:=*;l8SO&ATBBGXDOC)%A[CHSqG$s03HD6NP<Y,C:`su3Dt6s\P&'`[r,Kk$OlnEAn4CWb>dGsONVY$@o5Ua/8B"5uCato('p:TJ.p7arOsP4@/YR+X(GA@Y%A-0H6/S=*\&WKJ8Q_Cc3B'!PH=\KUhgYI@?J!&/pHFrD5[Z$<ao261J(%,9=]i-E!Mr\1=9VQuKnQenAGL1OX.na$=-tXc.6F]="%-;,2"EPN=+.9E1p`Af6t7<_]*.K2]BUN4"8b"5Jh,tL?TNo/t4ZkiQtH4uX]GB0J`p^\T;IcDehe?WNrs+f=t-qPJpO<a3MGXtPJ%0;"Hfcn!n?#k,``!cW#'T.FqjJLd%*IH2CMI6In.=cq8c10B\c5t^,LE$+kB5t_-LQ8ibNP2c6TIAW1,3.<fCb6^03$RuB`6Zahf%BMa%I$5J.@Nr,;B+b3?S,5!;Q?$I==KPO!n^ho`Wkaj%+n;f\)0rVCP5Tt_65Zkp8OG57d(84HI%X4(dLD7N7^JK3-6\(8W=TZdM%*.\ZN'A=i\0m)JPP4CUgiY6;kdY<j9[^.1D$ab^5_e$q)r.[EaLYg!O-/;_?)E_U2TeGaA-rEUQ23`j0&DRY53R0<PE),n[Bb[d'%.23P1fZ#VCTG@TW*02+SgX%;D%kSHBC1/prcb\A4'R:YtOp$W#Q*r$G\)AEG)jfMOh1u'DW?gjA*Y0Un8kDX-cu0aA8Ks6/3W\Rm%C&On(De1I*[@!3*6"od_qG##eWk=&oBTIZZJ@_CjPqU6=,dBH\@G[1>iuk>N6m/rVOgu&ZhQqU!NZmF"eeb`"jm=%NJjih\&em/J%bkm(&Lh)';Q'hp$+nuLb"%O`(5$?9eHAu@,ciDY(4@/J_7YF(2I:#&[THd!0Jro:Ljoa_IS9?`COr3B0nDW%hJ8mo_-=Y8t;@#ao%7&:]I9%#i)eGfYlX/Bqgo.g2Yi.]a4.KFM[AeJ$c2Pp,:PYGUhYZ/E*#!"s*TX"ab/B)k%aq*8sZ7)Gm<%=THPYk46P(Lbe2W!`R%7f6_pO^i?@;acMIHS>gWe;O0Tqa=W6!K9]iOVo]FAJC8e+IQUI+DjqmU%4@;K-[%R'USo^GW*K<%VB*"l04.$\WDf[*QL^<^QfDM%Hjd4`bB5r!_mMm@8lC&!lQi#gadbq7mX1&>iFKC@6VS]LEI#t;7:qJED=TN_Oa(\3QBeugB[TH=F;ADW9V2<=&aH'9M+I-.U_lV(%bCn0o03!O<555RA$(*90k_r'ia^^-H\R\Qt@neaLHDQn;.YRSSc883Za^R9P!Nf4%!>km+cRV&@biUgX7:GRRM[)!>1J*J71.QF%%5pG)VF9a]F9_3jC!fq>-`:>HTH9ua'i4'E[EAFul<0H0h;ULSVcLnaeWBZf&?3jXH#E>"u:Z5&(M?$f^R>C-i!Q3TbKM'F-!ZfZ<%!@!&XE%B=20U15X681u!(1Si43XjOmO<d3^b7`4u;bRF[AFb`W/X-%(?)jS!I*`NElpr<@0QeSLnF&KJ/[/f;3O(!+&X$9g4AGt.%V*OJNC(mql%YQn63TpRNIB[k:`YS;SVY!sNq.to5qC4TR,aCft`:PnoE<5PQB1Zed-,qru3hAk1E$_6bP!3BTP:aYmGl4kgo.k2&%6VTSAKN]MfaJ^+iB8?uN;MiRhPY9tP!YMF9R>;8iJ1cQuoY+#o"mV@N0Os)Sj7%k5)i]eTP%#?;;1pi8`+4HPN+G#P^m(!mGT/r?%V'@;(3uCFLcFAQBW<mO_`Y82@XW!VsX!GRkNi?>T5=@+9Bg_#RJ-MFX7Bl;rXW!]qRhu3gJI(tNbk(%^:fX$ubMej']cG.'<['5T%j@Pk=(Z5qk``tc;KUN0!&C,iFBU^1`QNEEuPZ*FW`mP]C"Q%0Mp_2kI0oVCuUCnH4'Mp',3(rl]9L7lJGYa@+f$s4:2$+4Bl@f.&%*Ir4N-0.3$;ZguqJn#,g*g\(u#FWM$VPmabJ^U2lTIc`OTL-FP5R@"\@(RiH/*L\JB'mIi"QQdYX>r[s14^Kc!HeH58C'n1e)>97%.8DT<_%R,@%cu(A*]Hr*pkOt58d#!DS7.qZK[H(4.)t4/qR2279-p6e+Hp=;4n&or.2BsGEgQEek6]_4/ZNM3$0K/cn2D:,$-N<n%6g4W##>5;i8-i06#P%o\j)SrM#Yd)nMCVR<jr,M-9@*n=%r`_1`ZkmQ+j^5RK8@(1P`TjTKN^&tjA">1n2Oh?OX8Ej,QsHt-k?lf%7?R*Wgd+o\O]Fa0@Xb%]Klf4(.CguK%mi!9;ae&J3u_$qOl.3-(;jD\^*hQgqlC7*)/tU/iY'T^oNK35aZ.-p_C%!6rfjbU(Z6&W%'kA-F4dGbEb(Ui-LuD'gZZ1\*!`dY\6Z4_U$TqkX"#?D1#Xeap>f+!;D1iuCc=OMKA.J?+Muuj@MZgq&Q?Yfk#DCh<0*@,iEP+1A%#J%fc+5BL9i=r7YAggOf*XU'L5j(NB!.G5K@+peF+&#RgGWl,_#ah(EHqEHsi$58$0L$";?R5(HYDIpVTfk_tUeaCe^e@4h!=\HJ%Me<A*8!-V/_(t,^39>2Q[[\YR<[]@kW#3jZE@a1*DZ\5sC'";YSi=G'JOIA^.>rjX!;i.qdG0D#<?Td]k2R`;q`sHjrZCn^H3On?%[1\[<KHFl'ALpu/MIi2p$1q#V#n2&*Nt\\VZ4%\*Au$UgH(YXtQ,lq+b@$`)YXIUp-@&&VNFrJnV"6^m%7"]&2Fp8gB-QkRQ7'!T%oFqk]I'cHhhbtZD76I"Ab@n?FTRL$S15""'8#.QWW'lpb(nfbS>/Egofo8O"70C=_O:`U_N--b884=@AU>'(4N-e"U"HWjVreai0%0kDnekaVZr@@[]l$^(VXVMYnHnn+"L$e-:rXs%p\-/]CkH_P[4=(7",kAmAI-?8-,dqdT,P(&U?K]!)=+E_(p#@B198I1nug1.3G%iL,MDA#s8#)%r!3&irN:8RRWK7UoQ3@d=(P%k^@o'</qB#_Fpa!^k$2oaqKq1d-tA"8&(i_<)andNEDR5L:G?=9'@Or:<mnA77#s%/g8_qkuktkSB^Y9NWiQZ\6N"sQcO4r5r:jB,C5M_p+W41SmV]`-e9f18huKD!$B\J,XhfdhN7Pb,:(QJ$*H#76goiN73IrWCpXIT%1G+9=1"0KsAc_W;ei8e,4[_Mc>1m0(7M6t/iH1d77LQS#4HIlML<_-=3DeNH7ZlI,h1k3BK^\G%_<eAhMO;_oXH&3`(.1up8ENG[%43XT0jhcL&@\fWL.gSm)I285W88o#V,9A@ukO:te'8@a7HM$`D+A-_sKs=\T-%c=5nb?O</s;e\q*H>FbZRc?9^Mj3NCuZL,17Cp%!6IX)T.$^C,j!o-eOTEd`=5WdE1973,Vo6qH6?+9n?a#[[$AVa4K;U`="frd/r=,WL`BIX>:c[S:WSn(:WRNuSq8jglusR1)V&)M%=P"r6cK%QM!p1Mt>uGR7;B9E[X@4llb*:'e*/rqJge4aV8_"-)=EabeYH/*dR?'fg`AAX1NO&)9W2@^R!suuPU`$EsBQo!cXC><F%SW@b8i?2Tj0cZD7MWI+bQo\^/g67AYSs>.L!-3kaSOg9kNrlRrJ@8@MV"f7-lZ#TefFF2:]Ys.`C+C[aaA@dCWE=7^U;[,WZe5=8%#WYOp)6eO"Oj#P%FJu*),i0"d654J"0.8=DCl0%ugr0pt1%%]YZN6M]6u>g'\RM[LXU\kNQ3@G(4-S?JBX/901mu]N89HJAj"eM*%dt*?V/.t*QQ4S+n"=k11=ZkQJZn*uE(Z1u'*4'Dq.oa_.aaAV]7H,?1AkQ[;_GZItpV_PcAG*!P:OjF2%b*fsG=Ln<\i*]#4ps9@%aB6.i)iI78Ji.!f'9/+%]1dWY74HEm>%#TIP*D^5Rq3WSMXM1q#I`b#?h.)liG51H@'(-_*Oh$AB[fgDf!\P-Hr4a9p-6hNK?)hN%lJjLKY`O_l]dbgYM><<*/'/u>0ujkD3TpcqQD^SCN$;o&D[80<WPhu<OQ,pnm*d6:]=^nI;/[!n1VOGhX[c=0dbj**D3e/D=/\V9%DbuDNfc8j>?p+Ws(sGW!j4[,d)<MR'Y&%Ju8J]P%fKl+hBE?kqHFpZFQR&['2L01GK=:J)cX[cASC4,_?lMuVKHtdhl$#GjXoAj8%(?>rIQNVtQi2$K("mo0$K?M&Y+fY5fAU'^"UN_ud8h7D0Z:(F:QaG#k61#Fi]Ca?!GuJd>dK(^-\.F-?m?&/dmA*0K[h`/u)RP:R%B)^DFq@-4lX7-GUU!@9B5F*GEYK3:HRA),Ba#-.'815t_-l%n:;MN12B\k.'ge^;\':m3O*4-lVP5NH5q[iWc@:>H<j'cm$8Y.BG%nWW:aF>i\PH,N\KG;bt7-JcLNYN&>'@\;]#?QBF)N+Lc"c58^4`3NnF30nK*g>-)=&M#bCZY:e12XU4lS_,qQk)%nDD_t"I#-KQ/%BQ_@t=oY8Kq/<@.Q6G]UE9/ZPGmD+KM06n?*R1W*jjbu_^.ZUj2.a?kR/sJI'-!+?6W/*+.6CMO%LFO>;KPBccIAS[fM!aKDL?nV%`j%E'Yg\H:&ADY<BkQ4R?;*C3#kEs4B>%Va)B1QRJ:Z*L%)(&,%,/rI_U9:A7AJSjZ.<mdpUL+r22t>NNHV5W)#qM[$qbTg_/S,r%I)N>0f_M>pR!a1D>GL%kddIZXC*E<LG@qKQc]#=rF62'KE8:HVTW5SU%fG`R-EUD]/m*Z/\kcQ1STQ:+anG3gK37<OX^7c`Ij41C%[Mh=$K(@J_DhnUA*fSD_)X:(I3:1iPVWno47&SZ&NhGR!;5;ZuA]\=j.C%:(@Vc<,12%no@\#^^_M!kEN%8HUUeZ<6hBt8:h7pNd%+:?O2SCa$5+6*PCdGet)`/nG';;fGq\2mFPUPh0,aTJpj)khG0D'0BPegd:L)j?9`+ML*0VdI?p"HeKfQIV(1;=ckB.&3^@=!X`D%P5A62\Q4t^<Dr%N'KXjqa813Z9&,RB\(YS7aeLbQe7@!eC#10=d;QD35k!_C.Fr0@L*/$A38,&CRLMG"j&s.KQq\/7%L8Ps=K@#0%o@t%"bdqooFu,QZ4)+.$H:S,5Z'[!N>!pBJ8:06Y$j]Q[`)B@C*E*?-;#HeQ;A#(?X;^QPGh0G$HdqRJnHkemYa8.C0nbG0n#Xo(%(Pu7<n:=\MqR;3qT_l5!P)l.<$n,A*GaSe#6[V)b2L=cYa%$R2UQ8=p@\`It4_l2icp]fe6(Xe8j](TZht_)54a]kZ+f5L9na`Yi%X>*$pr0Ka4P%02@Dqa[fI%1g!@^,ms$pHaZ+jNC4*[9FLlbE>A@IGd;^3)T*#R]H#8h\P95^^</C]mPp[u9)O4XuMJZVbl71%YUS%m:!?]]kC*S]X](mX%CZ2mu^6rGlum)FoU`gHdP<,'XY"2AdlctTAK2%2\M)5AU6`BFZo%c43eRH[ijd?m*1N&P:uCLE7e+Idm$aG%Upol".0&aLirZtL3$/]*caQ:M(gG.CVuO>/:hf52d)1?SmJ-sTAFRguD4*7hnm#mc4BnJ`;QhhCW:/b>p?dG_0kY\XI?b^.G:l/O%[!J;/^QD"5GHS'pq&#.h)RSJ8`PGoPhJf7k;RqEl,k$.k4L2"+L'^Gq2W>:lcRKigr=S,<H*=t$UCIKPqGkBYY?d60Y;'^L^%f<>%-&<X2^IXs\72!//<%<IOf8@:5`*Odfa:lW%S,SDC]dItY5["W2n>6dgK-=tZG1Pl$]O=V&]%]^VQp'QDkNMrDLZO#*hM8kn`A.5Z%NGe^8)u#qMT3aKq)r5qP_W;ic9MbMikOBa)s+.mYg@XqUpCF[Ts$Q/\p?b?2A6a_F6Qn)Q@M1q^nj4hO$TN-#,3al]h8UOg:]-Qs%(]Ti>-iM6I9Dlul9E*,nPQ0b6V>_@C`rADHSH"B*3:A!1s&clCo(e?SlQCEO=M'Ua<#.knKUi!oS.Lht!o1d;@PQ_*K`3]*3/Y`U%I8i0u_uG.H*!G1a!0Z7_)ug5+*5pu(!Ks3ir4`c*UGDb^&!E^eqnEZi^J@6*s,`$P*(9E@CY(i^YJ8m@FLO!j9j\kYAg>R,d7,]I%Dm)M/c+8Xu[t#Co5)P!$lM5C@T3O4!Sa!M6@D?KeLXrs]&0^QCn]YhbFOBYaj:jRUF,Tg3C8a2\&Bo81(Ke[S`,juOn\RRLs$(fK%<FiUR;)s>qD,j!TDr5$j)Gp]DFn*=IA,J:"k.ItSE7jad:fG$9c&-Zl6eG/UgB<R"p8j$H@9u:>Y<!+t4QS`n9YS/@%9R]<rX[#R%=5Aso]O=\9cX>E%):#,9:Z@%[U4P=)7?;E4BZLCA;.JB![/NO+\o$o3q`c*!:?6L^SBn&W<09<\`a4Q0<lM#bDAtk.2^Ubr^[0N^%1n5IV21"'b\Wp]e[n#7&\J;#d>/T3agt;dC^"M(\W.<Ti6W(ufC5b2`eCji&f20<H25k5JVp/X[h"J0af-o@dLXXu1Yh_#S@FXjt%qn3#V*,/*Ej)/orm81l6g$uR<9)\!(ekj,Y<9pU>CEr,k;\"-]+4Itp'Yf4d_;t!e`d"eE"Qo@kQ4W^Xs(_1<X=W/!=HjaI@B0e`%/K"IONu^'8F^-&dLD[JKG(UZ5E_V4tCqlEE/@]p@I7(qmh3jkn:,quD>C'#]^EP"L>>2QlJ%'tS]c4h4*7b'^N1U$l260*lJ!ct(%H`bt33pcmQP3gNB@=$?%4Ve_J`+!W+nW38FK&p>Bb5W9fFRnsoJ+7@Q&$s*Jf5:InQc1CFMPa9#M5f0/IJlsN4oKCW_R/5c.tZeZ%+tAMF;l@>j&@go#=01IIgF^&?Z&=)0mA<O+s7<oq,bdU\,s-84^TJj*5M[@!#.<_cF#ZT<6*9`5,s1Y.l.,\ns+9JWbJ!6#Cu"=6%?*aM#q&djZs"k#[cEttglHlPMUfN.YPIYSd:m\%5gdt&"-s:jM]Y#&TALX.4&/SmCZ@]Qb^uSU>O_Vq\@W_fS"i.CA;CSg@JmF<s%PKrs,Nq]FBhl4*;mS4_GDQc/#>O_sG.T'?fGD?h^]X>c;F4U-QGV=drju3Z1ST``C=^U4]!nZr/T\Dd8_Zn;c2S.jjB1tRZH<$_@%$SgiC:^XXWh%AooB^,Qi6GgR#l!6EL!F5NE(q[C(Is"pnKU$/Ef,1mW?!k0EL9i=>$$`?R62'f,(bUSnFiGZqL/-N(4dh=c5931*%6rQNi3,Wro7+u>Y]Jk!lSE_0e>*%KIW4)*\%PVpX'-+,f1HLt5&\QesgS)Doo.UAo3X/[>0hA>*8;\$]A*f665,ZB5cBh0rQQ^/b%a9.#MM0%;,7s45/mk%jNgN?$L^*W0t?pGk.(>?`$@;K#k5gY*?''@B/dkSVgNk#p,UmPq.OlF[=dW^thjkNq_')ih%46U*;2j"%Z%d?rq/J^2esNN)b>m!IBDNfXYf,?`ODM_&?m,R@fn5nC<,d,_)dC*Hp_f[g:p+QH#uT[UL%Yri3@4!$:'aO^f*RRa.`#Gu_k,n+I/%5`fk8c6.)6n,j_&#+(@PkP@3,p7cD%,DLgC1gjZR]LL)Fo<=^.7dWBcg`*a-C=IE43Up&tDt&WFXt;UONMBc=(aKHV:[UhMLNMO>%;K;SsA(A(]8qMIoU(Jo/1LIKmAcFRapm?0#:;spU`CpTLh3i@L#7V^6Rhiq0gS>amA&7+o\*(Pm\6NOllq[G;OaU))Aiq`@k"<+/%A&Rg<`'@7'/[GHm8h*bO'996#.6DE;LLUn%%Z#^g+)"FE)NOiQP(uIT4?I?E1)WJn'g^JfN1sZ3bPbu]gZZ!D'1FBkZe'3;5PPE!%5jE$oGm=f3Zo_:-5:T4$<"DD097nqJpf/k2#AN'aZIPZ$=L6ZJ:_[]dc,P!;K3VXmTrc^4gn^&C/da*Q_F7UeODn'#.jbmp`?F,^%U5.Gk@0LB^AMm;r-uBN5F(=bqQq#iDdJ.32Y[cJ9,RW8m(fE8/LNjG#dLUHf!@k+sL#u#,G8)&:KaZJ>bY!>q&OWK:PsWs1=l-e2%Ylq.D*4Ns%4nnMZ(rsU_SM?O7\(p7=RFTaNs(s.\e:PU&(XiO]&WYun+tfsdKed`gVf]g\:5Km_OA&fCdQ0#`8.e2:V!W$um4F:/%IfZpbdL*[kWZ<u2Y"h)^9t),`&'lI5$K7'Z=-=9[4WS@91Dje#:/f(*ds:dTAcC+[d,q/OX[]M3l>eFg1DQ$=UL*8))Zmui>(_YP%8l;!j\#2Uu=\AMs"@Y>8_:$kJ`Y^MrBEg4(@(IL9/MieP=g(57_::nb7aHgI-:fEaF21iQ%6C+p(Au@Yh]PORZ8Sp?e)NaP2AjNt%!tXDbX3l[7HlMl<,19&J9h@,E$&M*ALW2r.,#-6]"qO3U)g)/tR+QL$(MM,1EGue%[qB(mXCm0O.tN4D2[0@""(lEej&/WM(s-lb%8cuQMl_sQle+DdXa@pJuT**^>k82H1mpC[!5m^JB7ai0tRf\eXbM9=JF#hDNC(07<Gmd]5j4$R66;8`Z&<(>sbS,X+g,i\"B<UpW%W[nlGcl8o@F==gM6^bPuN/NBbG=.e%W<g7lq#4i.<$#9o^[Qk=0lo.q'g>OWT??<H6)3qceIRqC6Km>Wn`:-@m;Da:V[mp2h\U#r%0773%PkTllp3g34TH;$G8\TTA1-Q9sV[/C$:HW^tIOO>h;,05#qN(N9pX1a@061q&.9Cf\jN$;u`h;,!qekQQ:G9'-n?<Vtpl"nB%NJCU^qfn:+,Vo2D9d]jY'V"Mdd+cThY4@%(<uO4LJDsmT_(D)8\b\;c;1A4McX1U.9Dc^'2sYO%1*-geL+i093/5/3Ih-sY2Ac$T%Xtt:9L`GB$iNM\h?R/^66e;CnY/S:[n12QJAtQE>)i(E8f!h>?'Apu.6.e3Q.,Y=O^KN$(S&f.aZWVQBQfT:?hQ@[%OR5d1`m6gD%KT!gQ8^!Q;jg+nP4Ltq(ctiPEdr?3JO+7(jh`ZjS20fru/Glm+J\[8bLKE(0X%$I:05k4L(6'BJ9>A(`%QE\C)k%e^-6=hA)QdiL%R^#BS7e_=,PKg`9Kit/ls$XR`fJuXgT8q1m)VSuGpFR:XCi8)mSk8((`p8[j.@3$7N?Wg+oQ?r$/T2*:]aM/9\^F!K@bKtR&?cnp%)F`\<RVd--o!iRti6q(rOM>N+d>ROg&\ThZrA8B`@V<_8VW.A'p4XIYp^p(UMu$;!)S[!S0S4rKUDeW=:SYB2o0u68A$\WfIb\c!%N8*+*c'gKC)SaGmK6a5)`SJer`9c!TdE1N!=2KrK*1Q80,pNin8+T41_0TduGC*rUkXMNpR5Kk*+es@(RBo.t@M?30c<)o,J)a/=%RiCrgb?G5+[EdC+a)k:kntg_H26)r/LbD@iPqP?$P]TU*&Y/2-KdY72Y1b:=Kf!"ZlSDjANf8tKWb3uld<['Gk\3qP7N]koNBcR8%>5p@7>1#9%)m+#%jBB5CRl5TLlVoDS4c0/u_M1OR("2GILqBhgcHI4j&RT=M;T<A'kY8Hh[;>L31i`,Ik=W(p4r(RhmPSS4BJ$N8%dsg'-1MudPojD6B'XpDu]aJr=7TPM?Eqb\icD&]qkl+*ok=lnD%,\]AY-dK[pVooZB@5paJpV4ELWg]#]C#TnrF]QH;3,)5m-EuT%Rq8A4:+#IEe`\IV?E=mc)_Kn:*rj6toWi5_fCAVeZ:Q!PMEq?nKMoENOYkeER$RD$9mSo8o,KS*`f6_,BUV(K#lMCP+-'0m#@ldf%P9/;m[*bMqY+\_ma4&$5DH+^-q5Ra`>Tl]lSir@4fuUfS4H$G3-9jAJC9dOS-&lL<`NZLBl"d1;U,#<q9'8uX(=S/X:?Xr,H\+^s%o8P*p)[H%."Z:Vm1GnA1Ep$f:dI_#"cr6#*H[&Bb+jFV:CGe8,d2_oZ28mr_e]]kmf!OlZdY"F9e(M0*D"gGA7\4rJ%jIl2PWIrF%a+Iki%&[BhVb"EJm[k<;;e9-5--YBM=$%#ur-Vhd5A%FZ<@2VV1s=G'-OHiO8;H/!IJ:%to-/D8Wa8gkIH.L%5?!K<:LW\fDUV*1%B(A(,h&MsiXPT8Q>MjAKr$g(Va"q(c4uJPG(%1M@G<h`=)(glU[CaaU`p.8t]AH4lXe),X<pgX?][cT]mVt&Y@eKA_H[0kk[<VP<%jBfPb_@0rGcVrWbm@J"ap(@%bGY;1%I2he*h%Rp"<5hra^o-%C;iA,SRs],N[:Jt&RQn@<34=(c)PXs9r<Q\ekNsC!s$#*oIk&,A%DYEe%O605lab=X\G^Mt8L2<8C7K5L9McPiJnaeco-VSm$rV5olq9sTX3OCGe?5fE8(^n'2p@nDbRcjLfmT"WYDI$_.FuTi9DaM"n%jGZX5_h4(YA"".)4#os_%(,O5mmi,n%[`L&HJu,.^F;8\pS6pn=3B^#XaE;K3shSsY=J6(GCL-r&P7><Q8cc'ClT-<kB>@%da%`p%;gGU"CrhAL2Kt7%rRb1Fn'+u/TG^-;\5>Z6:AR:)XN)9scG;r&)*@#Z)I]a)MR@HgCY->i)lhn$gM"8!@,:$9W?&<]PUkSN/p6d"%[]`4V54>($X;ZMrBs\jOBc:i,Df=W)WAZr3UdGflYG)'6nV==%*c&.<e"Lt1TPZN7]qmVJT"X_mh7TpJ9+VN]B$i$4-B[]bCu/j<%raaS.QH9u[IDN"g'Z%k6Y\Y"iLUL3X*SdSKn*Bh-k4m+)lUF/^Ys^8/,B&<+JLbH@QZJq5R1@^.nLmMtBp[rTe8grNX\-U*CT_E2%#;8V.+t\IO6LX%<Mbh7%V&?SgGFnAiqAWKrXT&mk_D&$2r"1$bjho6]PLe6]rh5H\[sS\qTSb7Zg[4K>HO/P\/q8;F'i!'QZ/kZ>%%iET=XTGVKF!53(`'uB<6EIl\$l+-NgC&,6mAD%c#E?H7nBmrH:BeK-1+@"MWrNR1*#@3tpiK'26Zdc(Nn#0n$I%fIW43BNaLTr)%Vr3=@7$&:hWe*Wd8k,J<6:RUb1rV0ET_Kf3RS+!S(?I>W"C'kD8B2gZJ(Q),mGEWD^4.3=d`j<>&Hj]_e7nj;B"P-o`#^-$;g!O]%<6?=f+NsHQm=eO9UpHF%Z>:uu]-)9X)fcH0QKt<b.8-Kfg)!Fcg]tSk?P;r7]GlZ+5;!=QSoZD"oY(^(n6m>p%d-5U4Zq.MT_.)-%oUo@2@PithNO#Dg"_=1f$#X7Q1rilb4>h*>*'@?3it%#/luY,$?1Ia9B-k!g\<7[m-=+ga-ab847V4C=>\):eWk$DDFSg"kg`MsE%\9u[_lP5i,<1;\k]eYrAY=5TMq70kF6[D?o[%j6<6utCBT55HgFkn_d@Ks1fF6-keH*a*=\^'h*7O^hpai(nJXfONcW%rd$)Qpul%$[sqQG>7%?+hk;B\e6uqWg*8&a7=)UK64fUYTf>6(1bf@#qrX?M</^Ak'[S!EFR781?tK<$L0)Kk5l>C/R0IBH,!5954[)KMb]jN%RV?2r6\5Lfr_'oT\fpm3a7cgiXlr'aH6D:Di>5o7SP^EbZ;IV?V^412@#;K5hfbE+D!b2fe=Q<Fs-*"6+mYd=Dul,`HV>Gac'8Vu%DH+3>e>=N_lHnK#O5Fp[J$s/.MbP#J7q?Yn8YpLQTC"DcBtW7?W`!u,Ke*&ggpr,sn;CR`q?^`D:;WGZ<;*TgqlhE+R:p`dA*bE\%G[)3-$kdE^:/\imlA(cKrYc2H+ntIe=[bDad!SkZla&8Lk7h+k$+^2=1DP90g7p.MVRciod*K_#\?Z0O-msoib,3!+(d$a.hFYtB%)b'(6M4Fgo4q2D:RM*K_>L^&"_5]/#6:&pN(80jlEG`+^J=sUn5]MkeXoK%BJ=,Yg%QJH9H_Y/>r`+%W_\=skS/CBM-d*&SBrWe'%9Kr*.#hAcNLGjbI]8ECLUZfDm$`AaK1)]kgFVlq)@DsAH<@>2,lBZ=<RVo8P!1:,]`N*bf!8ge/!-#C@/c.I9mC8G6A:Ccfb"Pm@%UKV_5*r6Kt9_mN"GA/'cojqZ)`CdEkHn9+).T5,pIi"O0Ji'dV'NkgL\:rT<W']55@P"ZLQCc'jo*jJ?`XGU3hp1M1oIbu)l&?-2%*YM[a6N>]Xc?&03ATMF;-]S6U%uIVc(3PVo0m$.-q_$\MrF7R'GB:?WHUAl<Ld=W2Ei]%bN_q<N6a]:Md9itB`];T#mpe)1Abb;R%?D9+3pAqWl:;/oe.'W3m*8C=*[$84;n22&IC!*UCMlB"-(,NFK#A56`*\;:9AU8I(ZHpbT8+?"s>Bnq:_GL$G3"9UZV*ucKd><;r%>`N/H[g,33<85jskeo1NBifRbH_Z]qmaKL/%NPT[eqDH`mDN'@!%7&JVchta"u1jhc4hjDU@\.[D:T=]qMEL;*h(\l24Dr'C3t"l%ZP8=HjjCblWOmL#',FO;_t=r!-d!6RbLoY\Nk4mb6"RM(<\nZpQ">Lr>FbKtPR:+%]9::EZjNQD%(MsTO,J=-=65r7p:po#/(Xm2%KIq!0p_TnWZC()fRJ1fK(9Fh*P*O;(`IgIf18<5W+)^Qd_`Cg8:fYY[UIO(,Z([*?#2ldioW_T[ZVVhGJV%kfb";PB&rk1GHKBP[%R4_Ca+OSQLoPdBYB(1mEgoa#=h&07o72,";[7!BI\WgbK`t]k!fuap:,g>=>>ab=p+l6B8\``qekQgk/B^?O?NuJtr%#n,//@"o+%l\V$tojm=KCD]*?1dlHeQn*=5J9DQor.Jl;B^O5VbZ%*+JR1rj#M;/N`h4r+ccn^70>Q^i6q#Qk$or'7%sR_6QMAJUMV1'aXkmC*%R]X7iA]mS.0P7JK<*PefnhLOZN1)r/agr63@BAct8@>q.`OI\/Cd%Ir[E!DQ:@W=I._1T6EFiqW<UZSp[iE8+Th^V*2JTuWlh<Z?%pP-4t.>n^QXG+;i\/!3?&660CIW+1tL!!HJmm$RVBcXN^A)hY_ZP]^_NUl?Cbo.d^E'9+>l88KN6Tt?6Z_@%sL^#D>lVChp2PbD&%3Y7mP$e'[*WfO8?)^7P=VO!oSTT?(g;edG7AcL3[h@_F].TPT[HM%^b$S2+SeZ.!+XG+9+AX9uG'l.Z=Z,GYqTK+<nZ+P-rWEKSi%#M!s6lFCpI:1jRKJKd4*HhK3g9LA0@*\eLGF-.-]raa3/WGZ@E3CU*qg%u&\02"h-d=TT-O,E7\[Y;l*V\\F^EOgAtPq>;?<Z%lU%CbMMlKPX,@"lDB9?qFoFbhelB"lF&D6F3+g$e2MZ$KWU8<U[QpJurHRDl2Sha+3O$ErK),h)4$rS*a@`PhJ0E/_qCQ'J2-)4T>$7%d"Q9lk`h%"'m&U*1[)p:*NSAMbr;ZITJO\*>UkNS5(em^h6D89SQV_&"s(&F<m@>Ec_+51mT;3!cEpFpK?cS`E:Fo/q[>Nk_Rk+(%SUC\_hBQJ=3HXs4FEi7;6Ok+M)<MfY"qB-,+PA+/br4(j/-arl'BjX3O:7^e"I)jCp?Bq(^6Hp^KNCX/N3%FWkd=b*kC>'Yn&<R=%Z/jJOHqsoo^rGqi11])%F%(.lNn9Y'2T]@0iph-?A7`NKb+.Iq>kbEco(^IU\9S&?8^k!O:iH&AU=LI3ANi/#Y&$A/:75$:\X\iF%grZ#:U7(Js,]_N\Ja2%=i3j+!0t$e69=g,-\qVe?k9r3CY!$^7n>gp6:<@DM8B@V?'1\/!^S8acP2.)t?60ocWhQW@mq0B:91spT%RpZf0+l[0i5ZRFO=_ca%F(P1ZXM^nh1ais%Y2Y.HE`8>cEUUQfCED5_J9l8BTlc]3>,"3Wp"8urK+oju$2e8k3jWoJJu0L<]1L.q%R%h$,SMIIsMH.9)1UGbGJLTWR(B9MpCWkabSN4X(]8a-I)jg<]26U;6%(nGo*Qo]F2lVKL%t*%_#6+PC,Xp1.r1%9Th<4;gC@Vbn%nJOHVb7Fc8:5?t3&o8>VX?5I"q:qFX,*b1LgFS(6ld^n>0P26l^K`/*eM*kEr/qL9Fb*;['f0-$YE-6BALl%t]=WfF0VdOR0jeh4%MRa)V"cb>/&T]o"aPEI'\&P$):UW%PVA\!/\lApg:-5pE<cL+X*4A=Fj(t,>@\,'Yi!@T0N7ccFQ76^3m)kDuPEk:a^L2m,7?phr%3jM)-S`TtoMS&)6Q#GFhar`$jNENM>PL$441XhAIdF>^ggVQ!M$[/7H`4]ZO&S7kL/>S>T<u9k@'he/p(rFbqHLPI(+Bfg^(@E1F%#rm76ggnDbJjeslWq0OdHL&Q\,SOpuS&K45[#det1--G+>0J4d"%hsD3LJ+\h#SrrlgW!fO&_7bdSXc=<][JHeg!P'Gcf2Ej7RY-%YeApY?9*TCFY+Z=m$]9Pg*mJJ"cnV2/U0B^fcpT5BVsb)EuCs;q0C/.A.3p9aNnpoT&Z'*K5dS@S1Q&!MNWe?/'F\$]s;Gm2ss.<%5$9:kh+GP[0-(+]g_q)?ju0b[m>"icWH2Mj3U?4InNEVL"]l"n,P0*8jj%9Bk1*Uf/f:kt*V8Q^$_#ULI#qFm&9?b_YAPtH`&(EF%3C!_1l`<%ERc@_U>M=er+W7h#%+R`>*/MEbd950VCX%X@p%,@=+)[5>a-P&,ds2[mN4=#n_^uOq\p-E/H!K7<oAN`r(3C4$k])^k%^3Vu54s-2(`2u*C:A)M<1ZDG?F.:@.Zed!9Sb[4Gdu698*.XmViJb44eZqsGDRbGFHC3V1HL3a?&liKm4Q^cZ(GV&N1@#[G"esIi%Ze$g1XR("nDI#b!3nJH9+res=Kbr@92kH@fL?;X?"$>(WZQTP0;52b4!Gn0!TO"`XZ=3;!E7`0c`TOls!_q9I9ig/u5cc7V9%.G/%m\WX1-L^lDi>dojd,Z3gHZ:cW4RY28_'rr7*P2@4H<d_K^%I9K=e-#j$r"1l?8oA8VsJB_DH`?7eou1>bW+uJAa5O]G&'K/S;Ug/%H[:m%3J0ARG;d0U876C+i;G\m;X`5*Oa=d&N7@%J[:H*()j.O=UnW1dOHGFl`RZ/]!Le.AUnW0?D?FaE]r(NQ!JB$@R_!I"&J>VA%#n=#LNRu(&L/^.-**Y7(a'C/7bC6bk&$D?.2i"Y&Op\[WhboLi2d&POm)kSliQ*'.&%4:]lD\`+YC_[+dj7rON;bPU@<ZDaZk6"'%42O)'aE;!C`1f?1lh%HmXbE+u:^sH$2(norH5'XEOJ/tZ$X^7k*N!`0A9bZ("`,JN&t=e**4t$P6'TD@V`ZNN*0ZlbjCR-4gGtd(%miA7RK;u6?nBN(%mHKWr^Y2;sg#1IGUbC9VW:2b'm`?O=$Q#u6IGqfiCQI?hIV[j9G&OYmpiQT`o=i;fS&E8eIZee63Z.j06"V/c%IBm(m1'%eYa1d@L=tK"1c6bVW6g`j3qII'#F6i,3ioIQ+ZX&=A7d2d>fdK$bgS3*6VCjH85/Zg=0%nJs=Z6\CC+G8^F0X5r1MU"V%&c?+%!d8j2V.nG@liosSRl/@6j#aj0*Ef4hea8OU4upeU\^F-i0#Q!7'>&$`2;59K[*5Ak)HG)Cq`N`B5]C2]pUlp([E'ZdL$a1i%h:?r2dAR,a7PFi;(X'de[1/mL?LE3I@p'<+a_JqWo)kVC)TT1n+)SS?oQa1DAW2Q(%0q!QbCN'j1THs4D@INN`HE?,&8C>+3KNIR%WBDJYgW<pL6K9r.50)s0I]I'jb`t%^Nb>`/bOX-#O')X^/9m>J)+_>%<Lg`qc6p`Eotk#$Codk;l87rbY0YoIEb6G^Gi=rQ7*`Mr%qK(Pa%NBEB5@\ZB8URg:UcY/(U&bSsZMaN<meMS6W5YB7!N#I8/p75cQ)Aj%Cq9fK0M?$,RAfOB]Q='UZg"R`jRm-6RJ?tcIT]`1%SXJKPGikc"2P$6hhABtAH8_<s/tHGNYr-(@R8r?$$@7hN\qOeXV6]@0f3[("9kV-pZHd8IZWoPhfUg'gl-+PBQE`SGB@E:1dQ-cs%Y\5qcR;t[h;d*ZhSQRT$ghu^6B@CQ[RbQM?IG&^Sb,N5+]7t,_ZglM80X[3_3jW'Po.u)%aegkpb2ZiQ2OteGXe&7"Q:n\J`f/Sm%$Y!qoCc[IoX#4P=buN+).sg#l*SGQ2$:le?Ak$**2P&N9M4uH$/Xt&*H<k#=S`S#8>-mI0k*Ir;dolLdf:,KIL(&6#iqftFbd9p)%oCu?F!7MU6!D(NQ>>Kj<jWTm1^ZinCFlJV>gfp=.B3r2Pot3<p8@I6kC?O-8dALk^e.PQ;-ek*L8];=c'7ZEt3DSN#8AOR3>%?-i%"&K=qNiD>*ODI^ZRm2RL3KW6Ym;cfk-em*_9dGZ,:l-JdAtGT\`./K0;ElnL7<E@QLuuUVh0A'EIMW7F\]@p[O-f@GpDC)Qball?%Eq9Ol/`&A&0m?[]=#qYUX^Us?j$@l^G"D;jg7L-1S#3R.0m>Ms7J3=cjY@H*\=kGA95eG.m[-(kgc&;m7qc5][-t>jIBH>rQtJ-7%=]:+hlIm.sGtqV`@d*%),dT[_l#RejBMG+4bXI.i\RZnTqq,9!\IrrHXFiLfk8-0lV7?sX"7.:=;6n@Y[K?&T11]B):3??GTe*'%%E6YSNfL;R/&>4"Jn$(P[.'3$D.iJb-s0#++#i?"GT36Ud?3nsKbHgeCD[0$Qn[PT3OgA=F,J0V?<B6/j@Zed8cP1QJALE`pOBB]N%SH3.mXSqPijq;IE3t?$tB"g.o>lgWS=1XK_['/rDXt`tnH1%t+jn6D%Q.G-3g;ZtHbqJ=u4f\j'$VT8)L3bImA@]pKg\%+FGe;67%$u]Ds1:Z9@]A_`S<R4f>pu&QFeHoK=D,f[BorPl#!3'V]e#LN`FS^M2]p5s,X=@ZjQ\c,'=*Tkq2:%$@T$'M+#7l324X]#N/*gY3%lP&\%5IYs,'CO(#+'3&A_[1OfSWr:qT?-Pu]X=8KBADTbfm<#Fp9aFL;gugY-eqjppSsa'Vr=.7!\HCD?-UR=^M?F-ZHF+g0X6r$%E0Uf(X<a^^>(0uC;pn8"A&j&i/U*VDG+7U'h<,-sZa;YaZU_t4=qYW>blXG0D)(4"D"??*P*kaK=QHs;"kP;M>b9)kA6!`l,e+&A%V/GZJ0UG@)YXeFSBhYra3=hEI9R%=oT>nf1fsEj]bg^ILECq!\9KNJd0#@eJR-gQa*;m>)8f*8%4]pG+MqaM8j2I4Ljui/.oL,1:%FtprIJHXQ5V,q*q*7q'-`Kf3\`R'(c-?hJQ\VKn&C1)lHnB=ZV2CHp)(2'P>dS(`u:=aUD,H;++a3G_p2`\%cM>c")Ms)kjW.THF%dQ)#b[c!YP]ot#BZYl0$CpT_(F'K;JDCEA3N@ZhJW!^qGF?2*mO,cMC1*-hP/XiDXS>nqoh[OrQH2PBQ.s_V\I<h@=(DU_b/S4F[%%H,W@]%"+WK_LP8r2E=`Mf/mcPh(&P5DO+11*:BrH]M>XiJ$uZ:ZI:Q=Mh:`fW7m#Mq9'<Nk,&L/K<eD+(s1d)Ddo$`ZMt'X;Ys1%S\pc*ehfuS\MRHLRpR19!#fqY%Y(ta8l#olE'`e84G;Pn5puJfBm;)P2#!&A3F;B4=0!T/A%Eh?]20&$M-DoB%_pn(2S.?D,epFD%n=oc#hi)8o[2mF[a-57FT4Oe3UR0&]2R3]JgIX+"n1Qg6_>IfTY8_nJEj)hK^qLf6Y=rd3^(qg9*G^nR.,E9b&lN83ZNd7iH"6u)%Fm;pMmRjgj[6RV:3gX9=`ml2XMOE578_^ed!4GqMbf+,[+gF$BcRQ<E&gYs!rPF/[<S!"$V2<[Hq(A#4$?h2tBRR*;4@r<P(SOip%6`73.$4DShfd)+8)N:`YZdKg;1j.;9k'akak2WfamiS(AQ/-M?8U$YHB+^u:n;DXh0,2[>X3nuMJ[13_=p-*WbtONaZO&bcZ*AUp%A[339CXLAH]Yp3e`Po<]2:;6ciMjKpldiV#^qB9Lg#:;3!F/mQ.Si4e&5qQT+"PbShURhGCmV6Zm;%]f!*=,Qdb%F<!d(bCWT/h]%Y4KW&XHoStPa3j"Qp,2:T3p>e$GT>XmS:VU9'`dFS)T/g_CWCc%6d(5c*#:M/ZlZ8#[)I<^MB1,Jh_mZj[U@0O-MF\(`1OhN0\_A%;KH&)Oj&'A`U`mGr5dId*%[[keQcXWK/o$Xq;iu8^!D6;D-R=oQSDHHUQ7!q$E0<c[],cb;mJsuF?7k&ebJ+2=*a/"W8j<``\,P/%F'k?q.6;P'[<@fqfd_nfbV>I)I4*9?/sjSFj*<\D@*Br@D(],H;EG:cYP"&]J@=1*-3qnC*tl1:5Zatm<HPh</3p[)J3*/_ZMnCT%*'hhB=b(C2!'Pd$iSp6uk*uOPG^>_!!d'n6kW[20&fiTF!'RcnFJgZT[lJs[s!h0%DK>g"HKD:)+Kt0/4r5TPXl3)?gm@Kp+$Pob%j&Pl,L[nT>aL9Yeq/#0Fg(*5^IXZJgi2prHT18/DK89"XSsHdM6i$)pY?^<g4q1'8X3e-4h]i2`;ekg<e7dt/:\@q'D^b"`IS7_u%/Te.fXatH(`kA'^:A&ZMD/4X(TA)?%e^!j:ADOB%2jEF7IeI(kUF!Y@\UO7MqAK!]>5DJg)bS-(L%CVVDU.p](CC]_[>o>,be)%n%os=0;\M`mH\UO5sl#H%9FZA"!^2(mePq/Hla0P-aDutj?\UO5md`l5OSEm'lVR]Y(QHHC9jR<\]o@i=P/t.6b)0:5s&`d)rj'4gL%p`"7Rh\rfK>e#JnmQflYY+ND,CP[RKqHQ6J[N2-9QTWmG^)$&+p_GsCc`3:m3tK!IF8bH@nZ:t[5PkU!2'[7OF8^3\k1lqbjE-.,%ch15hd.C:%rB;LMTBg.)'ZkB@<^#'\r_u)k=0?YJT7+L4[Og!KY+PZlIS'h=MWaih06C@YMCs4XT4nkMEiS$>kOH)d*HlEDho`QU%d.@%`E3>hH'(7lN_r4ibq^(74B\OiZos<*-af0`1]?N!SY+Jj7RrK`oolL)ueTo,_=n,`]qt4QE(?_^\qCufUDm?tMH$md<BpbI3%[lPHH:\@rR4?iMJ[.WhroB5s%F;3V;7d<%[oqPpr(8q"[5.6IR`U$Cn>9k_9Gr<W5A':J0B*su7<A2+&PQ"h%V1!b"Sa0oq$cFHr%j'4fq--6%1I&gf:.aiA*>X/1UnNo63F/Slnpou]Hl_eN0mSlD@&%p),rG9?_['SDBkPEj:3[rq5(!lP/@*E#e>O;g]-KdsIY2;!`%90L;MSEo@\Y$Cd-^I-aSrK`6\1d0I:?82T>?cT^+p55Q_9&d_NqUs08FjcW,ch1e=1dBMdUQ;O!Y+MO&c@"Yf3S2Rh@r"*V04]F0%T4rK9''K,E:CcMiS;X$*B/_hmVF6'e:Cj"qNK-Kk"k-1>2>^!ognnS]@oo'KDppW2C`dn?86aS@dtlG>k.n7EqaFh&H_&>11sdEI%V[4b#:lUH#T&Pr67:1E-jN$;uX00Km'V"M4B6j=P>1bjj.,[FR:K7_W>VsGas)Vl.#EBqac>2Ob(HqQ=L@u+,;ka0'X*X!,q_R;j%`U=XFr/RS`d`H'O.h0*JY'cXpE4+ua)cu?THm4N?pGu[:or4><DQ;MSmWS0o_;0+[*d@@)0]VRGG6.+dHlM-QRN(GFlg)FnpN@iX%\TdRPLO25p>`Qkb@Ve/P*q###r8;HTH]nPqS`D[W"BSOCm+h.+,MdP)]Q0>734aH^r:KAoq]@H!jLnmFIrSaXhZ!BADeu4YB7\<6%b?p7,[a1H#%u'sfQ3uiFKh([>G<@,rm4DPR\aa`FSMn''0uO]8hU>-<"m;4I-BM&-o0m]m\E4&fHB)AoB7[.+*$JhcbJ!AZ#05c1%8BBi#l"`EV&D@qENjr!T,fc06>/snDr2`-9HqcF@F4Ee848^[b%cjrD/lm;i5u-Dc=1h2?iC!USfQei,G=na(IC=9O(?hgu<__2q%fggsUl*`7TIhqcI@QSdq?$l?Fn8/p$QnKFA3eFua^<ku])5Q)[_1R\"Oql`cnEE<Z\,3doHJ8.Z.8?.@+M3==aNZ;c2p^sS]8[X<%]m;coX80b[E'4+t;)jign*:Q-rqnlH^[?QU=jP'92PTt`E@]S3Ea0_*_j;J["8(2hB,A6Y$'O=05B_KCE#GC:ks,A(iLE;VUDBb-%+=Sur[XN[(>YM/<g&A36ae%;F^E=sZ9i4.dP<nkm[KhQm+jGYZ<rN(`!',4iO/S+mguE7+]i0oi&!65PR:QoSH0)jm)DHZ%Mj4fr%eU-#9bBYr@RR^!)kYX3pn/^@S;qZ3te[$,-?7+Pco\bVIQX]+.LFt6?e@OPAMMU\c_GFbZl.DOHSR4Vrb".uPA0d8^dEl3ia2##$%`Y1#:]Z&FhP/2u\4Gg>llQ6_PI=on]\\AGH6`>QLT8V68.U(\3/+56P9B%[(Lc+n8e";8`gX:O*riHd#A6GT'E2b^"RJ"^7hcbno%b]haA5-8bYD2h5hiYmHinmtEGQ]?5M2hc"9*_hK;otWBK]`B.N&GFFBJP*=""FG'VPe?:@\C1&)QFr[L&O921+Z28FQa\\Ap<<i&%Dq:pSo]q>]3cD+q.NG=c_@UC^fb![lrQLV[Y$iM(d^$R'Q-O3,R3(l^ipM6iI1.28_Y`<LdCD9l)c+_<D*unVe;?MCR<IW'Z]"Vi%9sN<^fWO!<@o3:(QG],^&r3M!1\\jXkq2[P!mD\h-4Z-t2*7!D38C=890&HuL^AdV;[Dp`6(!X$-%_BbF>"^^OcU*lL.37NWZ=a/%R(5imaTG!Ti7VN+%E,79!3#=AblWGQj50D\mO?([]XFFdaF(K5!kE@b_(bH=f49Y.]TZI]0R6aA^].j!YfD&Cf@q.,prHM/M\S5[%ikZeL5e4<8V>VndKnpi5<)lRj`P\Wt:gL$.Y>LhP4_e!UrViXNoX..'p4Q!]cu3@+&e$$^LMuE=#PDki5eTqpo$,/@r<-TDE+W1q%G2N$g]s/ImK$kg:mdkjf?eg*[fb:j6i[M1-pp<kBXM0@P,@$ARg+Eqsd(=WJG<Wp2oB0e%q2"0e@-ce-9H2SuIDU@$r<c\Td3IUU%GhqDtl.89Gp`rlpkHLcRj8Q]%JC0.3'S?9g)%h%2>M/V>>oL(;ZP`K+G;8ud.<$AQ]<tI)#UY8@kP'hC?*#<<`%5$M%_.c;I$m2[%i*/^>[())d1Y*#UpS]9b:liL5EGY1/%4(;6gk^(`DdaHNj7?o:o]c*)FuYj+-^FlL(Z+mb'u'M?=g5rJa#.`T0tY[<KrFH...hSd%!OEjIg8J%I$#c)#$"FbD\T\qWeut*uN$3DT>mRdrpAN1>nCCC+^l3U?r3Eq76Ms_AG"oBV^<A#U-gV,Tkgm!`B)>@F^[Nk5=Wpl^%cOk$uOUqDTEm,M1(Mdc\4(;iX[4J'+LFRK\Gi]L7^0IGBq#_;1`Kp9'Bj#-k)Em(Td\"1GdCK0I9j#m<g#K&$*`TR;LM/;koMn"6%/23U00<PNO(t&/.?=B+P\D9;0((+-*\-mQ^Pe9!+$IV,T;`r#EXbc%(oD:o]5$kpj%B&WAjFq0I).jIY)]?A1'WJ+"-0ph3A/,2Y%OV%*NPlL)$`\=I;@_Srql8>3=`9eIT0jp861l^:&0WQ;sEH\WAX&q<\>t`TUkjCW.,IK'rcn\s"VFl4qhoJ_$Z6QCmp#Wf[2Mrc=%)_)JYk6aE%M`6OcZ"EBsCaKqa82k`4lX&(u<%'^aC0]fRJ4<0>nI(dY*c#FA3R8&O^&F^.UJC`=`qLU:)hjF2F%=""U@;4VPpdgC%T3^AKiA^l];0,1@B:I:s0tUdT`]W="k3fu,I`W?M'r31H_>Fp5>$n(F`4,ZV$$VnCg!NK.-B2d#qFjr-W6i>WKZ7?8NjXMl2ccc[%+-#T&8258&n3):!XDl:hrIY/$4D#2*g+)ePf:"1hcf(h:MQaqP\(r6LISF^&Rs>TIe0_aSc`f(D\,@]plQT?u7T7;)F1$nKq'p!f%.Os0fXXP+%-6#?]QN31mB*(K$?k5i=&q]"<j_dc&LTIfNoe.,N#0+T_jT<h"NQ6nKq.nTsmsA+pl!dCJkpt-9\pDBn.`BNo&K`lT%W>$`5MoHRA^Xp50DD8^F=DF$[j_iDO%TGQ\G[,:*'6PrcWU^\XpqB0[#aNK&CuBBOn,ri]Vk,q/3*_5H9MD&Xd&jj3)%V^Ecph7&%VdRAZ?tf1ZG(i\82+Vs1MbSqZ1p8)([b5t<.+%DopE'?7;"1KZ!;-M=Mc5`,W'pc>7uN&biNJ+AEtgJ)cVtU7:H`%8k):E-]GX_Y%W)IkKHa,tj*X,E+p)e\"=HT7aS?"k_']>Ou-m`!B_9n2Rp<9EY_&&_+D(@#ZYb?^?73A][&3N-\OcjPrf)lg(i6f$8![#:`$4M1V%poCC7^GJHBfG@UCT[>^%ibc>;2t1FWPcY83(@FY)\e#:K06:-@X\)PUT:l=D1&"[Qg^VK;gRbnI]/<pELPo6-X5J91We@p-1DNe?%."Z#M*aU\D.s@[DYoHNsI8\&PQDTO5rcb<AibL9C1(5O$bDW"GC:nO@o\$"&n@n:c2r7qBeGEtq>ii?Ld]G,c/!Nua^rhpK.T^p7%X1sW.h!uB=Ot"dIYNd.Wd9VFFl<f`$0rrZ'rF_ts7265CQ:.b$R!gp57\R)Ka8d-ZcSeg6Q"JL0j4+JBNS.A&[3E4@IjV5AaN_QN%&XBt4\f'2Bn]fr;fl]]L*i>>:GgdsE7(6S23Kb+mn8[EFaPiS:1ZCF(L$%39TrY8fLe@:^kicR)V">EJMl;VpiuhZ.A*YW,9*P)g%a?;YFQ1Z[7_Eu.TN.I(kLPe_'M]p5n)/PtJrSj)FZ;./rpUQ@__nK`j<jOpch1:6NRja2Kj+:Jja2^(cqk;cXZ*H&B,f@,J]%n^&%3c>arA)DGX*sMOQC9qUJ2V[>R0<WGiXP9!uS&;P`Ya,u9'Hmn\h>G_HXOoY@Qk#>IU>LSXC0)VF<&=At@ch9KT"+-'*TC'?+nmBc%n2k)S(?OU[,BH-,2ImHQqJ\-UG[H/[#qXie'-prg$Lbm<Tp<=He_M[_ILH`bQ21pKPI!Qhbhn"6V38\GA75&%#f4`<@o51<PW&7<%YqEmA+!0Nh(rgNr>CN[U;*Ei'AlO?u7-gX(L8+<n&sXLAh`I)j9k;i[pCSeonWdX\L<r/Fo&X6H7,1C)j$Ibcrf"ko4T*ug%Y(?3%EVjUY&'*oUL,)%Z]"I@Pf^18.m1kZk=9L;4rCJHh%4;\^E,$:&[s(b`W'cOg\?6K3iFsYa]SgE(U_R^Z*c>:R\`7CHO"=@C"?D#M%/t1plUX'clTScj/Y@`Jr@`"o*0<="S\Tk'/gVNIt+r6&[%i&3uI7BMtCe'9GjK=ATec+-S&Q,Pb4tsu]$**+UgHL+M&;0%M<tR&.%Z:jdMKaS32e-Qp;9'qZH(X*bq0+/&Pf]'b:Hd[RYYEonT;,t,6d6_pl\&'HVi-[aA-^/p;h'h5V$HV.UBE?uiUV[1m(*s06-/l_%%/;9!/cU'!a0"MWE;RQsq3T5RK(g*JmMOE31c45/h?UOVBLXheBqKN-UWJotfe@FBJL^G2nrNMCSPXWp-+NWnd$I6mT=J.aMbEB]T%N9G1u<AAY^3ZTI0PhtFqdX2[e9C5R"T'`.H-a1GnE9I@pOWg)`M_P]S<[ekY=\91Q#:>I5ieOLPmghJ]=57_L\`2J"J9c.+6KpS3%PB5`1fdX/p(rWCAN#^>=6l'-Wc3A5mO>?[JihTC2*Mi3567n#u8&iIi_IXY5q8fbF$BcQ[<=*,*>DbI![RVS/6C=_$:`,]Y6_c%J%^C_)WQFYh-!h_V+7-Qh6P#pZ:+J$j8DXS$pp:.^d&*X9fS()3tZ?e&b#'==6ZuW#5>3l.8>.K3Laa(FJA$'$0%aH1Wgr^)3o$/ho%b+hQ=[rMT*a@f/9[rOj,?d'ccEbmBhk*;*<KPs$@QXOeF8X15;/W&Pu)_fCm:Lh-N?.>AKl4Ds;i'T_!H+'MhEY@\1<u(-KT9T.j%i:[.D'1?\K;9[mpNqnJq5pEeVbh^qY?Jj@q6$+K4i2I]kp<mXTFAL-"B%O8)ZA0"dPS^[d?3Z1eF7$bCSH_b^IWi*3Jlo!G?mpia%mS-]*;P(!3U-+fM[N_auSSK];cj*kp;'V3/c20&:gf:Em?EPEYOEHNQ!Ko-!C?/3JE=4:UQ:'1D:#&1QBb`1n<Y<VSFVlYUcu?J2%1gUWt3"l'%:aE`ZihXROC17CRQhdPr8_&$E\oCOaNt2biKhU_,VN;+k+1_.C8PJbL&-]21LpX'amF*?l16DX>'%)XV)X/9uEl;si%"N2a&dI21Q"H7cA*bB"-0eBtO\GKa1XpS,KY6eXen`UIqbN[XRSfriaQpI28S*tT>NK4'c4b?eNW*XFKcF7gA6h?H9#6b.<;G)^R%V`4U.nEqfu5WE$Xk&-bbro&AfT*(c9*.^,s.)K<eDo\68fuaSlNom!r,$*\qig[>[,XM77W6.$Ve-CAk"@P^XcS@g0lAIqGiPT#b%,1YHiVR#^BpZ2sm?fErl37<ZTLG\F,s7-RtOXdFR[hMj'=[)s:,ae/$01+VGP!JL&f4&+)k^i50pcdUd7u7:F7W'hmSgIB*Q;g;;%/5CE3#bFujm0P-mUl#/e/>.qQWJ]'945;;19<'1\o\D#Bo;Y@[-BsCC`X%KZ=%fBCl!k+%,mu+IiNP)P/?5#o\*'!=rQCWBZ)!3X%5o<g$/QkUn_)hTOC<8e7$0o]SC'dg2l9dY0,drK(7C<92had&Ne<6,I/'#,Zp+LCWYF/QL2[3H^A=me#O;>--]Y)0WTc&,9[:CGW%`%%pNW$Pe0Q>4N.8dUp[QV^<j;G&dXRkCS(/>SM<3OYSa,33[2M^]s@W11cU&i6A;&+=llc'/ht0$\2<]H,A"-#Z=-5L6U-@4.m>%j+gc2/QkUn6%)m2/QkUn_1#$YC'e^.,H>M#S;1WjF<nN,;eK39k`c]/L%c[IViY/O`3%N%_\`rmKIS9\QPW2O<funH)HeR:s-k'm%n*O09^)^uPogN<_SPT:c4X>r286!!MHe(boG*&>!KV,Am!l"2i'GQiK7AAp%9QO'4IF6&7Sg"bT38_e(%j;]YbgiAkngrVF6q2^r%5hZPa(KFfs<Fg8KZB4,]e5)WDNM)sDCV3TifWW\2aKC&>5-O:aG"!pV'GFLo-7oZ(<Fd0V9@=Yd<OSb&,#Tc5MdVAhC+5\lF?P3X%e*[e_"\9UDE2k>!9Em[LU_qRA\B[l2.D5,H8iYi4iUc^Jeb9bH![UbL3HfY/Aa;!OU_q-;K_9p!]S%NBTA?+^4"#!#&$tHBYO)E;%_Bs(d>mi_!p#Su*'SAY:j-#8jo"%8I6(iK%N(>Z/']L3=]1=X^'TZTK;Bep&&Ldp8U;W/'(+CfNg/b!d":CR9G"@e'NCXB!l5JjF%XqNQCX(s0X3XVBiYmr?SePQnBnl`&^Bih>m>"U)^-.0-nMkLXa0!?l:c_^KOINS.*f;Bj(ik;2ao&hNdA'NFFTGJ<(o:3&N4%Va2%cU@=CUf'N-<'HAQj*KqqUf&+&(g[ua`Jaq/(0OT/LSC/aqeh'lXpIH"`1j<LQ>=@2haW\$q$0L=[se8.<#::SIB=;k)I@)c(b@lJ%V-tC*WV4M%$cAbn9.UOa?PksdkA^WemF&6#IV4rn*jS5aKhRT\4c^[Tcte85k/;(DGpc3tJ-T;*C5.;0&\gG>C#7O#hH8=2>cUCM%FNrkG,9k)L:rp3b'.J3VbXSDt[1qWbrA$^oWN6mb8C-3e)5MVLiABG)_[,2QSt?-63Z1+dCLlTs8u`;(;rq'e1LZ]gX,E3pZZjSp%'>k-2lOkWNJV)3@>/*T_#S]tSCDSFi6(fVRZE73((^,`q'EIt[\@b@h%aB%.5u4@%7=q&gWgH0OVJ)#>1KQ+%@*duSN2c`+%$jN,%j.A.#dt,$'Qg^Bt-)go]Xg&\n3_Kp*<Hj2Do1CG^mkhm;XbWW]BjMsRiqu's/f)cldVC5:MdXej,k+.f,)bVS`bnu4,=;(IZ@*;J%3Y!_>ILVM<Y[&'.!rKN[nFj3ma6D/DFNG[@j8S1Goue7a&pg[.Ld#-$QsY=:q<$il])+N;_9+SI;Z(fsY=,q>HMk)"lcA4;g"CW5%Q@$CH%#OjdD9o?;j730."eH:YZO8W%W;O10*c1PsFlX8RGd\[[boW@&8$s!%-agRD-O'6u"D05tpe\:%[A#U,)JK+4OP-c=5li.5%SH0&WcBkho-cP+ilUtC!P7fWq;NrSCCL>5=#`8"]0I?F_4XkBQH?+1,Km[Ae/i\\)Bc!V1&8Z!ZMLq"$6*<Kcp(g7<'GPQA(I9Cn%oVhu:3[q3f4ZZF;0PR%X//3NC,a))8)+WIVp]%c`=@GLfI+skTa1j1RhF'O&QU][NS3'3oc`8G58Ga\I'U,d/XV(jHWO)"OV9u4h%o=g-:'bhJL#s6IB"U2l!H@d@cQ;pbE32=_f4n0h[<RSNC!djr'DGX.4e4QG8nbb7["m%$!F<G2i`?OiiB[r=6,\lToU\J88+AV/3%/0#VY'4hsuSUr'0I_+cD(6/jI`_*'*H5DSNbJkHkJ"6tf+oS^Oa7$NW4Go"dQN>@bX((mom9O-=f1%Mo<aS0ogt?tcMhT=8l1SVa%N\0e%hmp^dlHUI*F&'JGLRt#sl\N)lgYFAIBYC*'=KVQ)U%JU3#?eB84Vl"#&d?<'[t9"nCB)pKDs-+c,.Yu@[5\\;7:M#^5#4j1%mc)#`Ee$6.oT>VAe<anSf#2c]7ALKdmgI+jbUJC2-Q>etV:&*[2D*$:mq!bt1.[c1Gle+,7BH0tC,I`7@'8k&*C&RMO5Jlq6KES3%A$2hX_5/ung1#bPX-gs).,qUt25KS@l6tpYnfh7pc3/+F6m6@*CJ*9be56dsN*8id.]pTAHSF%Ia-P1P+q$D.=C`5u;UUc>%GpeS%b!PSi4FtSV,M3j29_YVl^b:W?:gI-fMPX[GT(MESe:Z$0"oPZG7+7hm2&q=QN$t:N'>2dWel).F-q;u8nPLhc#0T31Co\ls`Q&)5%Wip;B2C@UD2u$!U<1kRNE:6Wq\,$9:E;Y.kU-:/HO*<Bh/eu$<Z#FM]2C9q!lWH3Mn1RklKULF[)`PM%Ej:JQ,R.Eom%nlg:EGrb%:WOmHCN5o,Gs?gE8S4*mH'2L[_QiAjiSGY#0@UbAD;c<R>\3(_6(3tc_XYHa=oV'J5G$eA=&1OJDP4Nq;5Fl^_7^6i_PIkerq-SI%@$ToV>hU!GrQ@jnoJlb_L%o]f[\3AeTV3=EoA]K.B,h+q(LkZgI$bl.RqX3O-EF]afc]0<2\EC.>6T#YgY*GFT7,5FoVVsFk(cJj%45/49n._LqpkYpt]#&78>8'?VML;r-MH>$5OBQ[Yi4a+M,4X'oMg^"iUgV5^2<r,1m6a)0;`d<(9d:"^is$]-R]g;jpj4->\_-\A%42*].2^J8TnSo4/G2DEsalJ@6!q[[gKQ-=oKbgD>L9f>s-=+25!USd(Ibg+=e`A+]GjY/7XmN&Z$/U"?33.Ei=ARe6R@SsZGs-F7%USqaSXR=kYMnGU2G'm0-eTqc.b@0[5Hf-fA)qjI,^@YuYah/YPrKqIi5eKDQ<JGB3>hh!,=n<X%7DSUCpcfO.*t0diK+4[A[_Abj%Ufo_%_%_&=3'^sF!_pZj_2g5m6RR^%(a,:^:e_7CB#X/n9FZ>\g#e<_$<oL(&A^Yr"V^&-G1spHd(\?iH]/B48P\g!mQjbA.:+oe%d20Z_n5f?;n`ALj*!r781`sI'SM$_7f]sr,'#n6N8JU?TO:-O7YL0OS31l*=bP@Lb==mSg`b/s+hE*W:X;GR1od:)Ua,1M#DKMud%;4XUNd7@N\j&,gW47WHp+.Qae&An_b`Z#[W0a9E",Qg@_QoWl!VVmt$^"DV7?QP]o\XpHjBAZDpgC7NbXc8#,>O)m&TIAY,;Rc3l%%bUhS2VFd&^BNhtWeu=2ER2VpO2l1.J@n418l1^5XkDI[H5l(5jU\c<et%>-YJUJf$c^YmI_d=ncXB(4,#q7Pb;923-5-f+TP<^+%)6#o196`ZAJQ+[)d7XaC!==B22l7Ls/o5gMQX:j*@Wjt7"aA*QUb(sb>Flgcnm.n#GMr&'e89J_Q(Qbn+3qVB+PZ,M%(moH4#'B[%=\o243(!]4Y/g0^"`nHJ*rgOeMer)\H"c[g5OA:[p2/ls)g7"pbj,u(62Z%a*b1D!G;umL.cKTL+Vd=WZ6f,A(15Ac-;ZjtkFh_q%)ll.*e)_cLS0R)k-p">_(Df6WReXPb=ek1H(c)MkbA^InK._%;-[I<INdc7ZU[-k:?sRJ.3.PI0HO9.0:cAT`LtVYL;Y#6@PtnIU%\KYD[lrTM^@DSkb/\OX7G(iJZ2.0N2_CiMj6<MC*G)jM+bf04;2'U5V_Ve`=@V;+?W6HecMV3!Y``J1XkMV.jQt7#l?*D(:;YRlU%j;!82B/bFR`kN9jg$E+/=?))\%[pJm=bZm[%^W=_%^6Ot:X/YZRiRH^I-I?;U%M^$a=CLAX)Mt<*OZ2G/SR&X]=[p@_FM=?h($6Y%o-D!.%rHK?h(Eba(@0iDJBHr\Dg$Xf+l8;\8E0G:?6OOjK5MLZ8Dk2Sl]Nm(E*Ge@-G>0T=]S[ZA.4\7ct!m.SgqIu"gV[>-#n8B%)+\Q"lsL\]M1<'-$,YgIO>M%B>$;k)9'oE/_;Sm.Q/*DY<#?U?0Is\RMu09\P7om&#3Unm]LA"W\d:BuFu;Jmm$,2*/0*MXg\kh5%lP1iQJV)Llf.U#-N_TGnefmON[*q7JZ@frd>E7XdUii.IBTKdA]UpSr)_ujFJfE6b[$-+bq]^9$,hT1Mc^jQhZ?EPVrVh'iJQqc_%ImRW:72"i0[0+.5YN9`I$66[_#?DK1f_h/^%TMnqR9K0&]CJ,jW]oEFh`_;+r*WHO`/lkGLVd%RIWl]%59^5.oe"p;Pt`F3KfA"B%F#A(JbaL[<kBjnd!qVErN\iI@e9?J=<bu8HJfqCCF^AAP!DpCbWj9ClM]o7SYa=&^,&>H_C?M>@(65KPFl?7RBM-aL15cNPOgU'a%'%a^4%HggscB2kn:R&\m8KjdX:We;7_n^IK_6J>WC*K@.*(NG42:s0l;T*q,ifH+e\6P$0B!i@!Vij'H1dZ"[Xt-I%dS0caP1"3a%\,GgQqR8nn=DTVemu(-Ojb5!>Q^q>gApl"Qh(6+IX>-[)dR-YP+n\%QO;>;PBBFpDVaD74E2n[ogWI)Pi)C4=GSSf<\ZFoDZ<2`:%gKaGt"R!JhW!?B;Mp5g_&s2LB-8i[&ZJ)El70p7P5NM@cZ?3d#DKAr(bc@FYL<X<*E;Jfa'0,/kib1$SY&KY2.MXmYj[T4Hle^X:%@,g*aEADQ82K<]cc2+n/d$cp!>L1TW.`f\6fu-1Y\8f9Ln!8+2icdru\%BO3QT&mm3m8[<8uDHP]ofY,M1au>3.fDbURU49cQ\l#%GagWHEPN05;A+TKPFA>)"-LK.><-7l>&WJTYr=2BZAE)M+`ZUhrOThW6b4sk.)2k<l"VnlfSjW^jSYJk<Vd<?_lT8_UPVsT2KDhV%EJutVlmT+lVLeR:-4U$j@qO^K-aE)@.[otIf:4t%hm%$LNL1J:EAW,nQOChD-B>Z5,c@(jJ2+`0=8qdPfNp#VaC-Dj9L_1t.GL:N%8\UIXjQTDgbf#)1(Mr1!=3_W>/&eWIUL3*`Wmr/Qc"R*\HljK*TFghC8qBUBaqnF6qtY+S`e-AjcjTqC0>^qi*EM?GiFVQp+Z[24%beKU'T#RD_.A%^?quV8&f_&p6V]^@Y$!THJONWt^#BTg'\@'*O:8B?p69dX4UV3+7N8QnI!ZL2*n&g8gm=W'dWB:H%+5HF(jZulC%i:GkodgE!u'\TL8Ym8?@K:W,n23`G2:#YYY[&#m@BHN2]Yf$BA9OmU4=P\al_E]V6,>6+6gAFS!QQ]8&3T>Tq0-^foCpD@Xb:"gf%9&u\39+LK!@>ng'<ok=YT[gIlT6Oi$`TebF!F5Y\@+^1t,'Y<6+@^#1$,(,(0q8Tb1A+>QQ`b@<%T^C;!Q(e,R+lq'CZ0@c]Sc6I%34t6CAWne7!&7T-O4QQfX7[h`gE4un^e!oD.1*gnqhK=b?:,JpTlL^`o?0:jA.Xtf+n@tc>b\uZ[fZLcH[6tV:bgUI;tS/,dAf*%%fEo=:X6bYAct.V6Ji`sY9bbosMOCb;%PpQ9G_fNTE54!0<UaRUKiA%F*Vj#4XRundS.N\;[)1"&^DcE%9VWl\%,")nXM/)IV[8P2%C,7sPeOXa`2Mn%mFu.F,iaR[7,l&0+^EC(M7!sH.&7QcS&BY'?MjeThXDkg:7#(#9NT6hs$-^:7]Tuo,a9Wh'2/$MV848iFeIV\P%6VgTTVS'4Ub>Fjt"`NaBf'A:@a5,)0^`3"6H",GVcef5d_pZ'D\`s$9=r=\[rQ\g99m^C'l[6)i98-,Vf^="%`#52;F0AHC7C9@^%8Gl$;,?=`BCgJ,=$6NOOckq*C'IsD"G)R,#?g-ulh\SD%9_lP4?1d@Z,O,Z]dau5&ksN9'iD'PM4??8o<Z`U\dpo-P\0#uL%?pN1%f/@<#E1@rsI^7q[g%!H]C2t_(p@"cQiFDeg3.?>;Y^KM4a<%_X!,>IQ2<;['+N,;SI4<D`2!4-$_&'h4/L'-A++/W1@fuRO$m0gI%fR!GF([Ui*I?DA-ZS0gcVEjnI)nDh%4d*'EV,5boV@,fAQnfRarFa!n3sTn"+5@N<hXK]b51X@:)ta:fJk0&%,q:s9gHh9%3(,\i%+?/jg+PTLfGql0kcA4JM3BBSM`WI\0+DW*]Ae3>%)ZJ)WWeX)Q/aE[(RG&g2</PE3]Za]CfRk*?50u3KCji%UCK`>4KlCJM$=HZa%G.A;ad>AK[McdMpM_W8g3<pmC#cUVu.D!/,Yd?a^mkdH`\B'Gu8=21175^ed%F5ll>h#LX&ChaRXuJC3)=em(E;;c!7JnosP48ot%7>#DsWeQ@BO-Gnmg1^FIWcOGJ?@s?qY=.WF`b;>+=B=CQH?T@hnLA-OT?"]oNOPF7=5uIDPropqDmG"BbY:FlC%mmMB-GoRkUMe!%W0#WCG'odeYVKSql9K&i@7^a8&VVA'e_%CL3`K4dgqkn5+"PrFrp/A`,H@:bB3sLM4;WGhL$^VD"7IaVO+^Yd,ZPsIFof6_nV)U`%)\][;E\U^s;l/Xf:6t0EM&1O=ct'+r06Uk'Tug3'.Z'lS2d%Vb!2aJj-GUtMis+tJ@OWg#rKnT(?gccnCU^)f'>9!?%nhVB!pcnT%kFAo:*9>IuMC"7"7tV(<Wt_;fkj>!jmJEHBnJp]g/YN/'5PD%\C4$n;B$SK=6Y&YS55C%"r_C@hV#U/5gDfAR_ThtE)rTTurq-*Z%:[DQ9UA`Zh5/g$Ns6\.).Thb;IekQJorF_*U\93,c_#AblS=FsrqkUJ%%gb=S<u_Po0M]Wo37jb_C*'N$GQPtSgq7anq@UUMCUG4%=]G0fI$[=:/1)/ic"4$Po7+IYa<.ST$/5FW(XW0X?U+=@5PrQ8ZjFF;[Wi4HgYV\VGR8Pq:03)IrGV]YIg.R]s6hn=r:D(ZqpXG\%2t$]h%B=[5rk2*UmVdP*_-H<uHiBo4HJq%/48oC:gi#!gH]m$nhRNT>0ANI4qaoXoRQlK;rhr?nTDmp?s46'o"SDkRi8Wmk,_F))%iNM.Z8H)D=n@?mEdn_*>:Ohpn6GN%S71^PH,)@jk&ZkKYG7!4=Idr')5AqNhm^%EBZP_>%GjeE0_In#5s*FM.J,C(8nFHR.3Y!c@%ddKM[T1pY$+%T_SRnpbuiZE[FWF)Z_<u(Yf5J?ej_00+5r$ibgr28F0,C]W>n8OP+0DLrBWu6Eefh_S']./&oPs;a80>>+!b;Wp2%J2#Eds*B+hopYEQc[MNQoe`Hske<*T`Ut"tIoaP/W8KGN?gh%n)RK=H'#"&2.sS-L^S$H7b4XBGiJX?+biOY-7hm,P2_IbbmsPTc%hL+nWE:L(&r\*Prn,<6XWe0e#5>KZXps.MZC.[bn),tB1o5R93bl(UC>]/8&,g)aWo%sDbf@$\WhgYGQ?i>RWbPjSqrgSBhs'du1%)lr]WkEl3'.Gs66q-21SDCo\H0"i'ah$T9Sm,n];/)PXJ3;r`Hp[2+3<8Z:Eqis5*.mO"!a&t0FN'184ePH+j#JX:q^A@hq%udc#%D:,j%Wp/R7&7b'pMnf/7-\&fIs*$\%et&\#5CO@)s290^f@.h*qsXR$bHEe`^Ycg$4C(1K7UGfq>5AqBkPrRm:U/:21]K:\pY&Dm%#A;t5r.LuDn'VOB3"J7!Da/]]"ZrlnhdnCTfahu:QesY*iH81XZW8$;h@>A1rV"il\cQ1^m!?WO4U>DB6,>4(^k8Gp!?QRN]CZWH%k<GJ$UV6Y&g_]H^Z*uAop&:Sn2rLs&rfC\Tn/m,U`?4W*V^(&0YPM1AF+!(RT;%h8:G9nVrUcjWHiBYOXE2692330qIa#'49`Jh\%Vp;JpmOta(2neXoqpB%/aaQ#UVN8"W=U'*MhDbFZLT*Fkf/4nhq*DM5552HXCu:1d^]2PsX_Q&@jo:l_e6.790_r@gY<hcH-5Kn+%]1tqIq6Rj2_N/&Qo]a^%q=jpglcYjrF(8,*"YoM#r8(Mir;1La51Ok(@e=0^ps$#B_<^E=o1,GQnD?J#%tFM,rSZ!T2pYhXNS_\m%1IL#+J#?\!rFL*f`9.=F8)Jb[]F`uuijCmrqZ@9(Da3Od]Dm!o\A"MAQi-RJYQ+3;?^15-=JW\/h0-C:q6?Li^UM5+o']l)_]ug@%hu;[)_6FPjE0i<P19E\4mE9f*A*O:2"SA'pS5&IUOgF3(+.cj8ZbN6PkIl]6GYC8T`!XKKH[k^ba%p&(&2\W_=om;kR:!/hgWPfB%FgX()nTTHO2iHX10##(JiO6'Tk+B3]*WdD_o;c6rgOK(t&$CGM++N7i^\s?L5<Jl$&Y6I+XV#<Uir]5Is7sPkO3r<b)nu3i5P]lB%)W#l4P7Pfk5Q'3Ls7FI\^AEU+robGQo(DJM`t/4C9mXGO4!+E-ru^FYPipfVg*=utlIZ((c)4V!\*:T8?iS6;:O`%jci<=W^@Vrn%s4KX7o2!*pYQ+.dZPVl0^@Cl7II0[G5PoWerU(p!It.?p#<0\I+1WIX]m'92^AHjX]5N_=T7?e9X8heRhr"@Tj,ZEO0_(ns7kjK.%iBJB?s7,mE+!7<Yo<uC3`nS9(?cUnC>\3ooc24L7QTWRh[^?&-,>5eDNoO]:o(L+B`]RTt3la<r=1KD;eaqf[J%mC/l'Trk1:aD(%oo/IFdQ@@+Ie2qc5C)kF2s8pk^%_6(^<J"%`IH,c8&!Vma%JSAWsKo6S6e[3eBlP;1643I5s_at^TQg9`:<OS*oHe9j53)8bn''8%j6\clE;s9opqo%_rqFHG^@JG1]VC2l?[_dGGC96al*j^,06?:(b1h]Qqs8UH5e2Wn?[_q62=/64D#C3'r+4UP?c-(RD]CFn33m*B%V3[HXQB`=E8e,l6ZTYco,ccI6=#H5_E,P&DK1K#FM>%pSZh%@G*c&X_p4LQMH+?*\1Ol78pX'Mdp6-TrnGds5o@jd>r7O=7l[L&U%hqu)Oq>OtX"$_%Z@fe7Pr5B;rD-Y]B?HVW[Y"6PbM8(OPjhHK)<fWMGDX<6km#q.EZ<R?%f^6(1#5=*_Oc3QY23ga)oqeP2RJ$*>%d!hf<r;=Z]CRo)";@pl'YIRg$90[bXidL'q]YA!0qJWH$FY8YdXU3-f9%m3p\ZC'Gqk`")IUd5AE*C`[[KYdD:!CT->-;54Ab.k3%ZLe_-@n&=o)eldQZ^fV/)tfP4j8#0[j#LFln+S_lG&O-rH5iFO9==<+a)@u?\W3"SmN"mQXc\pu)L8+WEfEc-\ON1"8U)P"1N<As%QCbk.ge5E;-K1;ipmp^J=0:h[b4]<of`+2&Q2ftBB^ZHhh]I9:>IlZ4@du`g>K#<X3(Z4\rS#gb.$<:pV=g0rD\<h&%@HrNS8ClF%3EA#4@%Ff@BifC+=3ejOlh"F:c-DZa=4)q,a-Eh=PmfQ$fPE3Nf9O#(k&i$@g9,l!76@crH$ifNAl(ChXfAi/;H@Y0H-+=uK/Pt$%?G"q@6\MRfaj"ar>PO\rjnS$No!,_G'fr0UKWr"XLKZPXal<-;YLE1\08[:QZ>;sH*Pq9YjU5dg)f<&KW>,Lt>CA<gGof]gT"3'O%[,<r5EXU?sT4#-S0a]^hZC)`B%rQ!kFl8+Z2dr9pW)J:0K@skSnr1k4".aqAo?#`)U9*T*FabM/9p)4aZ-#j!I96F+E3oD.h&2I%%<&_schh+Xhid;rHTcPo[TEUO=@X-6(C5;<!!>/pa\kfaF>+R450RliTn3IEo@[217d+]O;O$C)Z+/]\^JmA]Gb$T`0<jbB;FmGc<%<f>VQ+i;s([TT`r`<R\+4iD`&(n5P_7U(o6Aolfm(D9+k`oQps_NnFcaVFHRLAZ\4=WCO(*u(=p=)teCGerj<\QRJ'"`l`*=X?%t%75`+h?CWCG6KG+TiadJ26?#K8@+7l`BRA$8aH7B2bJf"WR8pdam7\dL2<>"VD\aFmE6R^s?8(:_<),HRL)a0QVA^///W$7%K<8[?%0>E#K1V$.V/U4CfV9h/^SJWe1#cC&oI8d7>>ocWdTQ)%EC4PkIh[J_<a1)0o,\g6qlDE=C*Uf@O:cFqd#0Q)%0WK/Y3VEO3<#_VM%a^2uYghc_H:lU=BX0QVqSse#Pj3f_n%ij.j4k%Bie2j!`WG),.KcN?WfB2g*RR)`>cU]ZP/*hn@l.UcK1Up\Ek:7FujCgbFEfXt:%:e^,TVO_*l\n.DsBX/38:0.<JU"aJ)Ui&3Gep.Cb>p#T`0A"dtBT(OKqdB+`$Y^ZRDp,;\8B-BYC1nY3^'>VNaV1..FPik(+k.9E%S4T1VbI*a$B-bS4I])h>b[tm/!);YmgG3*B`TbTQp;@1i+D20-<qPd4G,\joL\ttVS5:hC1FDaP9-3r+Ff,DL_eY1`UL>pWB='aj%"[,Vc6I.c_`7bRn4X/!2%t<C[]Gcq-[G^]N[8>Q1;GChnL7S<sT'98poZTEA)9PcjoV1aPZ-`_L;mkGK'babt]h@Ukl:Ve#<?ou,%Z'j^F@($Uh(\ZP7gQ@G;#Kc1A/c2koIiHL3+mm1o13V6ZBR:LA2$A6&%lLj%Mq=gm2!uU17Ro,dKS$)[?LgD8b`:.nZ*1:<(mWc7%M<Ub@boBn=R;ZK@SGEH>9soZVlD>o308,1u$&,_;lT)HefB=.<lD_@)_6bLrJlgG27H4b&'FhLWPBt4o_'=ra:M?1%bpnVhUOCdb%dYu1K8620pSm'Af`D\j=N\.3$Ft4LnN;3NA/4QOMMJb'a*7-cAkH0ZNW\9gA-^@JI=q&m4=e4&)fVtGIf?Hiekd7?n@Pr'<p;pf=%A'GZEK+R$@GF[/BB\`uSA*8a`)TVPNbF03X]II9i7*Y>B8n;;eWRgj#BoWAf9Nm.s(FQRbQP)9'Wk$MDW*Nb\l5A:HD9(Udo@AQB%Z-fk?Yq/o:$?!1pKAr<(KfYoMVH0,j/YhPQ`*STH'Q&3!DD%4t`*T`qh%Pc37,nS$K[987N9"UAZsKQb.4Q$87pF4O>3E^8,une$%WI1181Qe3S3cd?!Z[-)1G;bFTNq0(GciAc(?8e:-[H&XEd9oV@KLTuc/Eu!6#/=?7cM"Ws4K3n9b;fAnT:\qC;i9OelC!FVBETRc%:d-7i@G/'ifJf#;*PMeH]1LR:?6:FfSoJl54[\I=Q!$;P7$6h<H*-qqr0j92qc\F5+R#B>X9cXLHDceXanq=fM.Bah9du-][\S4Y%[rPeiVsZ:f<RGFP/7/-a%+_fshfLiiYLOn8kKZN>=1leSJ60QRgQRB5FZs/%kH:Yb^`ldT_]H0"]Q6ecU[cFj[!a.<l*k'"Y#uH@%Sg,,R?:JrWs)j?Lco.4qapLg;Ar/*CTHcIha%&]VL9_Yt;!1Zh%(eo9O-Nh<03\SdgG)VNfs&/*WgeatWHr#K:dc15gW#[rD.GA'%S^&9J)XAi"*"Pe]_[=]l(hX@O]5<d)&X+)sR&<i)"dUQ8Itaro&>']g0eC5=4s-^2bYD)(rB]IuJ[oGQ+_?S7SmF%\)=(A?P&*50%dWBB#BP<KZfWcciM'U+3TmC+KNFZ-T]75\WDX9auN)')Gi)/6^K(D9&:8=N;BUCLM5aR=dP/2b:'*,HhDHKN_$!!5cAGmu;*E8No%"7jq'Ymf>+<AqK0f)a1fE=Zj\W9T<W_N\E)_"6M0&Y9N>;O+6/aaET*biJR,2T@#dB\3;2#,hA3AO;VdP[=/K$B>BD7?[7gs%\'!%%;6^`/5u%NMq0<mfcN0X<6dTc4%Ar/#L)ET9\=lt.N\LRX3`RZq'oVjG#kP$)AG.H.aA)1al$*eLO+cWUrk(=D''0ueI`N7VFX9Z%ka5Nt))@I"C3m=:=.#fMi)cmk1am.68MlU8dFKL<GmkN?#p#4(G49Sfm;m%)Xq8_NjK,@aAeWCE$8ka=)JX`7<`UW;G,'%hDZWZ:%78pNZgXu/%co)&Sg0,ad<_mQgPq/0n,g$m1^3u+oAd0R$Uc+8Kb,.^le1,rF;8,#[C<<RM*PH=H&'HnNZF')GckMWJ:'Y(RZo/eB%R1E=ID[0&?nl/r&q/gAQ:$.>1Do@C=qDVkN9<%M6+QGerZN*XAmCklBY*V__Rd[p-%EF,&aqj,RPHNs0@Z@;OA#^gAp.6PbUXT8`%$Yj]#&(X4F`ZuqY5fMG7["V/q#>ms24tjp@mLWU8BTBAe%doEK!M_AKJ:2sSJQ]Z:%95=7VsGk1b4=>V6(.)@+Iq(7O:D%TE[2;n%mMQlLX9hp`,F%(M21s!IM%OJ1,^o*Yf,$6AH[XjRP/;*l2KK`M`<-5d[_gZk2Yo\7,oSVf**tW75><u+FMM"2Es,rhZr=*7qc[!-%-ft)qL8m;H_'%9)/64&6F^'I*#M\hSrF6=jQ=PZ'g`'$NlCZ)FNr$"l)511KRV6fh8(S@ZYDbXsb@P1j:md]t/Sid:^(ZKeVEu/k%gAeT*%jIl;j3^B'\\UhEeT?Ej3jkl"75Lm@HMZgG6nCj;b39.@P@0Xolm_.mC>Z*TAa#VKp68*'-A5k?C<-g7NFs>CX@fWHbL7!!%7h_d?)6ct\l)Fq.A:Z.ghY?@XTET1_&m_*A[X$Zk/MthrdGAdL;1j"kad^tVI3.,Hp-8L#g.\o'40(6;*]&:&L4.2'g7Wgsp8T=.%_5`9]Wp+cYk_YWqD,`]7Ad6B%B0hEOBGu_b*Atek<0<^0+%4(1noQ+1"E>o);[3_/YQd\A;^\roWkuG+,!"RhT`F;,a/V\n7q90(%C[+e&6/i4s&p6*$8VNAL':^47\tq^MeE02*NOMhm-2dbb[+>iQnG$7DU+$jr8RI8^T:K<`,Eam_("O)=EJk(/'+YDrL`sGa2%t8.%B^@_6/[u2GK:/i4iHG(UDae@t?jiZIC:!3Xd8M=Wg*-M-b/UmBSM#/':jT"P=n8>fM,R!l;W$g_W#AmF3eP'L,mHl\p1stjX#IPd%VFcmYM_c\OB9:`%,eWpI:f/mP\b(F]b8/O5QrL#O_*t(7fd`DL)J69(4RPn/KSHHeSTHs\i#YOddpPl)$!=PPQIYbH3uO0M+rR9!%h)S1N"00al+uX1V9keVed->c$iddS%)4a/M:to\R.M/O<.V`TAmX,$YN'1-o%:4[&2anL:%"1ROL4D>.f+BcTZiSL5dD?a>o0B):%!%5'q:+9`]BY*N+S[;)P82@Uu,<l\iUi_u2q/%\*ZUbSTCsJ\^@90>J7:V]EAHN=j4^XTDVnS(s=hBWN(<]AFq?D-3?"Fm.I#,Q/%g$<`"P2ZHf@6e7rFC9r[:$mHaAAC`Y*'.J1jWR<coT)@d=\Pt#<iOccm"q+U?nBFPQU//(>7Pt\%i$Rm)U%Z%-+YI(6q44t8XY)X%7c=i+0M^/6;*2'oL[FetF[@AZ3#t[p3fbi^J^CV9_=D_fEUJsbcdKP93BS$$E6q+W"7&6sLiie1"u6r9N5\LdMe/hKND>Q9$?r^K%?`!#?3/NZ]'BH+GLLj9p%.?Wqb&bYS_2-n-["^(8XGmhDQA[,?j+@P#BV^:K&c2V_K1L&(4:`:L:%N%U7`PrD_6+2E#95#qbrq_G%:2.24g#rQO>o#8W5$eK!dE\Daij<[OELtNOEr/2@SV$r8o_e>d'@?tQ@tZ#%0uRuB/S5`\YD!5s1pbZ@4(HBm6#X;?R4"'cg<P%A%!Eg5bG6iD-&fIgeDpMiVhncRs,GXdBB]#A:>HRbA7"j:p-.XE5>RhegF<!G=m=1)7,8UVB<.OIKQ9NM8PsLgoC*Vn(2s@c6W.JQK%98BT5L[oFOJ\_&FUk1]I%T).A1VNY;6HVW^4E*ob$k^X.QCrs`Ub"eD($Wq1?%`\Z(-=s6WJbk'8;u9i:)hP()3d,8SBf/R^hI9E%PUtiDX390Gg8g+[B]:&*OB]j?V[+^0PdOf&9Uj_aKF>2@KeME/0MFZ!SN]<4W?Qu3;!:93\,.J]<*gNk;A#tR("6E&2aJD9't&^Y%`0:Qm5p+L>SuR%CP4dK>TB^2"DlWGm3@>IU7"0^'Oj(f1MHV,9[?6FNC*QF*e7?WCL!I[=$4W4BE&Aj29kRT?_?)!0<haS+b?]]@%b3Y7njh<,ZrQ4s_j/7ud$K+T`jtdKt/is8mcHrP[+,$O;7g*1N'$=L5*==8D7Y1ie23NdHPmiD59b?7R<mue(EXnKdo,35eh.+9h%$+e14C5Kc*7jK$$U9\_IZK_["=dBRC16O"GL0oSaZ.OYMC:h=Ic!nXmT%Y/q:hYTlg4EIE[8L\1l_&"gGg-7rc%f%/7cVaE+r[6!%+kmD/1pF7/LQ7bsC8UMn91jp?ZG>Eml]ot&5.'Y6=.t/Iq#!ljJcmhW[&Th+1)*QF?"AZj.i5CHL:%')JD8%`9jI9L<;e>*983br%"TnX4;0b/p>I'r*lhUT-9[YmZjX^oFoC1gV>XY*j<goOi=XB&/7Z9-:+:GX#cp><JP,X(-*_"jfD2d'fT[7&_Tg3[bf)Emo,;YMI%fh[j5Al'g#m&6X4dYWoLrRA'@B):lUhoKc&fYsctmB\H`B)5(Uk;!du&P6<>@P,qfk#9H^gU0U_?4nb-V`$-l\S7KO/P__>l"0'#%#'4?h+7momL5U39g*3mXgrs.\p+-%eVod9eGfa*Tkq_ORa0h$<"b[ftH"]A#r#XR0Y`V<O9kJ[36sH>n7:c.aZQ(<*'Mh$<]p,4D%A>HkOU")0aVN)=B'HC/p'Xa%PDMAq,<\i5Mm3AoB)W;KX)2GcJ#W/tQJ%!6j#,NG'GUaLuaBUgX)!@T?C=-R1S;MhD!T"+BMGZAB%Z9,EH$JL8Rdb?FgBcVc;Hb]F)U0ub>Z<bQmB<8>g#$8\We=AlcGLZ0i8s[9sKK+&ECjsd1;HPKO6T(#=B?W*[3b#.#5\b<pFE,DF%?;C8B2Zk)dNIHV>,e#le##E.J?+lCT@1?aT$lCFLQ&XkC4X^-rAl&u17NY!3C'\=LapSImLJ:A@Ah%Y*>Hb5BC*S7#1IgXkUrS"c%,0A;YFeG"%T66Z@`%`\\$To1uM3KtH8\*i"=C4<!d"N[P(sC[%.0NknPD+EAJsV/Ti?BrsM**;?(Wjp,7A]rsT?m^EEj/l)Gd3Ni%h!J$7kVlSpVSOB$-.[lT+pe\g6a/FY7]@jB72O(+W\"T1'2F1^O"=Zrc6JJYdAn6sZq_WJm.hEG'3%O-mrh6p*9b4.Oted2PaEP>%-7VUp[DG'NDs9];7]'l&-Q12#_-ImLL:_)/TP;_%MVr=HG6C[H]LKg*;(W%k%S&@Hcm4KV]P&%LFU3BIjr]9R5TJGMhb-\ZS650#%Ld2(G-BSJ5&X]@uI7[(>#3FB3,W85ZDeYTpahGP@B24@8#qMG*<f.DcTg5X2N/Z[NCKVXMcrrb"Z[/(tLIt_+j[O3P8iK9c5"X:n%.t!M!`Ju-8Sn0,:#Q#T8A_k#4P.^D/mm3jbX3uf#;U7n^=_qG,DnCueW)7eoC'5n]Uhq>CM/Mij2#@.U.#:2%X71m`jq=?j#DY32%SSS@Oqs5lj#WY>q39O1]9q?)W?JRD@CnTn,,Xb3@T,JkFbXXg@3Q1&,5t[RqPPlqn(m%;*<6a)]?UsdXq[I/1$(Rf;aY8M[NEJ_>%fsp%u?bU.2P8)>5j\eKVm%`[;GD7(JR7g<&@MQ1GJH2Zaisl<EU2:fW8p&?qKIQ.*`RseBG"3Je,%Yoe(*r^HgdOVo^dFEA=%c,;%[Q0Q#(98`q]/ZI%k3;[YSH8l=I$D+.SZK,Je^s@H9EYL<+Q86s/3-^L6Lh.ERRXe"fqBAD8k.Tj]-tuj09'?cnBNrNQ/"P>7XDIT%RK7.:P)T#MTRn]A^63F]2NWbu,+E-gCl&4)0,fJ)5i=1@BCp[%3au^3'WPi*NT18L[Qtb8">4,9aY]X&jm&crK7Yek8@#R]/ZN]o%:[^f2A/Im\e0/''r!?)*,s$\&,+m'Z-$m1]"koN-82C%q.KV*<8fAsUe-hhbjR[N9MoL/il`F>IVt+im:pa5cF4q$]MgaW/$`jr<%`$0bg<+>]D_Tk!C.03mL3OE6.Ysd0bM`),%4[>D@OCpqMXEH/:cn?C]#[2g1K,;K;1dijV#H^]<SK^YD!rO*oYiHn(.F^OVPW$qq%MIj\_pH["pEc46h%Tu*".RL(qNM5mp<'>H=7:kZ,SDL,o0CGdN2Q+1o,3A_b^$'LGAjYBKle.-L!Rc[#`u=G5L\p>H-<=H]appDT%8,#N2,VL4FiQsIjU:(Z,`)ekR!@\VXfEb>`Vbhu0p]<u"djdh7&qhnsU6B,qKE*=,Td<)u77H#'An7R8SH3N=R@#0i)]4%e9jS%2%,qV7gL.b^U1FTHViL/aD*2%9DZ23G7MBpM(<mc:]>\_2(Z&K!n8VCU)LeRsGNJk)^'iGViVR([ahMq,G)U/s=cj\6\TmkB48\cSW%0Q)OjJM'0\?jP'7*1:?XgGVB^m!UTc8PYe^#to;Bllm.fWL4l2'#_K7RgqOeKE^1(9G0cN[F=OfZEZ6M=VN;aN9SKKVjbHQdA9%K%e@B^RomG5c#D+_<?]g5:7=l60bY_%+_Wf+A*iBb-VILLA5((g7btbNEIC*Yk&Tt^s4ErW0!J.I[&5K*j8Z!)G!+^t)fh>1Bp-]Vc%DA1h+[`-BO!/+VA"V?(OU-5,ujTdbF4`+YoMf*RtRW]mQ$_V4WQquBXP%Y`8Ad`l.d*[nL!'0gX5.Pls,iM7q=R6]a(F(=WfI40X%UQ%Yf;9[faj"7#n1a7C#5kIPXid@q.>J\1(*m@%.@;O>.[YG[h8/0k2Le)Pi/koR^&FPiMiC#Y)d?>$#THl+Io-F-?,S?G4[uMAh%8RQQgY=!;6adPKm!#B5%:_95Ze5A\ZP+e_N=AZ.T1(h^%5mb(?]>V\=)3us&gH&[)b.)"ka8lK!0hUk6EKt.2%&h,8!=E9^)>qG*%MC+8pSZE4XULMn"84hE.O<>jHoa"LU6=fF]@V,EkQc#1<FHdLsS(&l*eM.?>_gj#Z<6-Ihl!)tsnYMmmIVPH-N-[N.'<bs#kWp&g%*9rN.-+9]r?AT4$)Y$E6e^K=Uibe.f:#JDjiV'\s;EMF!'NB8pTu8CZT`o.\;UBkj.Q1%WlKZ]2EA@AXNjU$qD)>QWA(`<K=U#')%.ZreO>`+<>O6/9Ca:P3Ocsr%h,smg1B_5UL7km34r1)+!d<Rf`&ZB6_<`c5COG.,&Pf>04/\c^K908DWiekjD:d)1O,8Xc\"M)mZ%@\4i9j:BGNK>5fO84fqt#0C`4g`PU7=4SO%@[%.EY7[PJ7Sr37i'_T]D67_E.2b1i&Z*G$"[jfmBC]e=56`mIJ,+Mm*0VeXNa7\i%:^P"')mN"OSL%<.PM.?a8ON(!ag;s-Q8-4fm&[q64Q#dF6n2nOQC#LkU!Pi4[NefZ/Om.hDIU-ZpBncrIUjt.F``#0L5_C^O1Xl^%$E#^F8ZPfgY#rl*f2#M!%*Ca4je=GBN!"q[-/&s]VNp^O5416;jbpN%HTjEm,>#Xr7Y^GJ5S5/T.+]Kc[oL'7O[6h1N$LQijG'A:%2Ds\&YsH6RLt]ubR06!Z8dDuX<e[7cnjHO8pqUd0YU##4W:.6<85'Y%:MJ?3,(dTLLSqjV#U4_Y-JM7FIQ9EuTjJN$G0tC7"9EQu%K*!kW$'ZeWSR74AK'SeHC0tD;GSVM7V`<cC:&skL#Xq8sDTOEAlum%i+Ggsi.l7`3"kB>aX%LB31g>!F"]:c+#*!]%4hmiBLe0A0%QQ[i8?-OWEM1Y(H)Kg3-"g:<_)i.$o-^tltk5mCYTS*PAnL2=%_1c3IP1U)%a<X*]^M%$n75DC&<,c4XaIg6nX86B`Cj+C_YKU8t%Sp#^0"!qA]]IA:hNB9]C#c5?)T\j67djpVb1F,F^Ma=cu#R8uE8:o5[;Is>`&WXe@"k/\R$4'.2kB6oifO;$^j2?Up1m0X?8uFa_%9VX>B7ZuNsVM]YuX0Ncj5Hm<CI`TscWbh@UK@Dc`KbP0AeMAF@oZOHQiT!MgTomc5GcfPVk3l+M@D8b!+obY$LdFF$?L'B(;WMl.%93Q:_lrY6:O@7P'It_7Sg5R'fq[4%?o^$K-%JPtZTjO\e_Ma/4Z6f&IEnKb2j<3Gk-&DV--l/rf>=6VhQ9c[;Mrfi&@-7dXCG-+4%7s8-Lj(45b8_U/F@dYK:GsVX1,3DdYFAE3\+;:pn=[<)s)iYA/*28.,)(Xr#[h]89i(b&$#[h<a&_F;#'7.S,[+uc'.4SJ?k:]"a%plU%&5V1`h=2uG@9Zdh.qhi(`TeFE@,ET/+V#:e@*hcS+pO#qjJS&0O,/B3'Nu!^J8[PkQ7=Z5IHJXtH9)jE,]GD#qB#Sl,BETns%7>u8F287L5&Ek\</D@EK:HLCYEg'EtD#C]_WUpqhc9S58?sRQZOqE\4mg5O=P)N(PWe/e+&chdPL0tV5]uYM/]-"7?(EpShH)A,c%"YV6+<L_$t,Q_;_1VR&2Fls/>^U?71[#"$C@#SMi?"2eJi"0h60kJmiYhBg5FX?'r`TgT^k[@I[#^T@3\F714^R<UuKR0(33eO^A%)1=tuLLoC(JC5@i^C3pE2V[mZKX`1^9AefW8>)d+XHY!YM=-rg+Mb<!aXoTf_,?+QdVcFCH3PcV5c@<5O_X80+r!4jb(rF<E`l/+%=kN3O\)<taUj6#<:A+2YATOlr67(bb4X,/\Ch')-\<3dIbQ4C0%(d547e/._rP@2^A&'Qe`k%pdr;l8-gAqq,`"&LXilGFZZn"4o%[B;[?KfZNEgh#apn;%87*k8:KU`g",;K.L=oE^NP"<Q69c,:U,Luj7Bs%2AeHR'])DmNVheidDS13:EcM]6YA[h4%ab'S<*O6k#$%,id$5NatiHc*[`+P!dlkn?gq=H+rt'LcAkk[MRrEed?C>+l%lV.Bas7-4bAKlM;+7o4]7(@?'L7qOg7nRk.p]s4<&b;K"CLcK\mf%Y^MiZ9Im.\>NLcO.DI>%7X3tPTY`u*2MmRETXHT&2D%:d$&q)"et?pg:=+Y5ag0A.DFACb1r>71VT;&7e%?eF=!2;.33jSH1c#kI%(,%13&n&n>A;F%E>Cqh',1Ah8,Kg=37Z+;[FKX@8K=7a?oGu@=OUNS#501F`!%!q(S!VJZnDt`g1`"S[8CrYF.%H$?-a?,*N$K33%B&FCJ'$R%u5fkiecCegM%=qI$q4W1?Cj4TFnW5P`YTgS/EBqe4.U44$#Xd;VdkkHbW$3#%OQ]NmZC.A$n6kOU@"G]=@P*qS0c`%'%Z"0q$,EeG=Oc7Q')ABt"d4L(Ue\\A%6kR9,*uCdIVe(l:,,TgP@9Tq@N-*Ld:=LpPga68;'IZXJ=aOEE$iNu.U*ngU\<YhhT/,16%8Yk$@ZXsM(VNr)Y>"leu/@*$SYp-kU2Q1HGN<X;%fdL#M]BUW"I0M!b/RBAcAgDZHP)SW+^dr>DRf,"TL:(2Apdd.gc_lG^GbU=E%idqb6EM-d_$-b.h#tF#V9MdIN%O\1lKCgCAaOF+ZTOhMN-\dFH21-=N#9f&IG(q>W(\7VQi@(Fprb=6<d6a^cEq.-U3s*RD!qd3[%#r\']CDVSY`+'T"J\+BD^n>O#."(?5P_.OmINR9T?Z\h+L2?e5n/2%'*4L[O?<n%76\CN78"Y'/',/lR`Kq-$KXSMrjYA524t^UP%VW0f9#8n!41bdZa2QQn*QCRE2btp2#^mKA:Z"<FS$VgOEI2]A]9W,=ZjIbo>EG_HQ*Si47O=gkNf*jBD/?RLAI#(c6.ZTs`kt/d'%Sn1A:-^5FBbG]$W<"La:2fCI40NuX+(h1<YRJ-nq:QXt+=j'4s5;J@3"DFN<0CBqDlsW*7'KdV.EI>)D$nj\1gQo'#,MDL+0N5Y)%Odn,%>.o;@K.Ico\K`1l1;i]<FD$+:/q$k=M%^Lqn/TnW-uK=IWeM$4P$uP_F<EUM^k5kRX[.oM.bc[&*I30,:8>4\%H^kmf#Le\%k>mn43J53Dm\%5Q(:p2m-l7*89t>KlLJb*7^D,#7Fo54Q-eiHLS6#BIoM75WPWHgu5^*Do4*8^>]G[P3]\X8mmWf:B7/SDjWQXC9%9MfGe$$sm4,k'^.b8<q"nSJ[2BMl:>>a[)?!JMSbM\b3>OaMmuXE4Y[hc8nMd-Dj?rW$5(XFqVG2R1[PJFJ6G@!9uLoV,1`%oRLE%WUpB#KrB0rauY#Oq#d)KA*=itPk54EJ6_=M0O%uK70bOt5k=M9S$A$/.-VEWnoa=V4]Qn4CNP1(ZX\\YPXk-7!X?DRnP*%K,AUGK%<l?+'g1;REFisIp?-KU8&g]rWZjJ0+8ZqdDT@#>L,KVk`X=?ECPsL6WWC7h,FODCD[Qn%\g?kd.nWkB6qMZ7hKgL5V'"6+&r'"QV%-O9;bh+V3\9g6H?O(<fQg9NE25D):HL4(bCbYBCk$-,Q$7c@V11+bjL_*[?nkdF0K2k$?!!U*8$:sp0JTp:mf+i6%FB\[_bfDV,$%9%4EYaU:)HjC'*Bb8844Tl5*5Q;iHkPic,)DJI_n-uJdsjHsFb@%#:Tm2=X:E$irYPTj88WT2TbN`B+r?j"`t)?2snL)VISf@/W>%Um[O$!Jc21oIU9nnlo&^6l[s\Sj:RT\2b8r<XBg6-K5/9,D"]aA)c!HY:C]5RZML#Hr,Y?6J&-n6\\[fm58s)%m*%M)[d(56`3'Y%@_Wofa#_H9$psT*<u,ZiXQBP95')F/j=na9&XUc-i!Y#Q4bO;rfB&`[0rKj@Aik.PJGH0c?Zsg&VqmUkqKPJM@\$ogZ?IpQ3ApT>%/42?c%tR*:`]\l?)PrO,&gO#rk7;I36(`msUT:\YM\A_dj]AfO%T"osPuG4#e:Q*3$mbkM?U+mVI<m5LEq#:FV1F'kca@O2IY\tJ%(G,_;N6PnsXOcT4jn1JLG<Z1o=E_t\!biB@f_5+mHeC'/p3Zo'U>=5k.cE`/a)TMlZS-Sh]9MTg`Ap.L!X?PSM\gcsgKfS".#n<i%PHMu-@Yht$n)?2L".]Uk:iBRg]V:Nf2->h`XNC<"X\;j[##pM^6WMJVg452,lN;i0rA$NCb\A)'6\Z5s(LUt2PDuR5!qT:@=@9"9%Tp=_d'35m/l:CKMOHG*TDHl3*!Og/>(6_AS&3ZRfa!osW;!tM]/.+#X=?583%%_0f$IRTtg!eGM]qUnJ95>1pAFTHB717Ktb,u@7%7)8I3NBhn'Vf5"8,jFmGaFKas8>8b7l8[b-6W7TC]bR/r`k+e4fL<79c#OA?S&@(9EB>lg],,LWFCrmM;[F/4=St4dp,s+gJQ*(V%i%`<GE:L40BeNniBn'ltMb_'f0?3:P;i7eGU^X,7)p?:)DFVP&_.\YhNo[6Np4TT"IrJ9Q#Hp^)UP&MuXuR602!O)JX<;bDKoo*n%)F[1uJqma+1oY5IB4BAV<Q6t/aBXqBRrY<sUM)-mdrD\`p6N8NMLO122=3rPju6H,6(f[L1==:kmN`RB1t_.UJ[&AVQ0!2:E(:[s%kF5t(6M4;n4$4R1r9^6;IUFGc/n0;?ftB\mkr+$HNnRM`Q>g'3#YloC1l"b*)3g!!&Z^m9PYEDi/\?&G9Z@97j_.FEm;=&YQRZW;%10?\=q*5c$.?)_;<&HUKCa,Q?Y\Tl/[V_gZdTAM9r[sr8Zq/cAG>@eNWJP/N0eA3fi;j/qB_8Baq\+iW0bBT],1?V8%LJD/@u!)b%"F?*0TUESs1-BlFN7kNn-Zq-LFL1PE8]QVq$7u9$d'cV;P'Yc\iXVn9+"sUWAgk8B$`u5&k]Xi#0r>a<hV9Xe*5`D'3eLa"Tl577%j?5!f1(PIF^\"C8XO!_rM3tFIJ[/7d$>bVk=+MqQEYVsh&38M[.iee6)I9^(Q"XcA7QMi\`U[gl"hG)c_Fo*(D<-C$%dQc*o)57\%kU\D,-J\hU^o_5FU8<Y/.1kunV5HRe@l8=Ieek-b^im5u99]OCk;PaYh$*9k>nk$G*>Ct*SY@f+PQG?:D(O\b''WF/XgUsCGQF4,%[!++CW4Aaa(9D8g7Q?M9(otRf6(DR6R)k.R]TUSO.9GMb[)?-/2Xm#hehIf/K=!G$AgD)ST]Al($j,CQc.4%+"t6!+QA^n^)@]Od%&0qs+&jjNs4+n0M2A_gR-B\XK)otia%7UGV+HhY'nMLmTgr))W1RJ^tk3=+GLiE&@>/p48b?#Ak;@+NkKT\qE&HrJA_MHinY],TQ%4=$"ZWEpZt7+d/D.=uNR>#u"T@R9mE&ZP%e_MBTSje<?FZ&:MY2G@S9GU@diDh+!q$TA@(8!60sm<u$k8=UA(6_:1<__oS-Egc"_%cW:i]m;/Y5q:Sn?";)_P<'!)$(+L>7N;'kk#U>"Y@[_&2ZM#,p_iqJ$g+#B&&[Um+8E;[0RO1$#%:1h#:`L-^IO:/tSW-36f-9]L%!$*^$&a_]6+`]W'p//u;;a!U5QDoEDGkWMIo5<tEcnj@P/?a$6RR,_jN1Fc&ZAXkW:0]M:1b,VR7ZJM32f?q9M_^q!mK=!(AXf>9%K$Ll>Hql\S_Xj$@0NbQg$m=BkB0TTahDOcu-4d-ZPS6SJ'OrP_$Nt*P!*1;"%/U$"$)^Me;tiGQno6+aI"2OrI(6nH,](bq=2B]+%;bn5BS##_=/N<G@P_`@T6&EP.=.dC'.Y1"_FF,<oaGsF1;?V&Shanq&pp_j(:=UE#g2.<4[\D.4XLu]L"dq=oF>+7pUe\3!XeWK9%Puo5T4eUB-1CU<C,`s<$1\`G##/)emrE$&!*S)=Uqr%^8(YVtUT0se@<')F..%Ub2/!36DH!cJqEseE3<R#4bW=K%R08p?HTWj"k%7s(rFgt?bQ;'dWK>.'HUf.&pT!Q"*I[=LRegjBc)V!5fqklHnR,a=,@V^%Es`n@=hmDqU\+H[j0#D#9NIh@Q/NoZDDWD+<U&tTVY%";+M(>pYG#60D)'9[E?iXAl76g1U6Vl;(DD7]'!cFLQ$S(Rg0*GL[c'@sp^Wa:-5_Ffd,YOb8jUaGJ/4+\0dihY?MF)=Ju(5Vs6g%R]l+*Fm>95#/soTW<<pO?F60X@0musXPW-lQn&2+>RGk`K53&kDm]`NSB0ft?u6\A`@6+J^*M*F!fnT[U9LuMBBder<O&:+6c*V)%i)YZmB_H+H([[L1+cOL^D$UdQa&\EJ?<'E31mLAc>0`;q[6po>m4q%c2(BYJ#0hd.rRqZJ?,c_P)^IkI"bCDmGtu9hm6"N5FV$l"%C4"?%j%t2-kASM7%X>E.C[X/HiKb*skN.`*9O'!.WQ9=8`Y@gd.H)JOrP=YM`jBQUaYeVg0<5UU\]Dr:53>eZH#7_sOJ.ia384\j%lLTb9<>esWkuae%M^kHdcROu-7e<pu2IeReGC7r&Ws0u*9kQtb\m^A`\m\mj;8]e!H,3TIf1JpX%`q`a;FDI_f&]BFTQ$[OY3aL6%\n4Ki<Ylrq+rS!NX_*5%.9.+&@'Zt]fWiSmD0/dZ&m[oH%2Y#<iW2Y>Y]Epn(Lf]O[ugt8FZI'n06PoDJ]=\Ck;;s$/5CdN,Bh^V%oS8s.ms`[`_`*95"AHap(6(W<;-u>/6=BOn1mlZ78N\cO;P1Bl"Wi=)?)4EF`dh\u@X"<T,XYL41<E1V6".;'<%dUX:XmD'H7u4N%E9*3EUI(l1Noq4<^khoa+(mh`R*sV$F(6R'-u3\dU@FZfCEqbFM'PlQpmj?\XWB[M5nVO!FZPL:fG#j,fPDeimMhaU]*M#&!9?mB%</#)IJS(pjq.--I6ljZ5[h+rILA!sXO^VO%[23JBgC8,F=+Rbm1^:EjQ0#kW#qL,_7`-+&osIj:e3Xk4OX']"A4%LEab!&4KI<DJ%C[Ts"E/;u?oC`/QDqaFP`-5jDFu^Vr*\Q6<RTR"h%m!8lYDlrh/4kUY\a>7u[ZYSHU'5oMUIdR8k#6:njM@j^g?$"81n$"TemKB;%TS0$0<g!q4V^_VSS-mXY'>h4IPB_>nSh!JN#qWkp;Jb(W&CDfDWC=pBh!J:uYQCE$EgSAHR80`"8s\o3K&isB^E"'sEC_Pu"+sUF%U4cBnW*`=V$\TQI'M4FTm#_5*$'emDAi)[[,AN+UPO&;2Q1aV(N=bnF#tBNUK.kB('p&:`XZtJg%mGjobM0ipHa4n=`4R+QU_D7X%`rgX&3gA!;F/BS,_u^"$r+^[^,*A8Wr@mHO5mdZ05e*N=?Nb&88FeYEX5K#n(jb9],8c9V^`PmD=*pooF;omP,j)<kMRkj$dd;Sk%d.h],#k?DtomP5bSCI^eE'*IuHPV7Q#^&QGW,unl`U]cpNIrl;--rK>,S4S#ElEWR==BmU\W"4_,K)%KiW0$GF5.d1[K67pa",b2%UNPJZo5c-igiJ->LdGc2*,dL`d=QTg?5m8Oj.%A/i=r-C;ad9u)M'S$nm.*J6$L?CEJc_e.m"0#ctJ/(8/emreOO:H%W-QFan!FC%/tO`QD)jadp`bY]JeQ;iIn\=U5mSY!KQcir=dt?@g%BI6>\,.(C?`*gnO+Nn6MZijOou`ckb4hF8'V340_n6Tp,YYWTD>oa!ue*U%$Zq;1>o]EnK+K=ErK^d)mnjBg@X9<Y/LHB/8.;<BqO@gi#cCrhb_uQ(&/D>D=)`_I0SMBI[q?F*Th7$2'2LhJ9E;'Q\gC'1&GB-c%KLdDtkU!sbUfA[+s.%VRI'&08Z]#%iPk"rYHdT?ZAl(gC-;u<:]sCn!;^,3*MoP?,KkRtuCb+EBKC=Ii-0CXh7Jn&5DrjBM_pbp(%>!<T7OU8/2dSF&3EbAMrJhYu:=!H/`McR)n=@k-<p4\N>%mf-u#HJ8o'h4A4E3UH_6lD5V80a9$]%79hbXp*fB<78S63pgHq'nQZ%!?$)g7nE)F4pfBPCf(M]kG14%=cF]%EKVg2G(YJ[mL[M'a6>2pJU0m,3`hCf1KIN'BNK6n<d,)lc"%oh7^im>lI]h'+`O$4=&u)b%TQeD8p3\KraaEgC`SR(9.SK4:]86cbl"(aPla.Pu:6LqWJDjaGq#2@ipo-tL#kp8_0+(4HeK")&12nVPla,%O.i(_#lRPQF&p$6L%@-)_,*)1?L$5km[_/^=%bMYN3S5T7e!AH4?Z7S0Lf]67ef[UVG,X<n5!\\Q"H7>FV5,3g5ig*[T;GPQ<0rNW8e-r1K(T]8.?RR'2%<&tr]=^bd%jP,!>SWr:_Ou*XYA9\iOZ(ObTf\q@\84UZgTY5211-55eA6DoW1iH7k)D-&UNb$1/c^#m$=:Asj^3]<ScS&q\"^4fJ%moj+<X?He7jn/7>D[QFN31kZ,BRId:+9("(7&nVETGMa.iK^V-l^6Kpcb`#_/PSL?[*LR5Pm8_`OaS&5fjS"H=jV&hd'k])d>741%7Zp;D;d#^$$&*7#_6Fe;()/$7dHJZ[I)F\J)q:rqN)<PbK3j6T2R"N@=tg;s$Dj_e0MgdRWF8NHH\!a8oc<Ti_",VXJ3-s>SO2+p%_@^h2h*DCu#7(`+,bJ2$o8ON5R]'q].U_SaR9bVM;Q)KG59rROR\1r675!C)<(1@)[p\mV5_UB9BoYelhihK8O<nrA?SoKn\-ZE+%25#b,U/83`]Fo(+8iMehg#2Ep2X&RI+jm44F4E_>F`"2Hq5pDYm#l)"I/P$ml/pg1ZHk_p,4q&b1kJD&eON8de'MM@Pc%q^!0_01%d9goD=2?au;Sor5,5E5==,:,0RTQ;ZjG7?:plgTg6\$^g[<NULa$B><i<s(j-%:]F^'YHG![,2g^-q+VMtW*H<sW0=6=`]t]B(UM%^f/Y$lsb5r)K6nQD!IQq=g"=VMamhsP^Xr0W/1YG]un9UC%,"ij,S;56;u%#g,P;;)P73=CK*UUX(Ng_jU)_::Cn7MQc(b:Mh(TO%8Fk=6"\@`R]]/F4=RQdb8eCc67T*g9k@-a6/$D\UTiMF,b/YkW?/!jMZpi[-@:6Y,KTCd&YE*+@)&1&m/A`j*cN&ZM/$'!pW74?n%%ZQ/\(17]j1Em>JiCg&Qc&:\j8X*YW<8_.dr%8861^8NVmL0Gohhi]L9;XnlP5km7cPp/s'DEj#TnG,Q;gc@rV$R$X7b%3,b)G.+%/'$ls%P_Pa1%;/O"1BBb-Jh;!YL2%F\p;%dbN?m/>6]d3O-L.6Njb<C0X1e*^`919X,@a*>l-i)b%NoOBRFfc1n=q4reL;<"t6!%%V!oK9!Y9ln96Wi&K=o`Dq93_S"p9%VE?&qRPR\1:KfW3GhI6hrm#,i'aLWeIf/8^JjE9"iLN'?W'4ZdmGaH(!:KX<@?rmV@;R;^K%A!Zh-UM8C>g1IcC:gq-VV,4!D@!FHo2O[ChUqun<Mt?/<k(1=hT;I55*L/@N_=D_*5Nr8oYjOr2V.UGmLl00+gb]*IDLNuW=J3m%%4W(M@1MJsi0?9/mY3VPj)]&ud^,0V4j`*f)nhK6<aIpnH8A`"Ys"7J+7Ycl[76!";Whpciiss_5"SH`]&B1r<#%Bnj5hT-/2glk'%N=W?c2&0YtQdNYoAV/9?&IAkA2Tb]5d8#V0?*jo"'X3$=atmR8+eD7fe92F1"^Vba7$eE:g-F;IdA"s`qBdal1:3=g=3m_d-?RV6%EBDW*F&5/]=IH%:"t2;rYlW3;7E;WHpl);4$WBlpJr9DB15\"PNBT$S4DQtub/\Q5)u9=f^l-2?)YOUIP2%e;$DV,%3PZM(DLKWo%"bg)6DC^^d/&+QK^H7(b>:s_=Q&pt7BHl2u9tKK?,eM1>DaG+WP;f1m>4Gj+50uK$<h7K;P)^i/CN,9&TP1Q#d\4T7M?ZE\:XJ'E%R[aU2nJ5>c,X'o+^m3\=6XMPOC$:KuE0%iO9uYSp@*%k-A*f)<m:`]N@TT@ZFEV@jU[e=2HNDhj3#`ZnnX`2X+X/%MR\c"6(f$jR%?3O46dNftR:J5Flfo;*p8o0JRc-3/Dbq'%LfF/+R+EB=#Vu_H#=si[pWb>@olm+bcV,QU='m]0`(8+7TobHS`-U*12QC0^%2q/=]%eFV0je#EoJE>ANC9d0$%^-VYDU?Eq=Pg/p?`W1_N;jN>Cq_BR(4B[6-6p8l$=3apA/_Z8Ik624t>mIsC>&oq&%m<8ZJaU!Q["r?:%ShKGn=La0:?BXIqE!0kX3`NaIZ-J&D?ZLGR+tQ,IDoqT*Eq`CY][hUQ5dpg!oh-V5<K-TUDAsW@T&W^8agO0=_@$Q247/:gaVM.N%Pcrt>`Ip,uM?504M0DP?`+?Y0K;mtmIf'b:66pW*2Ml*aiL7gnS?ZO-YbmLVN_&_E)Sam8U+dL&dHk,>fNJ(s,+Eh4GO]GDT(1kL%Yt]nC>6oSYCO\e:-F&?Np=oiU8]-c&4+]CG):;o)%HE&r,KW\F<'?:"8_&T1V>)G&Q"0Ko9j,30N@kKF0eJMuYT0.R7lM-tS6rn2%$SbE=@,3bHJO4l#!H/aJS=&Cto*I^]+2XPL#gktlPGX$noBj?2/#O[8"Ials-of%L8V3E[IcI0MIW%%].j,NMSEPFe7:X+hjp!P8%Clp*f8\B(L"E>X19o'GdPa*F$W^q/>B4PCL(V/PY+M*Ho-Id1T2URCLC_Jl='&,es>,>b('_EiZ9b[t7MSZl::a!VG<_U>\%+sW/%o%q4$1Dr5='qPV=b<\7SL#cSHB#6&\Ka.Wqb_Tn`\BI8r'/KXpbs^G-#Z`LVMC*\Fd;MaIe^l9ULaG0l'SFfUTN##&PA2>"S<Y@q%d_9LAOa,]1hg$ck1YHLn8G%?#",&HJOlY)&+N*fG?%k6bG+F@a-M'^e"JIB8MuZm#%F61*l5>dpf?P<<5)(pc_24USFI<-]C)dT+%WKJt37$;>1=.r]^6AiGlaF$)Za>Y89'Bum@(b%%mA]UX"?F)%/b=3HP%`TYZ[#/nkM.SM"=/R$iRT/Sb$^!beN0)1%A+R+'Zf%q3%DdVG%>"*.[`ZV.UC!=Qk.&hI.R`o1dBf/=#mb(PSNDs1`&PPGidDX37GA>tc6<.uB,T5HkWekB*$f$ZID9uIWl_4-VCiNk5GU95D%E$HtR"#[,mN$R8HRL;DUG^YRM-=cP7e2J(09le+.`9tpLMZ+4Y`TZ+HOAptsB)>n:!g!X!;GA2<,+@Fba$kjLI706QPH$s.1X)LG%N.JZ0NK]LCe;<-N*#%Q0$<%XuFd;ah=q<+#UeV[mS9#r;St7;cVJW?u@Ap6S@f>QPP(%U8Q"lR_M/5K2!"<[@@%OT-5^BdK`,%V#%)su[eN#"1-Q$RL,/5h\f*od7cB$*;&"I#&*hUKjoE.b%1@HNCl#@U(>n@4W\0]J/F5I<aV7=//q)XuB:?!He,$G8rpAUc!bC74Eg%0tNs`+`"d=\<94J<&-?NLC?;/fm#jj]f"lA)(<PHAsJ"j2Ni/h8""XD.KkT4>B[6`+-C(:%Cr&cjIpS?.tu]N:0B%<]udcoP'Doh%$#2n:U4oftn]J^;LuheC4J!6Y_f!5P]R"L=17XCMMRFmcI+`#:dFQ=1>=PJ118$<8%f0^VeKS&93E35LHiFbY`3'j`WC4`H@?p28%^EcH(=\(KhB97?aEZc%!UOYVj!iq14#1YQga(7sg].OHJ*b/3s-/44i,]7TW13%rA9JMBZfC`m6dk'd-J22-)Nkph,.0'H"X[j0_%>LB;`^!BNX)9E_NeLIjTRof0GYH?L.NXUe2[9Z@!?O30'3c&2'#r@E=E$0AY$n!D-OBq,OkL:l9c)mEo,0ejG]@+pHNiH7c#]k>8%J.`9t(+*RHTerb^$X7I%+eLJ'5(&P#CVK8nI.V#>?f8H-^6bb6jMif7Dc]2IHW-M^Y6c;qgDQ+;pW.q@k6W;M:I'*X6)H"0f:4M:%\Z4p`-)W*UM,2j[:!mg'RO<EC!Ws"K8\!RT!^]CnT7(`9X!MLt,\ERpX4Z(kb,_&s'.Cb4>EZn"7O(k*Hs;a@XN?ZqrLmOO>Eb>C%EdVH8PFUHeKlgglAV-*OXt+F0P5NlbkVD\PF`u(MTd39Fk0kNJ+Nj9];<fHm9S=%lH'sLc,&:U&6:hS:!M2rE`&F=\(+e/Zg$RR?%A!H&`G5Gd'I?lCUY&rcb;0%r(Oi.>6O[P86,i<Xj3'8uX];d/[SNTMH/5ER3&%RFh>e$)X]4.ne_4CM\Gp/AVq%e]OhOl-/^fm#p%&iSKMK#Mb"P+/S4$sQhYAi16X,Rd?3*`n@QPT@70<Q-k719Xqa(`?=JTiH&W^46cQO(S=l+W5#t7?:3i_B.eMX;HNk>g^QU-.s2G%MgM$ucm&c%S&]-HBAh5FdC!AfS1OAmY.pL7AIm-Y#)??hb\/JA$20)VBcDO/TO[[R1!,M\1>/qZ%.Rl$,OC^;Hn+(AU@C\S$%)T,%Y^$t"6sbs"X!X=5:b_]E2iJ;TSt7Te]cdf#qs32_G_RTi66%F*\61C`"W?KFk_h7,e[$hDXWTr]P+BF+c!FcD]i$,b#Ueeg!KIj/%iqE4Fj^A2Ca]$bmIc#*a6(kVKP;8bCKGflm_20=LZ]^gWN8u%Eac#\t-$CHP&^n!q4!@,$>SKMb8:!^d,M3>8E5\p=*/?pq?hN(N%Kf64@SDs,NhWK]9ciP.(f`B:=@2HX6-sM@?d4^8D2Y#hS,XPfdKGlR0*2,jeXXoGTfRjfTA-)_6Lq#3X)j3Od&KY*dk`dP)mK'^n%A@F`rYo#%oZ#kFZTNKA(X$FL(8\$Ti]fkeQI\Mg4)+KX\)4a'-c_2$lD'["XG!N[(_m@;81EuY[g=?;TdWAoQ=<gu:ZNJq#,uE^e%Z[@#80Tlj*TJ3F,T_:rH!jX;n)?D"+Q,VftEXcu$6-43db6TrQD89)raS.rmOZ*!^/ONbS/]8KoLe/`/88-&%+AXV)V@u=gL(,i"%DdHg<N7>\d2Odj3n:s.h9-.R<3@!d[dfTrsBA:d9)2.29\-eoubh70,mt.Y\nc2fVgqs8YcnIYD0+CjPH4(XgELiln_K_Q5T$_4<%Up-M&I,$[qD@kr-o?F%P:rh4]5D.d(9D+,f>lbWI?Xu$PNJFYcbtGKFRp#:lkaKq!;N=`,+"MSZg-$^#JW$VpOlW?fLjJ$;X=T7M%9"`'820\#:XS0I#\PYfhdK/2@Y"6fdRC=I,)EE[Q6DmIF-)d=#?7*#b%f$Eg`\7UR/j_!?Cltc16]iV%L_.VM_A6;AY)t"#"iZS>%Uq/cVfAM5%Mm<M"W\d#n(keEsM@<=uFBna5ED>cgD[%1W;9<dX>fYm4\._eOci:rA/-X]>:dgtMKn(@lh7*_c`41EXM*]2(Sd$11%+OKjZ\Q:Kt$&5<hK@!j@!u0aOOM\/4r>(u91qJ7$lC[h,!9$>i&!cqB3K2ud'J\bW0h#mf,HuuIT7t')jp=eqbqYa.Q*[>",^[ZF%,YA[pKkNn1%#iWq_A,YDS"=\EA_22nR6$:l".<Ia8e>@*BbXJ4FHYRs-s$rq8;&Bj/qRD.1./ZZUCiX#M+1\o)IP3#l3iRJAP'M@%%]R<bNX)d]1-e9+G`)YuU>?dKJ]9Mc-r;uuN?R&Wb7\OG/Fr&T5*CLWl,8H)XmoXT:6!Bsb,\_ZJeZTZQ&m3a%o.AW6(ge5!l=(Q%f-VX3p-t#e,J<P.?2BKg42OfeM%`^=(n17+p^=DqBCh@O,DL4mqN2=i#dZ<HO]D44D_h7l^r$"_d9un3+dsGQXZ!`;`h]pp>ll$<%hY1S]7A;eA/4/[rAhZ0rSoA@]N1-"tZI/NuS,ls`*M@4,-XB#@\E1!u2Ahp\9JlAMFQ4J;]?d^'^b)dN=Xk7A;!N!/SFYuFC5hYY%.q@XnOcoP,j]9sa?t5E)Q2'If-[C%EZ=A>oiet<;@"(-IQ$e<tc2nl7Q*:kt8QK9ZN(?J$#+Li0HY%eg$l`3N9(cCP7\s;&c*+V"%NXHt__5mfkn:RXm`'_F]g)XCG;.)_abQ`B"VYZ!(&uM6/$;HR(`(mR*1?R!&[r<tH7H(mF7e0acnB0"g*C]du^Mir34s9;R/XV6\%3$Sc[=gWT2bf[tah6M8a*"Jk99UA8+A/n]_l>-$81oCp&aCk[Q@/D50/<.%KVE1)p,B6RtGt]!WVqaF@0*Oh[/Zb)4(A1&WApgm+%l>`RfT:c+:0S>]_`\cj:2%sanm_!\c1*:\Vb![-[JFT?sHTSg4Y8aTRBTY$(e.s=7X1.BY2543Z9]>2uT'93N=l'22N8?65g$b2<%_2R17M^9E6EIs.fXnkJ23d31%+Z/fk-((O6-PKuXQ\h((G2m/X--jT?J9G%j3]NdNH:F&@G=>NY]LSF('hFYWY.)e,^M:+nh+1]=%PVAXD-HYW3-&AIIK.\)9Dq1_:q3pY`+HU$SX(aY51`d$a(2?B598Bdp'HQ.%&FHkRHYO$!$_A!<LbH,tAPidn0;1j/STiebAgCfp%(Jj0-3E7U=.jL5'&=tCc*Usq^1A-]&5Nj3<TRFm_fT^;qHCg8[-,tlP0t0OK&SC*ob-D1pp.1c?<T.Sf>RVTA]X!+5JKRGOXXUR[%ZZ&+7/#Rbd+:'\o*+5K4K'01`Tfib]92C?QZ;[3^+5ls&YTOJ/)&+-q%i'0SHA?3,-C@JO&aW_Wg`V^fYS68T!BjB>XqA07NFY^l%D&`j7,"$8q^5/pbAE&LQ\g7_k7-\^[cA%VGFi!&4@_-5L&*fSDANT`8K0kr8;SnaS]H#jh6@cF2BobfTO_Psp0InoEF]r>YW+C'a%(tj<GR33`#3@58OR@Pli;):k-24%Yp_?cI1!<j_/s%J@`4GfJ]Trp?)7GELC[X#&lW?'DE.p9d&[t:[OW#UoqILY&'m5INMT,A=q%iG9V.$XD27)/3*iAAJ]VmYS&VHY%Y26!d=e)!bb3D1L+_Fu4=q<eU]1;YNq+Wbg=VNV*KKGk:c@6loYV&UL0?cn!)t$<.D[a];A[%N#9kUr$&[S*B#olJ[5:>_<S#0R*i;pNt2_flqK`-gW3`LKurf;'K@p9[p0E.Wj8g-p))LIg,EJMCBM$77;BOgf>JJ^]6S03D&]o<%6;=4rrdkrc]+JRk^-7Q_kMRr;_eHsVoPY:cJ.7.V&Je\"`e^Jl%lq(CS20$oX72!'.nO/Qam_/EjbeCI2KhkiEQ^d%!_.XT"_*7K%Biqh^PZQV_8]qg"iLkV]nELt(apJV`N38mlAkfXrQT-N<*$Z5\5`?:@;6IP%7lZO!L-T@ODt@W)%RQ-\atQW'a$*KF`G&n?]1j4B%,fVVsOmStm4=(`9OK\+q/3*;,IoHu*EJ*q1BjoUle.6`/!sEMiaV6J\/MaQO\k>=-#4<07R#5WT_)OmAg+;OcXtR_>ap,X]Jp6;l%7`VZ'lSW*?jJ'.t<(Lh*Pr1UT@KGh2j9$ch9f,g<X(X;XDj<P6E#)d;Aer#A$+5HUYXtC]/KiG1\n:el:?k[F"<=ZK*)T4B_bAjJ%D@N7.d^Eb2=aO;[CR`7\FKD=iF'UCGb82.jOecE3Wqr+KeoC2E@$C?DRnS(t]aT=r.<mN_[3aJ-.ZP>P6+M5J3[]UAlCLA/?Qi/Y%M=J*]!7A+qCkS<dS?`.VA;:=F.@jr!ataUbno`kZ%T!?\2b>:t&9gT!R"`43,8sVo0')qjB\_u`a>P%oD,\>F4rEDG2WNAti`,L>%0GHT+AjkS^6gM+`2/!1?+n?JPc`g=#JMe,><p0A(#i+M:K#n_K0_Jl#]Wjqt>"4F7(=`jQZFet,7!$.Gb;j)\+'BrK8ATaij-/Yq%I>2\cXa%smE)u&#]4cTSMRAu_B14dKH,GX&>=eMm2mR1f1(/!0OZdD5O=md.<M+>1^iAp`ClYh[X1<mG'kNO73)X\mS\Ttg#82:"%>$HXBN(neVPGDlD>ehSb2BWt$%6KaA"/LZ.D:37]Of`n3EWQY/-nSsY@.$_<OfErSg`XchRG49O&43n_1Ne6g>fk5<Y*e;[2mPpg%.3ZHKNo+4h],NaEH\ei_FKqN/nm-@\;6mYi'M8np's1+JC1M7L"t5tc@P(`,6+4V'Ll]e1i11WSq5UK/qf*d=V";<afgm@`AoW=I%!`UR./I&+(#9.P+hrQsC`p3@Xa&PF'H%n.#N\bUTO_sNm9Ymqb9/D7#=KdY&Z$@a)#d\ciR-TOjRn!qt,ha#HZ'fhcTmY`NDrd%g%!^s>qWesf!U@5WH?/"Ja<LYE'pJY)4!'Qm,/P!D]F+KBg<b!Mgi(*A-prR*9_A\3P(Ap_;\+)bbB_ML<1Ws1e%6]mAVSO"j\L"1s%?t58YogRp#_<MZP8u</+NU9hNLf`9)i\&q#?e-,r(?SW2D4h[@8G;H4eV$ql,51Ro+3EPdojX\WAAno=KftUf]?-$qP(c;D;7?DH%Hag7MmTSub7GZ`ocPJ?)Vr_<0AeIG-;r??XZ\.O0+j'KGALSck]<8ES8Fh0B[)#<,hBe#uTkUl?g:.U;CY@RMe\#.C,].U=hq^C&%[f/<^UfAM'W`%75-HR/GA$93RLp:(rC9VImMc,0bo4T[;P!!VOj98*&m`3l++AR*#"1)uT]:p=p*lDa?V12NG>%pSrYB*[NOJB$"%0A:"R37-tPnRAnLZ*7eQk0/NLZ5VRE\[f(gbX*PrpQO^U,AG&J_U_C_<LG^RiK:LLrjuhe=")9ChL9\DnCh?/1Y63hb'pKE,=K&l%lG=aeq6hW:!U1c\<ZQL,+tjq!kW]X@W[HP/(r9[DijhlVp-@&DI,U0gVM$]S1O+lBRu=L>B3-V+$ngL1>Q?$0h],U,C)J4"1K\MI%/)./ZBmr@0j:%*gJffheB!E#tdsbuhO2MGg7>pCDa+PtgXi+<a?RL(M:><E2%Xs,V@W4\fQ"ig%PBpVGX.>Mj#PrB?OXs7*,TBck%.hi(`-\H_YVNA#.31R&-<.jKt:7(0:8@h.\R'C7sOQ:iT['CiE8Y\WF'^_Q.dVQ2bK&Pte"j^(;Q0N!A/_6WT[#hEpnq&-$H\7MM%$_FEJ3eigJ2e$+-J.Od*n.0>dl6]')e3Z.l06EAUSmm9]1Agd^-](,[O\c93I\@N/8/[X'E/iqE,F*M-l7l;On4E17eq(VNDOJQn%LBj')\[j8TO82]i5078DGWp;_eOS_2hi4>0P?rt>0r7sFJ]ns/Tn1E@=fHu!fI"Gg#IYK:gg?b,>4N2c@5\0Z.,27e-Lrl$9k540%$;CZ(`>(oF/N5qO+f]$IV%U@>'l(h@$`G4IC(%EpedJbf<FhH((Mq4M/0MJ``C=YEQK5Y-W6e"GP,JJp%X=g#e<+&?>VWp]<Log5%e<018XPJ%\n(+E@>nWX`;e9II;iig1ST6qpBVjFqjQ>'sE`Qj"Knlif7#Tk8bMjYoE[3Y7nb_0Z>*).+8ht6^E=r>/i4?U\0&eQE%0g\Yh)/A!E1QU_tgk%:aHtZ5mcq)'K7$$8M`rn9`V"MOV=q<QY6hOnKniGc<OWqnq#8p4OT\\4:8[9S!:dlGH$<;`jNlE<*"f%sQ%e4`IDHDo^<M3DN;EuU@*hV_L>Hjd,<D0%e"8/?,bemPjejH(Ymr.f3N[pOHF-:3.N7`%Y+)D@P#784FR/3P,>VF=Y,OBAl,'+51i%,*$qAU<o]><#7*QOdlDH_!b^Dgdtbl89+8q';<,1js>VJ=+2']]eN+,,VX+:>@Fsl/+TG(:(''O>d&lhR^d4;.oU0Q!N5@mYYNL\%&E7CQEf-MrfsK2o10,<QU$#I)fRjZV(85c,ndQE9/KYR!MOF]qQ$-AG)D\JCmdLI<O<t_@Lr`n-@7q9D\:sN/&^R6e2&+%\)72"7%Xo&9cc"aqW/?mT,8Jogj#CIoQ$`"5FT)J/E*70?b[lGjSL8G8r>T%0,>)!oRni@rGlM8;WC<W9R>Fo:+[]7/0HG\`Y9o&1*O8l'J%JB=G\Kg\0>D72'#J>(HASd9!Rr7m2GQ:ie3-bLeY4C48VX`8-=:A@]WoTCBA6XPO3"Xi(n7$Db-4`)m:*'kc!$3(ZC8<:l!]$lLI%=oeC8D)7TF.Fr20E]>ALnsjZm'KXJlg6S9NMb,:%-p<_.UP;IjItD4p4>"-W`n]-%=@acI<Z7Wa'K'A:U.O6s+V8=\`6:<$XD.SX%r$I;W9dfldLXQGGIH[H2D<MTBHmEadVA%"'N[0RrO>;h%$5$UOq4&sgg,rI#j/cKoP1GeDer\k%@sTGRa"5n#m:KM&_&4sj?YmHa%KJ%M5E$0\XE-<V,%K2icM:/^`#,Bu^ZFfqONpWOkXqRrOW4s#/"N<r=Zn4XP$Xg5sZ.n.Z^lGO5^<m_"LQ+!X#u]A'U#X)FKQBI@%,Pc/?^1_ko;j,V<%/&i57AIu.l'&r$F#I^B+M/;XN`cIV8[Wi%6\1i.>r5[D.7P9bdSQROB9H"C)b5VKA])*/6o']&7;^)%!+E,K%-)2Zm*$1;s,VAnZjn7Ooc$U+V$-s!o2IQp.DYTla9(o1eFRjNq5%(k2e&#)3,8n+3*G>pdY/2B*i)F*8Xp<0OV0]rk/cqPU%NGp5%]L3"k<]LXi8!:K@bt5,Ba?+S'U];4Y698hua5oabou@Doq=MZCbnQBO%LW:23H-Ih-><0IL_P'K=I!HN>$*.tMk7#d=LF`f]TV"n%WD2*@J^Z7*$!Z4LV&_6_<?:fE\4[7rD8De(-Wq-'AZ!qt/-oI9H3u/UaHO8\JOK_ilo"]S%:cU;kRRA[bQ<"(Aqg#e"a\U7bPjqg%iE;Qt/5n6a?(`R+mG_=T_crc]q-NFS=/IHWfKq^BHSK.X0@dBYX%qDIm(fu5UcjR9h(=;IAICSgm(FAV/bgnOC`G-$kuEe&((A*m%FMK.ZA1#!O:V^iUeiNYtoBjshX/[t;+S.o_aa;S\/D"<)jp,CDap<7-84?%p!PaHLi%=kj0\h;_&Y/ElbVA18:o;L:=a1GO9SR37%&gS`L52\8S(V_W?Q=&Z'SRaR?%iu,VCI-[K/(7(2jg)][+]#X%(?il*De*lK_'R+qZ9acQ;EM^l>gCA=M.TSmn2)!?/h*>83.k5b%Q5A=Jjq/t3S'R$>P\q)6HF(^d-l:7P@T#@S%S/86I=[sU;*?++N\p][Y`#sOAsVe;F)pBC!5uWC0qYl9/teCY>OcOGVBiWi:9JEh%^7'Z&JoQ2^S#jbU0IB?&CTsgD:a`l=J`D'=[d<]+&u=-l-Lc=@A*deu0Q1:$?#^6=biKGYbp=O"(MWUtEbsE?M[7Pd;5LeZ;!^2q%QP%>]@@V-D6g(?[EiY@$#nAP!Bq_&mH*ck89>s#N"H7&V2Qtp><PYXr[=mnNDD.B@Qnt\@7OJ^h6Od@7@B2'KEq)thOgb&Kb.^,9%(8Jk.0l(a>K0.N0/k(oJ$f!#P><#)Ug82TAZ]Io01t2+a2Mo8mk-pEl4ld"&A2/lXI%d"1MXARD68bb6AnXsL>W.k;o?,T?B3T>s%d#s)s&n?mNpCLT)[TL$dX2u$s<V9&PP9*%H[CK+.l9maDOLFN">/+H>+re)HHu?^q68XN-D!q@f=FNa/,QS=0cIt01$9MB/O;oJ>%(77[^#[moD_IWC8X>O6f(RRe-YEKXKUE^=1<C=u9J]Of76?d^8;h]cO1ri$-[P*XN_DdOE01s$El2XD+F)Aop,Clq5/'[!mX_c$6%7@'!:3QYqg:P04E7[_h2OpQ5\''resBQK@8[in^PYrAYun?gshW?G4W<g\V4h2:*(<i-R=@B(W:I)sU=6qAJ[*0"kll-S0?n)?hm%0V">>+\2_A@90bD"38>RL^fKWg7kGK^g&r'2alegI\S'T[#,W>)j0K3E,6XaR%&2:-'lZ!$h?nZLo/B8NR>6ikr$E=p-Y)8'Ms)&%.L_L\@Yi#=:1,9+M&@ESU2bV&<Z0u?)^9<(=EbsB8OHk#g,*C(BoKu):(%`\'`UnDUm<Z%La.:W6uM^'@10-WKs9>]B7^[gi50.5%b8ho93'+9M1g$4kg+*cGUtbZp]h-WL(G4],`>/40pYb&H;;n6'+I<e^MXu`[2c\&/jenKYe/4.6eGffoeMWU\6bK2UMb%IuRi6*9%gC)RDMHe1bNCkN'"QH^`nB&Xmb4JHSl.N;g0Q/;b%9]tU7g<C1dTZ\f/M+4`(,blYLCGJQ2?jBl@rQ8h_lobf%!JN%6j_8[[Qen<%RA;o*r"iIL4.OU-qRU@kk0D=Xl(u\`>:j;)h@0!0FGA[Jc\E[SOpJf[j*et;ZP6&F&<no#2eVm-h;NQYfP]trBP?CIpmi-"ZtT(!%T2$EX,X"bg\qT%)=iN[s:(%XT:(*g@4FnM*BH+K&d8*J0=%<6iR82L;V5/+Z&HKf7hr3H@19U<pEuf%KM^)GU_U<PP(]Bs(X'oi0%ShKL9BQA;b6Ku.H3a<Xn*l+p4gdm15cFT9,\<tS_;,B,q/k0VZjWVcND.+-`:.5k]/ioldA>5WhATSaSK69bpkq<tBZl,+d=Bi%j%0W5.QQo]k=LGQbCdS8rjFGdKL7*@36>GKtf0M_3ALk+2s`6RkM-8rL&a_We=*BeaL-UPR=K<%Ae2A[ruG^)Du@0S/7.C5_(JLXpt%(]fmj)2S8SoL26[1)Ij^K>Qh"72Bu557QWoAu@[P++rs]BFPQp+?TlnVN-bnDW59t;i?730Y+h-PUiuFMoJjNUW).R,7+Hh,T5t"%<+;[#A:r:Op>_]`:MTEO1!/)L+jtn5@r(4\A.jX3;oK(fpbO>cajcda@W?8,*je(Qs'SAna.R56]<+Hk""lQsYbXSUQOe4C9Ob?=%YY=W46ZUS_W<j??[#dt).![)1KCUWuM"(,GM#hM$i)I>>JKS4R7_39&ds*\I,/e:8OUU8Uk3jHkp#1G#.3`]ZaRU41,If^L3\;>8%bU%V_p7tF%J1j85PDcjY-Jb`VN9^8i7GF-*I0@%k9K&Aq<u(;EqKa/@[ma!&\H1SW[mjHQmEg7rSSYE_n]AY'7YM,+IpoZ5(m9e8%@!=\$gP.FKP?bKQ=F+YrnjL/Gki0[T.kEeGOte/gE\0D;6rsJ(@9PM`2jdBW$8krUYf[GXT"9&18$?-6?']DLdUB4/W\"EfS9IGh%)3f")R+p(S\X>=%_s!2Vp"k4m9G&6Pdj05rK+c1qA/&/<XKE+FE`tsd("L(p*S0i`6"];4[cJ?U0MODM.7;CX.3!LEXnHC1cX8Zq%E'3(E86@>gUaSA_VS!18=Vr9JY#m)!iJV*01CSW`(>Dco*/$$#g(Zb[%+jA$JcK#?=]E=k0hKh[fb\Ms.bXqZ=f0=UaV^K^6#lC5%Pi@D>P>C24D.\uc3?B?[@c<580PdG5_X3IC'^$&pbcuYeE-`3+DG(P9[`T8$&!%#j@5^h8<\4`De`Du:fS3Wk2D86Q#+`0[9<MNT%MJYfd:7j/#e5]M2k*\5S[?YRFq&r,q7GEE18;?<+GuXrHAPciLC;MOkOuhiP^>a9&K#VL2:<dB,$`qY+a=QP<H6;qrhN)P/Pm')C%&kP,!fKF2%1iX9$iu7XMS!4J5>Ol>c:,#Z3!ol`0o-HkalhB\^e-'N#ZnMJKfO[DAXbB\#=J`;[GXD&ihQd\"?.]$.)P_5Q=?Hnb%1L`]CD4uG:,spl,cPO5dp^+`jAgg>?(-e,HH\+DD"U<tF$t7\O^.nsH[>;&?fN[*!-<R<bGF/qibH[6BHb25BM9cHBYFQMTgQ=mV%#;XXY78Y5j<qh%U&PM%'\L8%5gf2o$KQs""bZ26UOU,&5S;EIAFDGl9$';`Kh+7nr[urLO+h"@C%(XVA)M1afncUcN3$W$lD+QMl%<d+DbFFZoOB*@#X*N/s2RTDA<6T^-.@KpHHQbXT1/^u\2&s<2OP)KS-f+;k9>F5hO<RGDB-\PT;$-rmf[FfMOQe5l%N4<(TE0^c9%@_7/LaBPa567u+W&\1:nc:%#^HD<oFSi6<\rXdhkB*@.Y'Zn,q:^hEBF\3#RJP0767IoOf&V+X1QbXm^>Ik5maS$5YYse(N.Do-H%[&S(aILtJI[,ht)7(5H\7eePh9G6kf%ddIV_JaL9>'0U;r=P'8j+8rmj;'J[abE(`MM2a6NYpOdiMs3"YK\_&VGd,8N6!!3d"6.B%QnTb.eJ<d:]<_p8<O"1g_?>U_C_ePE(%Y\Bmu0Ne/B(!_'0GVmR&DQfPTV<Pl`21;nhFgONashI+rO8%f"N:[aUq3HMDDhX=HXk"%#5RKp.$l!nhX\0A^li0E"MqQZ$Q!3-X`_!LFjERnP,`oBOj1%ZCW%bf)%jAaRoBHT9I/H,9<=:bU4T;=2QnDXIG1k<Y@Lr8\rno:%>HnLt&/g8&8h]k6El\W>l3jeTCT\8O,f;N?%Z-8]?@Wuf&>oT(-X)A`iENZ,ju:^*J?/)i#f/B,'Y?Ci5Uj4!c?Ad<pu/TiK!/*0%;+k`S7F[J#,Ie"fo<TcSH(DN[#p5f_)2:5cCts$LqH`#&;>a`M#fBXbCEdYQ)@nXSSWD]1)[A]r</k!HQXj6E$!kES8V)B0/fbWo%igQX.^a8+b.5Y+sre7RJ+-?tDf,g\h#VKnqYFQ1-;7ICn:WsG5U(nTMXRE0DBbr?\eLWAd,&VgaBO&5)S;:?XG3XZm>_OLP!gf8l%8&-E+#S=Sc9L,Gr/<iGW8JL\G"gPSQYXoeC,b#+?FP9M8#quo9pL'/jXWRi"]Lr;W0gR#mQb.\O/?tAS,DZ8kTcE/*K<)JBP#+e*%-P:uHSlt$<aGa,,T&Mn0!ghP?S%p=^:bN*moqdhe,rY1"\%:&2Ws&uV.jdW<bs/b,9i-.h/h&T>>C=CZ,ePD:ben%hB4;OJ9?_li%@'_VtGX4<l(4&C/2I"a.g!D`,@A#CEC,okX8%o=[M-ZmU#gB,@\&)]cS+k(X>TNDdS0kd7OuCjd/:gfbOkb>!86<AkYjPLZjBDRb%3(ei`G1"1pV_`g6=DkVlC6D^\WA6qL)i[^CLHZ8j7f2YC@@5UmB7lLdEt.GfL!"LI7==NL)'N"k9P,Op6sPXeKu8Rp)&8:EGFg#X%HEH6CjsireJ[o'N?r-Lh8oI:@>(^6&KG]jjI^R7QjtmK<G%-R[)AAeg1tRbh'cn#L]G=O>\kg(ui7r-3_;O,6Zu&J=5&7/(dG8Du%8lpk/b!qS%,_O:hZS9Dk&1sc%O5sp#G/(FNJ6K?1_K3oil9hMu:R)O'ei^t98q0m[kaL%q,"U=g>1_&".$A!oc!Jr/9GX*64kLe/%QrJb'9$.Fg25OLhX6ZO9Z+;h4kpaHQA$djn-^CsJe#Vafapq8+^d3!\3OAgd;_sko7\hY9r'D]tjZ^U1@Z#$X9LT\#5&q"IQJ^2H%XhmR`TT(J7+[bG'"\H"?_9TFg8KulX/NQ$9HR3mf5a_&%crmV?NpDoGnA@3Lm?c['"R<j#q9b\RB?=Y$:;6Tn0?rR1*40\2,hjr/%D8U6,JZ&_p`!]1:Y;=:p)ae2rnSrD/-_YX?jU.JfhPi3"d=a@hUam,!jD3i2BfH^#)hB^WcYmL74;"<g,PXZ[m_MnOijD(c4?R>.%U9.oL4?$iPCGU7S_EJR(HYdOXMh%]MNH!.5,'UXYXAHKb1@_rK/eh+"ji6m[6lXOj1^tRO"G&ICeVnJ&80O'/%Ar6DlfgegY*S[9%BO$Q:!9IfBQ&/%:N:2TWgd>G$FX^Dhg?&qnDk`42)I!KaeMHg8)Srq6SOpn26lO/cE3M.#S(88C[u#I[M=B9LN>)euSI2tFO/^&5%Ocu!U+pU.LJ[`\(@_lBH[]jj5-)*qj^&3OhBl3g)-Bbo6SHuUYXMT1T.iK(0[Uh+L`":<#D^*1:"-;pp4RGk1P)AD[Pc8nX&=;%Q%'Kd.$Cj.8qDejq+2FR8\$&_ZL7LJiG<T(ZkKp@F`Zs^^u+fFoWZn;#;`!atVY9tkl\6=.Z>.o"iAq]l<+N-Yb44SnHgfS4AKUih:%@cIb*Ju/9j^9`573<2k]!O\>biY*0<0V=t*'V&4*56[:C0FM=F,!\\mOsNGNmKT9hV+pjJ8pHFC*j^fB0mncgU7L-I)c7YW0^Pf^%VZ8+\.9H^M")L4ON:qo.O`!5u2&dJ_U4OX3l3I_pMA6MEm>rgWJRfgn#RA4T!Qu!=":,.968HlbMq:>tOV<`t+GtG+)'I[:C%rhA%:5&^clr4D!`6?%1L)Bgr18UNMKr*UmW#q9gaV/h<=hY%9EEFiN9m'1cgK24.SN+-i3pBd,Ft2KZb>&($K7a_i*@^]gbFXX\^qg$&%bfKk;_t!f'Ei1*Bq`8C%hBPrrSZqP'CN(KW21S4m`4H@A6f9#SIK(s?DmQe)c>3_k_7k]\KSXd1IsXL4*DdY2i$1k*83%;LlpO6-%KY-ET?)).6GtIKONRM"XHKt1qXBGNOHW58-q6!0HAP2>uJE$kSa&YArllelUQ.3]bpHE-"=qTji[3D=jHHNP@ph:W8-A_J^lJ1MU%jLAB46J4J[Pk.8*X&)S?Pm>An5%M-SogbE4/<f5n$k7h$29#7;`rm5V`*/![Cf\_N!1Ukg,!,rSo#S7^:Om7<JugdMP[C7l*jjNo%auGmOk610.<PH6]5r'=]B7HEOim@Za.DMLoG*Af42CClcnUr0.@q;G,T\Y%uN`-@&1FeI*1'-jhXumk2:^lS`88k?cge6^*>lIk-%AqNb3ZOqJ)/g[L7`C_T<KRT(2\t6TL6B3Rm\gW[G,m'oXk_O[2pgr\d7m`rNEMd@pnn@IE-`:+X4QtR(!d[3][Znt1>KVS<Go/l5%ORXgP-"c90YfjKGiUR7nS'lRYm^j*X:rk4;L,8K+Rd6t:&g7B@F/X1%"G8.o#PS-'frfE\8]a(CYpKM)Tq)&10m8)dV/?8Seb0#B%f;:mC/#Bs.SO[haE9Q2j#kD9c4HEBd&GVPJj`S^AjG`-^&hI7(O$qT7)>?]9>ldhM^c+2&+sG-p#f;hK6cnU+Ea7/_dipI;/qNFS%ek(V*!W!+q%O#RYo3;`J8]YtdM9SNQ@A1HC$j&#B-rR)YR>E7l/`uA"8qRCQ$3:5iTVQZN4Rmf6;Y8d@a1(s\2%?K_2@mr$8k<pg%mY*]J,S^^OXcuAXS/tp-;6al4,l8M"aiJFt5aLte&;sX[L+?$U.]Wf.0J_'\S*#MM^U7U9-sEZsGadG\R;`ES&D^tg]E#RFCpY6!%$bs=q2h+jm.>nddD'(HH0cAsUPl-W*iG)_MkQ.6Nb/eKQ2N!aYK*")hi^;WfIA\@Ng'jU9jB@\e=ccBNM2FiE`GM;/,K5p'_D3FJ%P"_+:,X]K_1ab7-cS\Ft?W=E:_Vt8LRDXc*/'/%8q$tS<>IGX1'&uN6i)E^f$:I[Z@ra@-<g-,;nDnU.p<ZP7V@U9s,:hRTZK!\a%#=JQjC`eF5j:VVT7>8[\s0Y93F>Uk>L,;udUpP\`;B;)53)F&2`VOCU2BY<:LDpk3D,#JPpZaZkD&Vt)73DoIM96+dGK4pF%GnOh%CB06tpA9S[q$`[.aE+bS;T#niKhEk.AYlPq75bJ^\+7WFU`mbnff'@Z&^n-,Z<OG@2^Gl\]5\]qd;dii%Ae?"*T[c6T_qq$psB`V%X*s`/W2;_Y,G3N7?BjIPo^X"FOkn^=E<.0.S":&YK4"\Q[Yb6s;S5tS4gOk]N]bmgIS4B<Z2t1m)\.Lh1m_3SL5n[QX@k1BoY?'P%,DjsrQ7B"l%.C@pX4d`Aeg"r58?"b6HDnIt=dNeom#a@mecE4.>.J7m(D0@%*6N1?!iD(CW3_u!HJ%ejCY#KqVbSrKfFdn?*6h;@%&"?:YdN^Dkl<5bg$E'+08UQ>WH6h<I.Ao\%?dbqmn*PG3Sc\c2k@'.gQ-SEO*d/g.b(*G(O#!XDiA[%$7L;2=_q9M\-2%9Y;1`UO%"du@^fj-mh<=_?W:&IWA+i-aHmjS*5]N7hl4,WG>4'ekAjoKmc%RjX%B9Qj2,C-j.jZX).`A?66m-T+**Zp=8_23bfjId:E0,\JZ%%Ja]<NJSQo`6n(q6oD2R8NSJ@dZk6lAd`.Eg?t[cC*[R>V<\,+BnRM(VD<>Yl;@pM%&)l'4CF9S?)CZ*fX$k=ODbTAOb%gF%*I1!%e3,6dLZP]i>DL%'*@[pi=-^qZ@B%:>ekru(Z.le'E;eSV+3N&pe3F,(VaYdG9%/naQ"^:S65sM$YaQkP46*eR93PI)3\&aUN5,,K%@-AHu92JT%K7U6-B)\JdY<)8(2oj%.*_7n@S6SWGXA:;n#GPBoaH73])N#8$D]9TM:kpt$,]k>pTRu;)''r5'I:_BQQrOJ'Uh2.W%#5YlnD]%muW\l$XX>f&dMELqLSJcTM`D>qUAM]Fn4:j,1EP^+G!`km%_`e8Y+59sLb=:'>9:7]\SN)mG_\H%I*_h1+JRtJka[Vt%%U??[t"(rAXa>A2PEGEXu+_TMo=2Re..'84iOTS1L`YYAV)E'/W!'^ZC%U<t.,@1ITU3>I3fF<'!<sACH'LG%c9@s8Ma!-40WF:SJ%PYo>]'aCs3?0+=o[2D9fC91[_VIA6MJLjY)/W=CUZQaucf`9O&mI[C!#,"'s"u$P&4h-_GGr.(9G6$ng>cpGX6?S,BoIP&-OT;p!%8IiNsA0U)gQ:e!\lf$$K)JU_^b+CuMJ(D:-D3PA0pl6r_PWcni*/:>C>4Wu#O?X@,>Hg5gg_k9iIjP9=j?]WgY`4UIB?1*`jj((6%J5U$1!dc8H61+X!rTa?XFM)(eW@3f)'&C;!9,SGF\7U1B'hO>K`&tA7a&<+523PAk667Dd\_&<\Z&nTlG609bL,I:V8lk<ub*6<G%k#>A^fLq&VA4'lq)+=_dnEiE%pK;$7-r#Fb?mbG.:I^H:@p"3)"A!#7)J-rCQ_t60<P?UE_IpT`;PhDn#qcm9%Ak^g`Aj"/$)#;D%\0dpNP(#9Ng6i]<:bI^tBr)W.0fB*p_4WPRYJ\10AWY`9(Q#;@[S<43m6n]j&r_*c$+O!6%V<EM<$^f3SZ3E$=Apo<r8QE7JH/hp%9dFa_N)gfL/<T6r?IZ;Rbpj?IaY1n!Ku2jl@N,&1&uY89.G'98_,'-1-<[l-bsg)e\+3cHKgSEa,lL4>0!`dC'2ZGjo`@LaM=_M[%D;SoT3o5nX9aeZa^BLj_M8[YT6NOuPj-h;-CLL3gDJBD\!a")%(DCMP(@n*=gIugdCW$tj^EmSM;_<TrlhQBo]M6;;Q.2P\9FAku%:4ph&^pF6QQ-Z2i7"70JRY0L_e3^M1P,R&U1U<7N>Lbi`(<sgnPg0?0MFjn('/Rd@@>EqDp;b"g%pgW4jKC.uqlfWc,LB#8BT&R5%HEnEu?e$oXgg*]U#Wt\K/"4"/WKc=lFrX[A2sFib+?+aGiCU*L.dA(fMC(BI,=#Y6it4OS=X89BFO\3i<)#FY:._>i'W8>!DI>qU%+QTPKmcRH0^k"K7diQF_"0,e@@5'8Up]7=Jm#E%GWj5`Y=-\#\O`G2F)?;S]D$%M(q:''oPRbrUh,A&GCLe)m%^?Y7),dW=B`PVu%W=KPmo#Cbpil=5frZjlti*!Sf9;:AjDC<fF&hT>R(+6aZQ;=KM5"N9I`tVQSU)X0\`/Y&Odc1#E:eN+50rS01;[hTi#Bd[-+c9^/%8q;LgR-q-]n5K<9SWB.W7)_i$W<'<#>M)?_7$fVO6WT?bOQae&.UeDIWd=dIQ/@1n<dL*?+`o6U2&`Sd8i$$:YC(k`F;'VlJl_1#%\aRPE;AYutjo1_D<k6E4l?Mam]/g_LouqNsL;<YtPYe#[%F:k[).g`uTDVljJDI)cD'[2I.7j-U7,2[(_-,$/jBm@c3;O*gJ_SQ5%!D)q69.K-bYl*&lEN"[UcT4lj\O^-L6>7bL8;+oo.8E5Hbo9f;Pq'l(PRHR>Qp7b"d<&/]W#GT22nGd9nbWLS8pEtJ!F<\Q7$+P\%L5O?U):XT%^h1tNMWWs9!)<9b/"8Cp>SV'5%&teQJJop>!!a['K$=72pEV!^dsS+b:!g#rh;ILjPq*$SVkk1"Dt/2M7-"CLa+2ut%$f@u?^4e+7^!I*C'1ROMO95iK;^j&l*s&[@fg9aFVu-U%2SL5hTLbhXC5I"j[/dbBBSs)gi25-.kQ^&V+H6A:7IPB:m5&j`)[)W)%$(Cq6\#<L3C6NJ4l]#e*)j7(JY5:kK33(PWe]WqY2M!u&I2R&Umk4\qj`UpSqUDp9P"6_`X#(I2/ecgcc_Y3;JHP1c#0!8ETM,(a%7S\5M"^5iqX2t(CP6OW"@AaC2i\G`5.rRgRRob;Y["qgVIp\E@>Ib*>hBKNGWLgQG<ON/Pj&H'tnnZA`Og!<#.3e*);5/jt96Xs(%./JlhD++T%i:YV85RjTq=q$.Oc;9YTM1eg(Ks29&8m.]5UK>Q?4U]mZb37sW<p&i<,pHV@U%;(]b"!\K1K>,da:6iGPquR8OA&DD%+K,@`S9kD-D`PV9$S<ZT-lP%DP/)?6)s(YHnrpT\$E3+^G47_d]-?@_%A/II"!_$!:LGWu*i'>/P:@2'o*'c3migp&ZN?Ar;\R=I%@,#iNHS@XVMJUP;Z`?tei':bJCY+FL(3!$L7p=A&_6C1)70)E4rfY39CMtJ2dK!@K#G#*L^`&S-03aWS[jkK)@i%BnZ5>(>15iga%":mC"=(NNA,Z4g-\',bREbEl3>%$<p0td>b\pg7OV#u,gE#S?('h$[';36lRM3U]r?mk^61*@.q_RHR[.ET6a2_$<^lM:npJJ-&E%ll,DrP`FEj"SAe\K::oS[JE2@Ar0(-o*PUnneWH7!kW%]+W8a"R>f62O[oLZUj+2<TB/#qB(%C4GTa[kZS8f9/!#<o"ug($>0'up%*,LJf1^c+]Y>\0<<'Uue(D03eQMYG%qH"t\aKjl@at('N;rqf)[4.H@66JnM@&`b?dm.&TRV8\J"m'MB?,/+.O<sZ?c>C9F\dDW@%9ES129>lQYb:KW,5jhni9sV_'!8h,cK3$L[*T_%?mbNt3Bre6<\DHdPRq>`.pq,boC-%&-A65?i+i_jt;70\Ld/.%rBVu,H-s.9T%7\uYi<H8:J-Q[koAtX83Ah>iJ#FFhj^R>6i>;ob\&P+sgQ+2"[Q!Pt8Bg$$pE`3*mm!e\1`>@5AEZ@=.'+0c;EhHhp0]R)$r7ZMV%2Qm#>I/]G6;6T#AI^3O+Ib+[[k$'b7/sg+shND2gWMJ:</SjMY>cO=*P(Mq&p=$dW*DG@R[-QG4U<@UllUp2Z9<P/C7U%dbZ2!PM%OW@0`,jCV#>u+tuTCl5RYIeNb<U&]2;iOMG>F'#EoAd$&h!uk.#h>6cFim]:G?)&i^ldGsA1lJ/IEB1_l3h7<-2Ea&d`mj>2Nd]c%/\;pf@G7i#aC>XEM8mtj\)ch4PL!I]:L1tmY[pm?o8$UO:0j02^1CC'7eQdplbXs_2GDb8AM2:\]@rQe?i'BWD[-*aD9Km(l]th9%/S04NlD`*+OY+0`>@.5njn"L-?TZ[7_qK'ccJ5R4>P$./qWncaD&,1</1mQ]qIum,?R<;mkWI)oA*^cQT5stEjt)^ss&#+,]YF1:%H*h<ZY:[;bT'9ke<%[c;I9U\GA*B4a/I`uYZ?e"0r1#>P/)Fk#&`ct16N4A/j/4Xo19kDbWK$Tl7CZt.bZmBh'_SGG9bb%KPV)c0%GhHeq/\)(%T1OKr?$p1"bH;<A[)0$FIAj23Ej`<fW%Ast2X2hn[-bu,lo!ZJe_jF93J[M`lP-TQFDjrn7@e#S<+S0l^\0CAX"(O5%c_PdMZO\]cQ24p?@`s^4`/'u(:>*cb4s74Df8rE1<49M>&de9XX""XKm>9Q9h+2]h/_$W*-YaH`<b8TcS#["Vm>G#m*UX\J3u67n%]:r<H'lD'lhMALfm3qS/MDFA(m&F9hdr'@Tj]H]kZe33^rMVf'l+LY;a3*lLd<IEjop/mCNB:Rld]&9sm<;NIDQ_]2.F6#gb?s.(%\QSE896)\No@eYAa-M_2"oR(Ll'CW\/+SE`cXs0&^?dog\%N^:5IX-D7<"+ZYGJ8Q4L(QZSML)MN[:0HhS6Kd>'i$0CU&A"U8a@T%QuV!^%GNLKC?ruKgEiD2Geo'9(.A1bM7,n2p1pZG5<L?og8<du-JDWqc*+*)r9+<Y/V'j.',EDujO\pb-g:6p;`(>]EI4B`d9p+s%(Kjb4R%4Q[2713='\`eVdqmq?.H[t[Aq"S5FG_2_ri8E.U-RS=m=\4`>&e_!W^Ck)U&2DjV-q)\Iu9-)<;tEV\W]"]J',5mX)ob'%`t!PUm>eKSr7.Iu8X]S.e7.noNHE(I2s@,GcsX)AbVcR0qDBjXnKM)aYH!")h4Nn^QsM:ZFf3ik?-h)!'ae-ci)c`Z77C$l;(60l%1Lc'g^ejO$BX</r?Ii^G7pJ_fR%S8<kKW\<$OU]_-eEfa:NOZ];YH/F'F*:`CO;LK.LiBe]o\O;gPW?,&Z&hP$7?7g%!=-+r%#[L%L"6RWf@&Q+A>4!NR2@a/;@XW"Bq8Vcj*Wp+DVM=MkU9]^Y0P1,N?t.t)lIIJRC)&"l"D[='%C$[7a#<;Q&\9F>e6(?+*r'lNVBVu%%-gVLlpsP@R0OU;3&s;%H=5MqZ87)M+lcrk8O989q83Xth/\8<S[>%gcAhpD!,>8sT,['";P+(AG$%'<)-Oi,p6<*Z'0lB^3N)\G%Hr^-/YJ^:kHJ^K$G4d?]-W:Kp4Vrn52X5BV&_[!-dd>F@'K(@UicGajgi-20^)s(J>L?_KEkfaOhm*gK<q=alMs6q0/QF_"FR(me%G\C1B]qV''fiV[fC4I_>;lgcnZN,'#H:^V'Knd%2W3BDCkEi-&PJ.bM-H#C_XCRt;1qWeslsr$h25liSM,p2)JMAdI!c&sZ[Gqpu%KUkGFd*GU[G*Mif,,>D]!ib"Sdj\eK10kht+7!H)*(PUs,S-kAa"r9idRL8PHeAn96UAYhL5l7>a:'J1l"L5,U+$9T7L+@Ka6=Ld%^hCbs%b2+^pse>cnZJEiVPgDqWEsC-5KZ<H[1&(cWhE0.dtY[6--BY]0VP+5,#d5p[j[Gp-Wo35Ni2]+QVRG5359oa4+Gd5]!Nc]%M>F?lc6k2A&7fe8@],HP2aTaHfpCu:9L@I+`n4lQ?IC$"Wu<:H.Oe<T#8JiRlI-X3&55AOoDY@38?=#i>kJSrqtimsgB4S!O3R*=%;>EelL'2!+L55q+&c9k^fU_#d"62nhiM)ulcZX'G`%gmo["BJ6)hD[:)**'0Gj;T"k@'0+h_O<FWB"+5j7*PC_siF#U+VcsG<Ee!%7,dm>W6)6D*AM[QYo0D"("'22m2@[R\tHh:X=VPK=YDSeL4>[X_Y`_77s)3#^oW<4Iu7cQ\9?b+BTe?3*n$pG`t#ttG.0r7"'TTR%OK!pDb.?h9[89=e5=Q:5`I\U1E(^KSHl+20F>2urR5A,k+NnReXs6"]+R!VdNi+qlc8U<-ZYkD>aR#*g\hOam3"%+M(*#^rgKOQf%p<.WlBZgmsRL(pPJd5qX#e'*XQ.`GI[S2t:eb=:Xap\pV/\0$XFU(FF+i/Q"]cEZT'cBtT"U`Pp;nQ[<<dl*K1)kAUQ<cX$<rY8R%E%2duI_gSVDd<+S"7taMjL(Z.FT/:l")#7&A]q6Vj($cP[2Ih!"U@5X^b.3_d)pDeUHL+G0:#n'VgHIlU>8t\AHrpn"@UaJ3_r9V%>e0;R<D<ZS`Ys6N_PaQI\CB(',F\rC]XcjsgpQ:M4kH!:AFSb$cHe+X9uBi/TYT6Zj1"A)]C%eg"UD'_W@&6*%'7Ga(cX2)5k^,9%rhq),0E+W'T=rjT(V-u3Rc'F;/ZO>O'9/)sOie[m;S`B#F&IRf=h,kFVTDS`J!!jH-.d10.s6BbD0792n2D<-Z'/l3ZBu&tX9/Fi%$]<KU'fOT^;_OlVhasZI[Y2-Yec.!)<u'NZ0)S==f!+G1A@,dar)rfj!W^Lfb6B(n<<NkPVVq[aR*aHU!cpT@iNiXecANtb[3ajF%JQ4Lo#UjYdNW9b1'Fn>f6.JY]&f@iAYIEkMWl<L80X,A3.kk@8EbsD4W,3"5Wr`IUXp,0aW-#IaTX(O0!J'9E]=$#`,hT:I8SuR<%IT+jBM>\p=lb^A-\&5s=^bL/oS=M7$V_X;&?JP:^&BPD5bnF.R"@YP!>4%sT<1a@ZQ>]cU+57pheK;(Cp:C]lZ:%XV8`dh'B/8!%%f0Qag=&N$75c7Fk\]Cs.k3S^L5oUs.K"dZV[06W%gZU%%nT@.=1.>8u(&+<\<(58$RA+E`^nTrl?!Je"0>;<3-2G+A(*@@b@QeNI%[j4sFUJr1nh^CMq*op/V18$+jE!Q!*HouGmXoU-KEQ^7.FP=@]H`n0*G-]mj(E9))%FU4i&'=c$OGLn%);dr`Bj5W&aP(O`,C.aQ%OY4'nK4XlU>fu`%A^80i[55sp&1g(c'r;I_Bi*@BaO8"g(Rco\#G-m:CtZ4)JYsq%#G.A(ZNXE%92aNM</''lbu^Sc*o*?b\6RoC%'Di79ipD#E"\8GTKa"k_DpQ>N)-_,=c-+8j;\MB<'uf>7f08=Nj;(*_]j+:VPO:-[-VOs\>iT7)hDrL@Em@e!([+CWC:ft]iIXRc%jWKAJF??"2EhMH2J,HX&ogelMJ,_>)q1&FtrqmjTPP"/F1k0[?j-/Li&H*[tWZ$u8F0EM'qqqDJf73_15Q7QF^-DXus8(&ko<82h%kPsOKk5<!lj+$odJ,ZoA9)S;\r]g>@5Q7^5pM^*1TE!17otUM!O8ne.rS)i":HuU8s7;l_m6CUIs7$%RnDF37;^VJ=DuT,Gj6s0f%r-qb5rqrC<rr!@Wj<)j8+4L-]<l$]]qd>nA9G!r97e[F/[\#//NtZ:n?M(/CJ,]>O%;EBN]HusIju;j[iP0UfTK9,JbC;V-9Y"TM%b,XM,(Ji/f_[uE`L9Stms2QP`?3J(d@&!Z`Xk&!4<]-_#Y19m7&S]d7jgUL2&XDZ^f]0''M5]3Cc,PVtVi%G.IpNpOZ0ZbILiC-q%o_2LueA'nXIttnD-*0'"K6iXM,5F<C0E20d+"#m;FW2b?dGLpOrhn+lb1_a'T=WnU]C\o!"SsWc.HsW-VLR4Qo)2MZr9G!+kJKmj%?+U&AWrJ]@r3QFh>YF`sp'jAa/KUYW480`GWEmORSF#@QO>H>c+g=0@ldSku9S=t^pFQ=&[BC/'>8N4?hUej8@2I$?j@P``,&&jP%a0)/4<So1oUZa-&/X_U,jP*[/@)1fA:S!PL!Yg\=#N*5Y:^1H_X,h'[`NH(KL&q0[;V<8APXX2QdM>o+<*`4'b;^28qfAk0H*'TF%R\D2Z-0O139t_1%)T#`PQB;jMXSTjLBm-,qdu6DmSh(NJ>#KHJ7JW.$c^%a`?0fb<WirJ#PK_B\A11?>apOF[hda4c;=TjA#ipJo%n*,\de^-mJfp7'<G;XJ"4'-Jl@Pef?*\-n)1RU^fm:dOU.VH(T6FFR.)fj))kgGBGjQPeQ8&p>a`gFVOlQf!>Y-st>@G=MoHo2mY%ZRJu4%F["<Rk6761`Y5UVqcR\l8^coP3'GFY.UNuKu''i/tsL^NlA*=Ae>K_bT.bYcEg'Vj"e+$RH9?c=K>T';pH]>;^C&jQbu5Q%L>ip('^J&k@Kt?H@1$k/HgFKX-Y3=$a(]*cl$66#=AuNq'Q%!0Pr6d:$5+?3Glc0J'2A[U?Xps.cjVbi7"k@!#YnB+MlWqU16)Yg%1,P6&AQN)_AVX`jCk$'[WIDbo,^tF#rc'/]fMcH'_N!2!38m?*DR^93MG5qaeeTo*h+sOHFoLp03M$^00#T*dq7)M8/qdur*b5IH%n$1*81Xpe0jL;=jStdHOp$Fi<T,H1)Qp&B5d,9QJYfR3sK?G5TBlXjL5m)47*U,Z(H-jM$>oe.I;Tg$pBkmRKc0/HjUZ!TLN.([!%F?X[cY+F"?93d68FXX:;J,;iX@Qp#VPGcEcY(j)QB[rBB"$VZDPJ:R`l_$!n3oH9q'`kI1V=D)OL'!_,@9n/]9V$(jiR63u3dR5h%Ea0'F.oZE@M?@j06HcME>o`9+FnH`dFdCgK2>``@U%P,`#@_90e^0RAAil6C.XC;>)Hn4H=/O8>oCT2+e[Vtii]X5I[HQV9\.8@Y%nJkM(],KCD@u8h$>io_P\E:D>YqKrL>5>/%CcRi[qXtPGiQB*d+jP\r0##1lrTZ.!m-Qqg$I7J,duDWBN7Mu+V#E1,d4o/EAk<Ai%0r3Ql6K;e0nT;C`9ruB0SEj*$4.nGQP<Eembt"DH9ro46<pO`=9AB[7/9b]&#8/[UqS5\T]>R:nWcG5OdT[*CM0bX;?G[Gg.e:bH%^GT+84IJo0i[4@F1KLN1rp`.rqRohaj!`LQm+/VdcW"8/o>rAO_A`GI=JTV!T=Bb`=EJ1f>$ud</Jc)SG`+4DO8Gb5$\/!"o%@](%i[bdX]EjIcofd@1Y0<G8[+kLL_>sDM:UkUsIP1E6:K3l\^CjTJ?]"*IYJfl''`]l?NaIqJB3t'@:QZUL>'pKjoKR=2]GU[e?+=LH%:G;Vq)V>e:/Ss[8itJW4MtF2:E5ku>JGHG:TMC2XLCLVo?#AgdE?3Ol`HBg2ibQrpIc<Cn4^ko![:aH7l_&QMglm6?Bs=9l2Fb8Z%q@p6`Z2aJ%>Pn7Q?Gq?_5jNFCo(BM+rl/HW&TP3s`7ar*ESpYQ\01a#<KTTM3`7mUdMo.rbhr'4M;Dp3RdY&Kj-9>`\A7sZO-&eU%G%6a(V<0<f+5#]1`nK2qM^+pq[j,VToh17cAbrQba!3\Q[^ZQ"DVPE`rDj$j-@*F77rh/WXSlmkBN.\I^qHJHMQ4O9B\oQ-%.(!#%*^m"g67Z'O*uc1Wa.ZW>"#m8[\\Dg^jQpF5]2$7(ajI?a]C#_cBAb8t:LhL\2k-#3beQ-k<rmfl4sdAsWa&lkb1sBdf6dT!ZVQF)%T)(]8<@2$"#sP*73%,<TQ.snl_1(0<_5gUfI]0qj^88<J#GJ(JU7bL/*h+PO5sW1MW<2S9lWZbCCO<WuMsJ[B*u3[p61'`XqP.M\%&7b*'^[$r<!pe2El]9f#Z@&PS)KEYn"m9l:_WJUn#Z"D#Gt=Y!fLuANXAIQ5eJVfB.OYi#@#56;(n6SDo20MIoj!b)_;]Z-/$?CQ%W"L8HR\+Oa>sQEr;qDZhWp;Cn'-aA*m`Og@7dGghOK&2]edpT%GN/:BOiI5d#diT_47djm#o$@Lkft!%*O$gu$!galM%nSVd8HL)%Rk34ZPFFN>>E6-+6&I#7_N\jcip\P?WORek+FS98O#/g(H[CeB;\NeP?)cpuZ.\]C@ZD*p6`@f#Q;E/*p/^0rZ&,r/A\u+.8dql0%&q_^:`4<CC\C>=PU&qI:WOUI`5&QFnBJo3k>E)"GeMq63\-jYjdn4D:aW@CYam.YEeXh)uT0Z\.>I?UD[YQ`JB6i>:l_0?:MfTh&%*Le'RR5QVKYuYW\3uo9kXZqa&eg"5CqU>6]^o*0iBudOgDBl;=gTs",FBBTc^s/fo93n*0j^A4,=IW6_#o(NoRQ%t9jtj9d-`YU,%`%0PhopjCXSm.9C&0S2+\?3fA.rHN!\;lWBP3'5CV4./hRe#3ZE0UXr@4h)i77$fWF+/+/cij:*%u0Bm"+OupZdac%8A.sK*q#Ta%4gY7%+@*Ibq'hF^gX(-E5\-5l\47XQ>5BGhM!55F,5O/[`VjTh!6A0+`I.5?6jrADP0jI%aW8EN4/)n[!Q##r<IV'*_;5bU+Ml*j%>7_sSM?O(('1K(O(/>NeM%_k>"Tb@HA>97rdD\F*k_7_n45_/a)KbKmoGdiR$B94Z4_?!b&Xr\[n/oMn\i:>#/+B/W2g'95,gO&&%F;;t!qO+?LKBYo>[7%Bihqih2^5+]=PLk,^;N*MXE@.h"16s?Bgr5sHP6(iTY+-=?07ZEpf',sl_k0o+`.P47lp>A"N>Gmb_iG\F%'XNaC'K=[`Vf9Zp!Oq8;NgCRMklXkD:1YFO&9VK-'NQ/*`U#@2/XoLS.5na0#rS^.c5.qsn1&89oc*L:jOq6IO_=]-NSfb5M0Y(5%EJ;AcAr'pj'j%OY;$<@.`Nr7(A<.XPh3HXiiE=6T+1/C]"OFr[5[=a^\KX)iiEE>85T&4<b0mVH)!T^>N>.rV8C%?HUh?M[i*<p.%buf<pl&6V0ddc[!`WL+<**:i=a5tsp:[XQo(<U#PGerYo0n_S[%*FN\JRc68jlqSr4L"F-GB"/iiB/s2@.V6cGG3DAi*X!!I3@>H%#NL`!1N]qWb3B08g^?cHaaCn=pq#*dO7m;l(IOUQia\pti*iucrU#XU:gVl=Y:FUCC&^XfY51)oDQ,-5O-]7l#haQ10mP<]\&9Y?%F^Xc8'%X!c'S(fG7"/7o!Yjn][0)F:XWpZL-/HOHq^9L\Y)J-0\&;nrp+JmXqmXFsXojX7-L+q@MRLG*=8e?9GArtFTje]V.GU`*%jGf<d?\gIU8IkD!9'"-"37@.E;m35^g@,K$a=Zq]5?m^S!+JQ?mRSe6l'?u*Od%$uSl,^k;Mp!=6ImR"CH_?DoS\so-9WN>X0ZZ+%g"&</D.rC\ThW",plIn,g",<1,[$o)P>[Dn2O0)!V%W=*oRK<.6sLr[Qtop?,Z?9D?(s\W%m#qio_GIUkU"ab]d-/gFctCUouT[!%2>XCR,O1fa'/rQ9DTl%;W,l^7d1B"01*Mi8+dcZ@DiYW;KWEN7]M0#"TJB=":[0Zq0_OYl;i`>Ol;,HQMm0Ar(I@L.cTi$X@7XfF%1!_#&Ld@mcP`VKDT/7bIP+K%Q,T_OAmsHGqE=gV7T!Y,Co*+8Y',L)G$qko\J4o]\8AaTm>H=Rq/2Pb$=!:.67.&+h+DPW0&8GD;%O;1lRRThlXFjUq$^Ea22$R7!$VGgDW8YYHr]&+;Kh<BhZM=`sKiCOYV?X.1)'HsK8,Z3)>bBhuVq"uCojqN3ra=3u!B(6T/m5`/R%Qf0CC:M'&1AtKK-@J]%EV.>..>a[:Bj;bMO1=CXHWK='F&Th'SAu(2sHfZV<'N_Wh[m-Gc=0p?09?_%aeZ@7XF*[9&r.GN"NQHja%5.e%(+5em*-ao?,US^!YlfP^EQ("ttA3F2@8k,!:\LS>J6C(FL)7%6ZW@WliUgXYSW0(:(XLZ<s7Rl=hb4On)1NGmcAc[>$)Z?pC%Ig/E`fg3iA=b6ojBL`0aUR>n#^n%3X\1G@Gl4LtT1*A?4&o]um-]Xf+bIT7=_Yd:I^k^'gYHZfn4C_uD(10@UA&c1=/?ZiQ'sdK'%N"]Nh0f(gS.AD+,]`#L;GKhWj4L;gbP9n&WjqZ@gnd8U,O`?D3,p@#b^Bd6g2rpLDa,aeBLmj?bPK;X6QfKe@&BS9!)WeeS8pUOV%jb7ga0H>NoGd?n73[Mc#T9A1H^*#OGMi!UhZ_\tgBs6TBYc<M[Ya-h#>-bqDE1*Y7Ic>&f5EV7`TRdcqjt2B.&@PW^K-qH$/Xe1*%Tq.oQKAROiYl\`s*X%EhV<S/M'QkAm@.W@&;WE)6]G[FIE<GsL#V$XdLm"M"6"p]n"n'2,.@(aEPiYIL/M3haPSUr:H-R3?nJt@;%p)0\s33i)m-nd_9>=ss7K$pE</)iYG]=oug`bVmmGIV3H+EA>S+eui"Qou]s@"+aW`sNuQXWotThSUIm!q0RT1#m(Ui'$k7k48Yt%F#'lA#C%mXmVn*P1MD/MO?iO]7>&ou,i**8o`u0)b$nVb+9:dY$b8pl3GD;$,I!=%h&KHr!N2?f_gR]dC)&mLjBUKo>_@qRYpI]+%\@">\InpmYU8t=D9[A4cUCTp+Q1t<$,X+"p92>?K@*)]E5bfnkQR6LWkWmW,>oP*LG,'`0acUiGDoh%mL+J>t:pCKeh3A<10Yhf,%Xr?ii&HSF4*5,S$2;iWu(qO.8UHTSc4Qf6T]%2G)e(Xod=IBp/jHb%0U'!Yf>fPqOD2EJ8*K1VAN>=da%R(3)@1Pq_>N2"5*Gc@a%:CiZCQAk=01<mD>qZUU;Pm$@C`alP0k#ZXNP>EX__'NMDpDD4Q5TmiNq#gc7,=.&(@CGB0`g#0e*XVGXr?[WZU4DP$0dD.q5pSaR%A$Kod$ID.W+EOZK`;UR>moshVf!nCp3(sR4"O.E3af:!Y@g/4,,o=n4VnN.kF`9mu/G"S/Ig:bI:'W`u@TsI8lk`P*4#eLas%-t(%Hg59X3eK`8oDsStoia%?fN1aLVct-O`k9Y.#)U<^0Ohj@iSNZPiAqf$X=&NaJt@jT#W`eJbR\no85ScF:M+8FM8[H<>CiuNK1:IY%.P\ncMrHe2K1^_1.hP5'U>`HF44kfp:kDDn^)AGpAsjQ&MCj\9X3]Q&3XPO_Qs7?Qi?ViL;)/G`Y&ktR+OP8-TIZ?3[7kqt'[K&u%CglA[5pW_FU=dEBOeB04'bQA,RbSM3ZX$j^,j5X/C_t\=;[GO1,Ud`4K1UZHl<Et%k%UFu,>k'X/j&rh7gtErjbn"JS=SgK8'X/O%,]'WOZ<VSgL"-3[,cJoq;8',#&n\$ZIBO8TE';+@'Xu#Ya`J(ccu-A>kA44L\Kj5G,j>,,fSF[HP$j-mo[o<dJlc2gJP(Mu/J8Y<%E(P"a"7`(!"mJ,s]qL'NJpP,3dp9q4!'_iaqhtpU^*3Qa-%UN?Y;\hUK2.$qp/8h!LH-1t>l?t9Podho;M(?X+[qVFcgPUA=XC^3%*a\9W.tKOa/IC[u?"kUdBg=17X.lF3Kgc#Lkt=s$X=g=@cl:N/R.V%A0N44?D<rC3YWf]lLh?8o_os.^&rXqdHk;B4f_A]j-iDJ=%lA=ACeMtg(?%O=]ZXsr[!*jWM9A$h#[DrT+?G_Ui(jQL'U4l6o`7kcZ$#[rc(_6'<e$B9QWe4fu8HM;k7??PVS8,hp6#V\/jpm[`%=/L^I1'7=.5r(apH<^_H-E,bWKI!cqd*(S#\F:YBd<no`dEO,`KIIp;#B*19?\)e*eK!/@CB]7&Y8*c"^7L!'cqLs,iXjM$#1eX^%UZ2\9ahGK%.:YIRen;^@b5MH-hq-mVf(ZQ<j$],D,-t$a'aUB;;W*H=:^>C$[2X?;3_R=r"=+YFm1iF!D96fQi=;"Wb.!8+eiH>K%-lXhFfkj=5?\2h*eN@(ZCeFhU!0RZbp)M[d?]6meOA*/>5"OBn1?$CN6Yfm=F3R;_q/+4i^9e*k[Y%k;ZMZsWA6+\#6lj2YY)EnO%G*#<mY%.ti@gAn7[1:96bSok_dhXY^0M8j$_MeOc$*m>7)%Bjh-2?l4fC_BKd_R?jb#B0"m\#c:RLs3kSU89u:YmQG[=A(K(P"a0%iVkm4M"DBUl-[TZ839OnA]DqnL"]g4nN9/DfPZZVW83oAXOqIlg20kB.maD)fra4*4<M3^@;/\AKVO(&PN3,L#9=AfPCs5O&3FV$%`=5W=+rje#O<\uqNc8r9Pl&B0,qZ#T\)LXH(\0"O>7so:.@R?83#WkOM(K#\;\BC`.Yi,O?Cr)N,SJ\/C6$RQ,SKOE@)SKY'Nua;%>H^hm!$i1V:PgT`MA_`GnNj(U,SJga<G'n/:Bc[r,SKaP80ZGsI=-AF_S_)EKE2hp;B!).p@7fQYt!@X/.sjlJOQ;84Yk!&M*!QN%PsiLGKtL4I0&V(T[np;MWpCjjTUL5__:D.4h8(7#_k9L&*ZPeLR=RcC<OA?T<Z#8knZ?+Do90MEN,QBnB7`3Y,Y1Ru$+@#XcQlb<%3Gs7W]LZ_d"'_YRI#u_OT&JsBPFu2ZSaRW3+ph6CfH?FJ%u)m8>84@nH@:CO*Ma;LP(6EHQ\]<]N<F2@N"TrMTKQO.`;"'mJEo'6%h<N-26&ker/<qdnlgjoA^NK$;:e1<?mK%DBpAUAL#$*Vg-]6<EQCddRT*4g9&5(UE!27?OQ%oChShL0N-)dCD/PW)>!qP96@&sU7%&p/`(K3'7]'>2o<mND&*gDB6ZD[3to^2o6DE_811:H=D+C*7tu_kFbX4rk%FY*9p;7Ff^\DOTQp%4862lDY9qohnJ*:e\C^r0c:k%O^hQ?EB5:g!0k*0C(DbqYlj;!%hEf$mHof3I,nilhfMqW$3.^S@E\pp`ulMO9Xrr2pjntNmRf@1hl%gMoM0Xri@5Lh%6@LlM8X_A%pu/DlC#b1hJ8`;Q.(kHq/!<=M@KFUXV_5,/i"5r"1W^\W0iL.;*)%`:fTA"CK43N[B;iV\W3u;SYaJ!W(m&2!LbR?n=iNOJ-_+N4%04/@[5PBRP^8J05-l`X%iZZ>o]>jG7IEtmd4jg"t^%:t7]B7:?e<P>H7a^t"?MQbZG6;QAq.?Io0V(8[%.umIStHlJpB5oQkFUn[%4lL,dZlNG?-YscTH,Afr9N!O%=?ZF,b\McX_L.TR:UnG7@,L<C5%+Q*5@i;M#q4/.8jPa[hk*9P?"k_N\L/rWiFQ\[0GY!n'aKG8%W$i)Y9ng_W6.8:n3[m!tFUh8_."%.JO3s5I_O'jn$=.p*plge98f^@6%XfWY9%cPR7mY^DcOo<BN"i?564MEol?qB&6O)lm"V-6h%S.tT)TVS7+hBN.44pp&,Jrmj7#r+dnUu:D&cf+o,KG6O`&@U^21u>?ddSeF.JX<+@7q:be5@d8g'__smVP#RaESoYd31JHF9K):2%V6I'KBIRa\%9<hA@,s?5TVSgRXV+OYVldIA"WIWYI`4HcImVapU9NHm?P0dN&VY'9qEo8P5t'\#jSR3[JZk3Hq:X"@&I$_`]hOF6%$AD,AEg3^p'Xg8+*XWPi4gDes-c%CkV6_I&CcJ",%<s9LR124r-OFOJGQC,Qn\@Hr$O(*ijbQTkG[TKKk9dF1'[bp-s#Qn,KM<ni%FhBP@K8+..WtBS9,/83UU;1'j5!<52Q>ObSmG8\?H#D#RWGH"Jp??2)9"!T2)o-i%*nQil/et=OgXcLidt$VfmWtq%<Rm`76Mmu'%YZZ%j%Y&DYai[F#c'DXP)`88:#i31(rh_loP22;iW=AI)\Yo^M$=/F*8L0")@&F:9()na[9sZ-I=e2MGpKV[G7:0l0)*mR@3HipO%hS;rR/b_X`)CR(?Tr;Nr95P2.`KhJa]=f8"WE/W%.On'D5Z+47lBX8nU>?rKMCghhdstYL-n6,`.S.G_1,Vm-/8HC?cXEhfTW"6T%iHI/$:BdnO/\2D7^&QauCsd*&Er-uZTUeF_Nbb)%5uh@B,cE2/##=X`+']PnKM+XZ9eHTk($'Tt?c?$qeB1Q,AM[@t2GOKeKgdO+%W3.pV'S912P$ds=Z(clU_Yc_%5EM9unl'CFYSetH38'H+*(t=@_&O1,/"G[&bn_0>XIpmhf4Lh"4GDRUYep%3:XdmmBkohLOe1#1%S$+#_4%J_e/\)d'btfP2O/.F^I1hC"6;?$dhF+(Pfrqk1"RqY[K&?T^Ds]8?QGe^.QhAE:P^41V*J>0_J`/e/c]Fa>"XknbD3=.q%K<g*c59?kbVrrogE0?S&S_uA=>`WN>^hM/:!0sKOjtg<c?6dftco?r*f,^Y%(6[CA'i3)ZA`kj5f$gqa2!F=G)S1#di\Uj(jcB62%"C<=taT,P!"jPK5CQtEs$jf\Ho_BO;iA@W;Mpif,4lPc2T4*XdcrKQt%$tC^YCmXj5Yb1ur%-iKMK-;!U67OUn8T4ViLUBGb:-19%+KVfMT/0`@IOl<dW-`,r(%ep^`18-`d?[2$A[!+n77TpIWPk2aMm'?f5F34.cR"V(*3V3R&q@;Wc]>9NjY:6Sa(9V#EHG`-5]"$S%cRFVH3/\dF`8$O?-dWj4YI>cN`8I[=V8ZTaVoCgCNl8uJEsldq4_*5T?dYUcc-OeH/?XSHmX_ZY98[(tG7[f";%%f^5F_2u+!l:+%BDGuOb>5uh*flI/c7/SZ'cF`;bJ^(sY(B=V:VfiGAt;`DS+-Ut-nB--bi1!$)_97%:R<.fOi:*iITO%i@>eU,Y,CH>US,.I?>Htq%@He*D$8VR+N#;#t4;*.VFE:KQI>\t6*!MT>7mT1cO3,=;\>M[99GU,Q\P1(7a^<9l..Kd5?IG%:od#ul'O=j5dFf:[$.Z89QS<h[%]Zk7c52UdJXMQaUEh#lGZAKmsGpF\#lai6(i3Gd[oA.TrV'u/enicPE*^=(D(#"G.X+Icd8le7BKB:X`4P4L"cN^KOZ(_I8a>WK`%ilsNt`(Q>AGqMtNU2Z\4<#*pH\6?p6=H-r\_,Fd[UpN+fJ>L-FXO<^4`TP0DGoT;1"@lZ/:32&`Jg<Lp"<Aa&o_.J?F@"-dhVR9Z%V'("WIA4J.MqBn2'9+2tCckg'0B8$*(1:(T>W>IZ\dBA<33$@<52q0eN0qEb\dCb1@NmDlnnMQ]/f2P'lU[%iM?5kii#>;jYQG$b%?mXb"g,E5s/.\l''\!?@B7n'IS9eC@W(4,DNcZIobV(lD@IO'F8AXJu&T^e'LeI@u,5Z%Pi*CIFM")70=h$fXLdKo0H#FqJq4iN/%R8E1">TtPYPVrV37t.,/"r_1TJk+?&ib_%M]Kg%fopK,g?<*+XFFl4DB=sb.J[^5-3i.BcfQ??TCKd#@bATc1?aAn50\;NlRU0)`%@Tsdi#[tC9Jl*VC&Him#nOIpM)doo.kLsh_$BRbdFCg#8M57dtN4TP4B->=BX/.K?KODT*&S,<*Bg\)@W"Jp]-*_iA:HhMO>[4U(%.jTX%:g.hC&SJiO)bQ$cPSOt=(^LkD'bSo+amak;JVYq>-Njsie:e9(K)+&^P.'`FM.VpCf6imZZt3*+U_.UsGO;\sjPtlT7FYUK%P4*L"V`^ediUn-AO[@Rff[Z/^OY$!mk/\`UP=l0)a?l,)aJ.O>O8,$(nioA^[\HnJMeK,)O@FoqVZqGT=6;!TP4d>b;oQ3+.V[QO%5@a7U]%aNkkI'0rr#o#rED%Y3":Q*p;DZ!u"2T]A)fmRbeD)48^d2nT,@fjp&."/O:t\j4qYeWV'2L1Jm/u<Nr#;4mi-a=<dTgJ;%:mMKl.qYbu8SDVq\=e:6Z/hf(1lE:s;^)P!IDBhgRC$1A9t3t6/sT#bSb1N:0go!=GeH?EbD#7\E%Y,;<RJSKMrRTi0'#qL`f%P?%I\jZ3Um9>=o_KJ@ieAj#FTm#V:=[B5](0+YA?@s1j@3b&;f,-I_3uQ%m2qQdAEm0N/5Tp+`&>6OrgUa*ETn`5hf/_$1/[+4F8X%,%O&MHc.fTCMT&Z@Z-QENg#<3Lb[t5Qabqj$/*YXk#ADPM:F8fd9^q"\I,ScjS#!@k<h;>`/.0*8-<UWa34H+\#r!P"Us5N?jD>P7_%"6p9:So%EA,dW5O)#%G2^1"n!YSrt4]!SKa1"F=+V;Z!'%g2V2(Ki0sCh:ASf<=(VRIp]_gHqRef%_c2.3478$Ff5?&VIN`'+nGJ%HiS#A@bT+ZUTmK$V7s15AE@2^A\LtoYgg]q_^k<^Rg*1g4526&`O!_!i`QHYUm?OpnZj$\_h+'i:9eF9!rmt&,9..e]^*6_mDuq1%>j?)3Q[3h0$f6VE\XofH,Jb:n4kkSmG@N]en6e4MiGZ5c>$Qcbh`)UP_?dHWDHZGeLpm/d_-[)j=*HIOKAgq96hP6u%4k5.dP'h3%Y5L;MF8VnVNd&KJn`$o#$*?&>$?D-X1G6VP4,PTCUbCQ?gn4'k>etMTgD00KgQL^bkg/UL'6j<T*&Q\op+C-pgVL:fLL)L6()L3`%pP8G.;&=Tfc"@P+l4utdhn$^O5a)At6?PFM2n/J!'V6nVYqA!O=,JFuYJ`fH>B452MN"\+=c+e*JYGiN8?K6F*as!0M;]^4^S$,k%K9E]_@[j!IVYedDmX-HQh:nj\:KC*dMWNG5>eq%E]4@&M<nJ$,Nbr.IIl`bS^ZD.fC0u6u`35gi=ruD(F8:\40jf3]m8no&MlF*'%l"rlO?bI,S.DDuk#Pc$,]YO:7n8ncHn&h0Pl/Ck2I,@Lj]:Jg#j>!'DlQ1n<Bl],lNka9hqC4R1rgK=;1)5pW>g=(r+\qc`A!^Oa%-E*c$Wk\6:'2:o"=8,J6]A(>'R7t5=Rm@.t+!/'[YnQp@%9emnpX`3uCA8u=q1J#`]1oHs4EqZlOs'_K4u,(')OQG@2E&FjA:L]R%ENMS1@n&?Cjh-*iL))&.ZK.rU`fcaXC)4Ahl6@g`Lhqq2?"otTT`2GB%?Z=DZOQ+Rkc$4?#15]&62Guf\r&*0m&^_=)>*=+-]KF=%]p7LC\SE,YVbI6(%!rfS12Q%%'[q6AQD$%Fp98*bY[n6GfeY*qM9ccL2'.']b*J_5O.%.i*HW/79EAE']aP^RECIbK,Ica&9[*pU%$u82VAWSoEb^B\$`\;JPMp`O-1<>7o,iX.4;ia.Cd6O$aOs`0Cl4]We?O#1IV@kb_bMY->ptn?'iQ?h9;/;-DJM)S$R=l]QUkZm&%EFdQ9)/_<<PLaK-%(D!EUXaU;6*"rEeiZ*cKkd:(kZjuJp%W'q#.=rg)8pZp+g+DC1*a`c)oseu]Ab\^>>iA*Nkj/p5a=WY(-c7!%BT8>pCrmLY_::JV%HJ+(c+ntu/*><XEh:L?),EE%`%kaY!-SdVfEuo9>N2FVXiBC3%I=q]?87G<)**Gr8\.N<+s2N@lNo/nGEH4(%PKQ\r0hb:EZu,)e8Z,d5_u/(O^o:k:!dY:Rg_Mo8>)TpZ>8!GoMjJ-9:h*T@2/s839Lo0a1PU#`0OrI.3DLqRLV$"oLbYcjph4B"%7hZdh0l6W:&An\ikV-fkB^pteerXca3l=Hic0u<M`o#h(>"gkli5'Aqp!i#C-X-\p.8,$qHNOc_I77[GC+YV"26^IJM<?C(@)9(@%fkR%-_1Y*mDrGr]QMBJe%4i@gm4I+he\Hf'mIduFet,_MDb"Rc^n@leUid.-(\I*Hn(:SHmL*2hKDL2OgC5MD>d6!IJbaoi*cVes%m0-X9`!'G)GMG#O?9!d+1#"s;6+q"qFp,LXoqD2?%A]IO.MF_"/`(KR-#p$+)q#X</uYUZFCZN)TGA/!5rKE9@4kFa/sacji[.nT%@O%Sir>)SBB]-BKXO2/(<k!;[RYBaTb73eRk)c)-#gun(KPdI!DrJjW)>K,ji\!F3l;;:(/p#j9IRP%p5q-1jc6qPXBNuldX?SnC%K,E@c+=sXAe".WjOmcg!k1H]lZ`kM#+!1M=MoB7ZNrYH!NEpL+O>XsH=Bg<s_KoZEEBsgN$_&NUp^"0$M*%87iq=)q(=lR!p^#<G%`asM#EBsj+$@8'6#\q3P[&Ng+p\$;qJ[_AY,l!0*+(8l3/M;ps=5iEN)kA$g6#3-n0[Bft$F4*$MrNURL*&5eeF*8Q(Hp.0[Os2L%eJu5(mh%AW70U*ELl_c'.@_[-Frc*sNJla.4Kg$S,iGNg&jNRDnIP88Ca2VdTr"F01ui<aZkW0"!^+"Krjphg=pe?;^JLeYQ%CP?%0n@Q4fV[tKdhOEW8IOhSg&-=?M8.$9IOWM@>N.AmqSb>fQMA"b!]8Nc=94lV9O7ag'*_SS2.-4Z*'?IiAkmIN]"oB!-.aX1&J\9n%L9]<*"0qKcT.VT)F6tk#bgFZL.\YfN!->0<KEYQ`>j`m)WS((O'jT2T?%.C-asCmcf5PQ$IW5s++"ldbk3-\?f7770E)9B[@hJ,S%iCi4:]RkWboSN=7eLs\%>LKCX7LO*^90D?@_*(*\Zq&"TZG.o7-Pf@f$`IDp03l=>m3J8ATn5p@2o>6GaN^%G"aC4""P#W+TfU%.%K*mnNqU,rUbR046ZEl+(429UDK%L^N3N_1d-Bi[i:&X(R2-]&@LC/>6pQXhSWF*<4\:S%=l<.P:>!XfMn]`ZV!9TUB"Ss]aTeYP(%i@XS)rY>>DeBI5m<:EPb,T?1\]@.+9#o]`SUT*1<E0;(W,@WK6'$hPn#I[2Q64P-(YROJ3P0]<W2Aap1ch2.35Od3$4=Iig@>bXg%$$40:hJBqQp\%2--V'+1N"Ycc*1'!"Pb>5$@4l8%Pb=J?J(PAu;B$H!W9+^OcRJEkDb4&WJ5Kcqc(;kaJPh#@Y&Pln7L<9KVKb>f%Q@u)2_Hd8Ti(`ml:mg9Zl'cSCJ3>3cEMR$$:`L;u>aa^j=Wis5V.,V"#3bG+_FR8d)PHPF5airdEOIPp=H_FnKdVo;eK56S-]U%%%GlfVYII*8Q"ZY-[k[!5rE'ur:NGsBcQ3:kT#r<Ro_st+u#^:l:M*E<<5UA^Er`OcLa:#I'@A=5X$0j*_,7T(QHr-sk`,O4Z1[[rc%HFdCp(3<.H2(DfCp'@=SE+K**Pi<#.,B5Z@2c*)-J`K!5q?l.:p(bFO8"E<b)cpX)0E!*/$76)UXtNNri/o^ao5c0/5OK]<<AaF:%)/2$eMrr(a[j<2g,qBe%7QIb\BQ*?@b#&q.L^f^skX0Amb;Bi&d"g[!$3?9B2,KUnBWMGOE":Raj#.hC0H#'\Qp0Udg&p^)'(1)!%&q>*m"-8,!KG`=Y,LNfYNm_!bLTkZ^E>sm[&+L3bC\ChuDb0qGZ?QZLPi'&1cq)M^\;eLMDD@ZG>9'Z9OW\GHE50qhKV=jn+m_j+%\9=][nIX2Simm^+;FB>d@_X%JE:nmX$4[@E;R/'9C-BWPZ8/rcdVPjUFnF1S9J#i`O,3gJE=mptA-@D,d,H6SR?2^s&db#8ZhOeZ%\nP4BMo9@ND]*+PJOkCL-Z4N"GK+a//7-3.0#6WFE>*Ud3%dGB9n"jN5U8'd'#K5CP+\BnDM%/1gPD079oqP7L/@lD,KjHH?Z/O*%XSE8$lNSO>deO9[D)DkrfN4:O7gFhq-t>j(7-1<JJ6>clA-Kc_j[+fnTT$#ff2!NPYcfH8L-i[#i?SF^=!!2eogB66b&emp_]4#/%_(D!)$)*HTG?h00bF=!;'5!P,L==:MdCJ+k'Ij+hCLE2GF4>.0f9Xol%jc,QMG'N2^`?iY["spM2$Bj&Cmm!9,cCh(L.eR[4,N*k%C11n&M$5AjE>_)m*D+mLpINe4JW/=n)T]ESJIaMBJW(P\dRQQFCQGH^og-U,`$a3e*YW?>OE&/FH<c3V*[@QtoZXI3IHh..AY0RK%">X<Z.8RoZJW(Q-nK?jrEaoFLm?h5Im46&-5fW%o.qFOe*XUZ&P!s?7IaqYL]W\D#A.]Pe&Ph=OOUACMh9SlSDZql%HcjBa._$Zr%T97!2Xc<Y>#??F-j&>X9Lp0So3)cY(loO-SAJJ/VmU^kA=2>SZSIA1(#+6o;KVldk,Do;WDF?Op$CV6%;kRLMU;/]mPpCrL8;GfE%oVt"cU_V0WBi`e#Ko=-T;FQ]7O;"g1!k-16CK1p7;#?P4ZW5@?fE`K.`'7]\Af]%BUAu]E+q1>JOpFstL4%B#q*IjX7g.N+\ZUC>%CA:u&jE6/c2iMt0<tIb.0&s4R3o]gD(&SVB-=/!'5n:00N+\'Kap^RjN7XD58K8N*0*[c"/N_s.4CY0^*REhY>81q/;cJGY4\Zk5%H7B1DaOYZ[R>iPhmBaag*F1r;i@50c;-P<!)LBVAb@V`63*&ITr7kLW7nh1/,;Mkm0LCkL`H0C:[G5NT8k*KZ's7\q&l78k-%7"B%5m:[\Bm`_BIZK5n[EP]]cXH:"B;mAJ+K04,Z"[j.@3tD.fXp:`n%V:782=+C&NgU_C1[g_@0I6r)/,n/+BQA^@?,-cYlEDiT?qU(%DMPqP*\F?i<p#[jGf5))jIR%^$um6YWHs@mVtF0o$s#[o5fPJ9MMV]2#A^VJ_EB)I&l,&>Oh8b^9DjKhFlN7CX1F%nE!>caHRdg_%;jI3qL>o:SeH4k<0Ca6deCanM<1SX<gL=g(3'='C'go+\'JjG^Z!b#<AJ#a0,pZS7S0TXSB4Q1d;c"JRS7$`;4reSB/I;^r1ZJC<%ii`cm;_X`e2>_f;SKe-O>7q^pTR%_rN3MEDi-M'b_H$55``)"A8^L:]"cYp\%u*R5%#L'M&hSk*Kmd$5#2PFRVZs[6on442]^(M5%TQN^dB1kR7`"^jrFC$+&^!7@%93^C7em!1(Xd5>0=2;X%kT!.X0*IX,N4AnMKZ<drY^Z`$0r;X_;<8u=)AliJG"^a4)]7n_*!2CX%R;A^e^]>>Y=2l?)W$$)aTsB4GX#1[`L/d?$j&E=)gsn#^!Mf?k3Hi"LiL;D*]3=\_\9bmYV+;QRp0-H"W9+^JjGr:$6Y;r'Vik$]%8@KmR.Tn'N1q+_]NYa=<f:K3]Lji>X2NSA`FK=>8Qs>[_+]`P><.;H72="uX1or3^Ksr>]Y_A2$QF%OQKW/M$h#.S?#+PTmMc7`D%gqs3WDsus7#]V,`f-,"P/Cri@>s1Hj>N-lr>8#!@Lbm/!dY:$/i6"Fs7nDO9.u&beA3KV\0ZfU`?sq4Z"E-kNq+KLq3N)P[#7r^g%O.+BCGg_>4i;M/WE"D[9'nUL2ie[eu`1`W(dR%lgD.,>g`BB<2eh`Mka(!r$iV0_DGB$\ck%JEiL:+]^j"9<f6Ki2XU5!#oq1&::%JoY#Vj1gVmV]'B.O<EN*!0u;4<h=t<5io/?JBsJn7j7Yn9l!#UArfh63Wc7-ELF&/#?#Gf!DL[KHQ_ELVT+%`E[nC@^^aaT*\7WP%"->'<Y6Rtn,lX<&<K^q".Pfkg[fS"VenK+A=]u)3<ff";rri^]HRe[Xnj#.,<$i&oPh,KkEUGJCU=>iCE+NL^MrE.mmKFsEBtu#9%V6/Z]TXSEC2>\L>PFlT=dfIl#pTE/G!n,FsN0n,`\cpMPAle1]1#]!]COt>+j4430$T-l&M5XT!Uq]#_IfVT?G$`KS"ZjPaOJiSf%KuWe=1gj-3\9e'u`X8^L-cod$LhC=8;5tQ=U;40%S)"-n`kMG!?nSZ8cm8*LUX]V9Y7IuN[KZDi5Phf74u]6gD8A85NJF;ZfG7^0%Ifub%*;J2;fG:Q>5dirN`)paXfn,E@r,[rO\9am(=F/_'LkDr!6@BX0[=fcj'k@^E?$b2-=rnRYRP.OS[QoKp>NWi8'mpB)W3+u^%T\=2:+FnCHQ+?ciq_jP4Bm)lJiIZFVSV(ch$H<8K(81S;'\jX!H@mcn.W6JAUt-o7+.N^Lh%mnri*:46T>XgI\aXBIR8o'[M3/-o%1fLYD.e[h]ED&X:'r24JCn.B1VafI2<WR'-6tk!?_f0OtBfJHMk`uXl@ftu4A4bG2/*VY.oltc*QM;,='r24JkSYPpMR-/bO&&<I%+C/qDLOG,E0%a+."t.S=-HqW43$*k[U^L_r'nJ>`/oZjeeA`JI"fJ[aoCo3YJ2UCCiRIAS1[E#tZk\6%m\ppj(fL,$>qI+pX\D&"%SqoYB@*D>8jHHROkaKbQHo=t.l[g"IV3'tJ_7Dm(iC'es$<S*Xg&^Smdp2eS*K7.o?=5o"^S04pq43V:i;>kVPq<SI!WdrHN$aXG%[3u:tX;cbAJNc,li)C7AYi</9?KX$s0Mj8*MF1"f3-&44BnmE3%+KGXNXKE+YRcZD\((-</AT&/F$b3rI5!A-ZDS"dA#l].G=,-*%HMG+N.l\AZiRK2Te"R6n@B^'9on]>pKY]"<p>GkN8*C=+$tKnMEbt7S"pS/KV_Zfr^c"nl#+9.XI+R(AN$j1,_+F&1hb4f(D5eXc%)#UOUF9r'Y2RbOEEiA5pbse,JfSJ5Y[ESu@J:O?_;p/gM<\Q53BK^tm1:^D]@'I,VBs8kCf(D^c$Zh3.3gr$f?Q6:IOc\SM/0fUr%(1(BWi6&uZ(nFt:%tcNXaWc-2o<%Aj&"4i[a.g_r?s-R@r*9cZ;tRU`72Mk<%$l[6,%@Zj%$kB,2?q@BMFYE2fGH#`.j"Yh4XTkE%M9"n-NhP_JYG%-afGJ:6l%fd1;$^P'&gJ\cEqWK%0p"j8('Ql+qMl1%Z+>[E9d."TMdL\p2!it3S6WkN0N\t)Y$be50<5[Llu+Wk%-lFG/ggfJY"XaC`fX2R2"t'LUjRF-O;S1I3:4p:I8L<Z]18sY)f`0o@BH]SsU_4\CL?:%H9>C8$K>OXCp\]I@V6TZC^O@Fai1'th%`]A7/Mk(ZbXfNC:`,`-S@c(BTAF(T5e-#Ra`QhWWKmHe8`!UaKeWNA+F/rpWBVL$nfKJ>;9?Y<"Mck'n4<\(BfQj`&/&9GQSgbI;%0/a^VfSnWba'rTB0,to[i%fIOGndLd:518*2H3EUQ5g?VT2iVHMH2>W6_RP0LlAh(=A7=t"e6"(N(<7B(`DQ)3Fol?0G]ktB9%-2%jJu_NH@A=m.!%4eDtcneEX<Tj=VZSu<2N3U@]h+%A>$+S=$nA*aDa.m%'e%(O=Yl.=Jp5N)X7BuHtRm[[d5E/OMS=.TH,$VQ]N@Q%'un3oT/M[^$qIT\UbX^;g6/3N7Y[O%[Nm8fP+f*LmFmLUC0*o2&T#RoR4aKAV.9l)p]D(3nqDC9=C@F^afm@6?QZ7'O(?3b]uMn;%<NQ_Bb]YNt2RD)u;DL5R#cj#,.2`KI5/pX4jB-6(,g7QiP$s)#rWq5?/H6G0c?=u+_=uj_bU$1=Ai7nR>-rYhf@^e/V,9M"5i4c/%L,:D'[VFiC>n(N7`iIgS,`L4f<g6g//>ha[!_.p]ANXX(^rSc(o*]6MQJ@`:N>58FGgQl9k6k*b3M[)\A)22V`BqU[1jaT^.o&[u%'4!hTPef7'+D%3'5$/[.;#i0MD*AT<1n?&AiZ)D3*p#U4+8ksh1[q;A0JcNoi[?9X'WHGBGRF1IJ4i/Pi#`>7"Lo=c]5kD!r;0-S%LlZ*BmtaK4C(aV,b4m3C>I&W(W?>grp^QQuN,+!:JTbZKB^hb#Es4p`5sL^0Ts+\E79WDC9J$tf%:gdT(K@7pD$tPrmqUf<Ig&2l%D(AMB$"..STG@Q[@pf'8N)P40[`?(1&pHXtW(3pAM7[`qMCg@H_S,8n]m)Z1Da]*m'Ffer?]'TTbqks:2kKOo*q1kCB?1SP#%Nj^%jtgHoTEmn!^s^$sGQNeB`M/qpm,o2]q6).8)QrsU^X3CZpoR+-#LeN\XPn5pgVEO&ohL+dGuW-JnDN$WU\Va<hDYA9VY!%/dg])j%N\g8#[.28_E?4Xt]&ED-Jaa[<#egRQ+3'&TI0GQ=pA'KKTlE6k_/Klo6XtNs@mfeZ*1OL:r*$Ji/Ge#2EqF7BCG6]>\.'H+TPNaB%3?"&E3CYD,?%^buakT"#%:2C]%5)]Q7c.4?@fp"hiE)[fE0?=EQV5P!"'pORU.X$FqF!ZB$G$F/3C)1])Ie2)eu01>c&m.ZK!'[=%U;iFJ/EdP&3q,#rPQAc.)a7YGYQ50P#&9/6ZP7H@oVl57TJCM>;8LmM2'['VK-$6doPICb3$Yu+b64.4b(dp!31YT+JK>a@>5XI?%<00$56@g2hK!iF]MJA.gEdDC<C7]uHU4TehVC%B_OHHclYV%usC'Bh2m]!E)"_E=g7.Q4N!AHFY;_."Sj<qheN")RY"K!Xc)b@j]%?!<9,b8#sF<3nsnaNi*aUOoef<><`8K<g%BqOU1T@fAJ<)gF&g[)#]kl+'<_K!p58-$U@m=6cHKec6h1TWH(R3="c#_;%;4DbgAD%j;<(GF+\qu4lfrMU!"5NY9O>rU-e'e[ohkrkh&JL!XrB)q#XT,`LaP,:2'e,/tb)!MuQBcR)cZ8]nXFZV:Q!np39/U\KJI6diodd%"k%B'T?pq1ChsXi5]d)MPh;@q$JYRjQ;+OFJt5q<%n+V&K'3X!opA!O/r8r0,2SAY\j/<P:Cl,H"nW8r'dGCg(!nmAN4F$rH'YEh%,0&ICj`)%2>iKf")]7Z;Ifo?e_/q5U;aB8+(!3JHHI.TnH_1m<l1$l93<Thsbk0h<QfU5Ur/AEnQaJi%`Y+JT)4s71,q\cHaH'92%XOK=u$"8ZXi8C9?*n*/Cs!$gZ,n/_S>R9*@/n"bFRpQ<O07a4X?6F3+P$g!U3*;X[JU#Da,DDoa8)h:*8/T-OCLtSe>k@s<O>qbb%*@"":>lk6Y!PW&$B5(=D)?^P<$f)8Z*fV`oE,[ZT*SoHq8>pt#&3-2^>Z1acB64PbRa];K0Yg8_,u*nB6!9:.=FV1I.nK'KUin"f%7sZWh>K`+9J-BZ1Lo^2h\/S]9"*]BukZZ4pUBYJl!p0^X6(i,R7RC-'WJ%WRqmI7QT9!NnH"Y'7CDd`pTO-A>^.C?/%C$tHDc0&c%F55-<:?rG#I,2jH[d:/Ym#KhpoF5,Mitg-A_5_*grt(iYm0R)VH>lCgdiniE%^_$/"5ni\!I0*mE<,_mdG=WI1'0iRp\)l1o<rZa%'u8kfAZr,LGNA&\,<1S7jgR[h*:+<r1;n`']n#p#ZLrU#1>!SfMXHAWrUUqh?RT66DAYRC'pV#gcU:bGUV]e]*IXN(&_p>h^u`?`%s1rm0Upsr.+2cX=,`r"=!eJJ75_+$fV%>-7n+n(m:0k9.;DUHlc:i3bSDm5@Zd3k<j-C*<$Gkt7e'`VqatkC4PSr0*[_ugb'lZ4d%'K?\(2PjpC:7:q*0OCMPVK``CJO&I-Zd^OG^&au24]S4HSgC2N'JMSPmE;7K3.UA58mGt&gpL]hM'F/G`UgZFEhdum%%d!lXTCfo%>7Ac$*Fh*W%ZML`"=9trdk4Bb3k)VTg#NSI75^,h>?o-tcf*n>_lkKOPN]PGa(DL$D,tGXIWZp<Om$N:g96N9:QN6a&3;X,oHtW7%9b<f0@Fqlrmbm@qks1OLmpWACNlT\pnQ8LjLO8A9l)MI-_%[e`_iD5D4Icn@=%?3%"rV8aUQMOpBopa#1<A'@\-tM_<Mn4EYip]-%R4F1*@nN,=3u=Ck4h.9q;EM^+:hNsF?o'gUL9#(oV`r(>HsA'p/oVdefBVa^VRsbQ=9UYp-b>2`=p?Mglm`Lk6h?<Z9Fk+YP43u<%#rKVq\<pDY2.3Nj\d)RlNZ/Nnq!(poU'4k9CSI)fWdPI]++c&t&]>40H'Ui+W-(E)^ntCu2d):IC?#fb&,a:rY%b9oYFL#<JYju5%n[j]m9%GH4K]c6B6VCTM/uU98=#HY%i!4%n^tYUKZKd>\6'u6K<HPJk30kkNL!oET"CXlTi`IUk%Qm%C`[?ecQ19VLb)3iP>N3!J%bBe=ZLBsXEJ-HU=%Ho*U`E^FJYK8gP*](P6'1a?f/?U<qL0?hG5s7urSuLK=[qWlEP2C,uiIbf]8m^QFL#Q@Y/0cjWT,cDrb:ND(%J,?!k.TmS]IpL_.9)&<QB!<fdOY#KJDTg!O,tg]U$RF\Drd:k>/mpqk#[m0b=_9sPfUc5InugbJF.[/t7(/De][)`WlFoYO,$shQ%aUR@R-@`517;kRfo(-Ur)I,PA\D9gZ/u0$V-lF'E^=IGlTPlElXGcctQSmGj=9\FBdN6&3-qW<Y?RWQXNbE[VeWi?hnjM$LQR3pA%n_1.%\m1RA"jWTe$^,9jXh?u"CRRnjC_d2ZkJY\l#r13Kf7%'"*E!="=C8?>mH0lei`&?NgrgF0>bB_$b,6^B]1RC;BNhKcWgJiI%X6>VK65<efMa?dQD:M$UC'N%3RcE/(&Z6gjq'MOG=5,U,C=#@Cs2qfPG-R](-t*>3J6d!4rNuU%Tt=uR'7&gQBB>H(q!%`9K;a\?%D;fJk,b1Y/&R@IZOf1q1H,:&b3tL4%:XgOgIPl6tXAb8WKhWpLSFOp.K4(l3H;YoSHZUr90cpqDM<W(&Y+hZb6rU]A=%g!b''!uB%oc$WWgG>0u:R,;%;0@_!A=3VuWC&l)&qq,h5E]M?>P]=WM8HFpE_@*RVP[JX-u$keZ5lVI070*5fZW\2lg6q1[3(>t?2KgD[Z<N2%'#cF@2S6o1bgmkk?)$ibj%%Pqk8nf'&gTcfbpBX\Tq6Mn-+o\9?t+M$4`VDeHrm8%KS\?gAnbWk1A.j_q*ISIF+liAH0Sh[eWW&D%AXRKFqEm&9r$(J?9n_saf6j:Ie^_\(At(c[;X5%h7ebtDf=KucS1&i<X[S1>Sbl5Y`,\kZGfSbdS1$520AhH7W]hcb5,Pq8Z3_n!%BZ0:H\f6j@?7i.[D)]r"<*5Wg85oM]S8`d4=O/I8U1`WBO&jboS(K@`F&u0&VB(ttB'le!>r6\u\gsOQd,0$7f7(0EW*L)peb`@r%2GUYeiu+)&QmW5Z[gr!tT>&OSSBWF:H(p(lNo^[N4NnJDbgFefF6rV*jCi55fjUI#m^qVhR4Im(Tss$/D76!-EP(3t51+X:h,G&c%Wm'qDXm9_g$-,FANGI?Z8`TAL>h=)!f7L"ZGq@@.-BIil`!'GKgT=Q/mi%9Pq\*7\I!fBj*pOi3[;Yn0=aK6YA(a'aVoVYuF`gt?%P'n8(Mg]hCf8LeEJpTM:'V.2E:#(["S&7bT)S;tqiBh!=SV<MW([JOl@AUPagVgKZ8Jj;oT#KE\j_)GEE%\<CULogS@hSPPl[O\J%_Q-hBRPqYd(I`O_MH:rWQ"rARZD45kmNs!/)PG$:\qr@cOrTnnmY'q6AO83giD8ZAiD?%8/?'Z)e]2Lc:M_4<F;/UudTW/[>)US.%-JjE?KJQ3tfV>6g'.tS:O@t"qG4?k8./K]MJ(dpcM+u-JO2?C'3"eU(>(>87?PVh)nQ8L*$!DGED66+D1W+#uMU;CAPu+Y):]D)0%6JjgX7pFMB3hR4Vca]N$[oaH7U*DPC7,-F^9XHC0el1,HdTgfk:L]BA-_\T3e$SFUBjbNd0B+6I8NT`&`.]%Ig14RM-!Nf"gXftC%@_TOt^;RlORu_%19HPVY')DrT*RnYmI7Y*e5u%;`%B3dTD,C(0MX>_7-sY"[U%;EU?G_k/kF.E*#oAd'Z/oYrB;O>2Ze4a!PYb+g%`Z/jG@o#E%MWab:dR%%'i]18;UF>6[j_24XHP2[i)Wp*5)j8$KY1Klt[dmT3Rh;r)#s5dm>`b<5To,^srCCB=C0iJ3+jUO,%euJ;%ES#6l(%Y8nOuu]FcZI9s>B2N2Tk@\pLJ%%#+\O>h*g5:KMMI2_MKu.G`P]]@$!,PM_]B*:Nl2t$cV"`e:Qs^?(t2X9:ksH8dST>c%8'!:-9CO,$Y*as409L<aMrFYZPKXEId(<n_5M_KT#'n=JANXru"rRSI<O,FYP;k3=(Y+]f).XF\7\HGe]g]5'217Yq15]P/iYc8@%<:d[:e,8bF1(*l8FY-'D$Q2BAa['.0Ps==FB<CC0?jiD%',@kHbtl]PWB,LVW[p.A&G<?tl8\V<ScCWtl.X?QZD0#-P,"b2_Co4@%[O"F2=(XFlf.EEi;a3Yjlr1YE&=&[IPF-u^<=i&1T>#sm][&[62.B8rLXb-Tra_Jj%gK[bMh41GU8',N-,Bf6W^u0UjQPhR!]OV`%bo]7]RHkWtAKOjhGj9^;BT;"o&p&NU$rmigWZ<5fh8O8/^o+X)d8]*7e.Lt'hT(m7^J*FW8#u>kC&(S)"AN*BqaV>a]#EWK3%AC*%X/A^W?b==aiUXCW-:n=EZ9e3WCH>PZW&Ul8qpj%?j\M3,m\utTHg9TRB&!;AD\&dfr^L#5D9;0uArRDR`*7757N)U8oW_q]c9/=n%22)TDTZ3R3/!7Ra<c_L)=2ap=<5^P@Za1sqiTXQeQ?$NBq,gL[kiRC*91<jLfm5J[EO0^SCD?eN1tmiGQn@luSLo[]Doi42hN'P*%<?9]Tq3,InIB0Hsl!(p,,0o'^G<5Qs0P!DJ4)D=RZV!G5'lFtY"R?pV3P-s!Ni$o@FHWDoPK]qrUS98[gK!u!.EBDHHB=__,PH3b%.f=`Yjg^(/";PghScJCn(.B3'j_#Blb-R!s"hP%en2E(T,[c[Bi.n/'nFef+B,d>_7IFESLbbju+JPh:&_0TB6L;LE,'KI@"-agp%MF(1."E9+tf8$85(E+(*8G0gj;A2<[T_X6`JsSViD%Bm6g&m-XJU)'u[2CKDQ?QYUNG=HfS]=MDl?k`]he>05?'"ZZIa(BB,H-YR%F,Xb$lI6mbqpgciZ%+s4@_XDHmPkNo6Xse7($T;iW^nethSYgm>SUPh:IcDVB!0MOY]#\DJaI^n@tgP2k$pi2G[-Z;,+"G]Jb>ff%7O-tU+b2gkI[\l+epA4E+?asWTBbESB`XI-#CdGi*'W"s't85K]%`/0@N&h8Hkf0%)mr<Djf*^-/CBW$4;*5NWk`gqkGAuI%Tr<u%'_RaakGphpP_K\m"n^*@Cisl+ASi^T,R2c:W[,0=TVfA,ggfqVS;Jj`CO;93+1ns;UEA?Mr.pB!>krOkfsf3LY;f6iRV1$+'?@Bq%crYF6V.?6h`IO2TZWSi>_NYXSGV&PM\pO,hOd"UYW6F@\(fE/_%\(Ei-(/o[X\Au%&Qp<+P&*u`;6RdCU\0GfB/.7_b>ld-hcN<C%HYF3Xq5)iZXGW]j-nSo+W5$`fM?1+h<)M0%emLRcX?fYY`9g]n+6pCn$*/DR1j(QN=8V<'/jYQ!.bj*qQXI!LqCX/-qF\qS1pg<?%78ZdRm%U=&;/Z-VQ7HuU,f*Zr`876@S$.Pc@mEBiBSZnKR#[@VLZlgO[ZR`4XYn%7S?P"A:E%1S"5?<.&7)8&%T/KAgO?#R:-(gJ%DU^,(2>?Gp+a9*+&OZ_@MB2Z%=(CP-;\\XjK9]#a'O.:_pT0)%;3gq2+1WOV(%]UU7lFXFBl;!d73C<JRpBb";?gJb]lhLNjAqg&%T$khG`AGEdEITZ8L8.kl+Goe)O%"12A_&G.#D&jlYdu*Yg.nd5#BoFS::4q8#D-L+cWu`5l'%7%l5j71etCf\SnbmTNpK_C"6le>%rH(V-2;#(TJS*Z-G@[Y`a0):n77U317![!($*%P.)NIq_?=,!u*PH>S]>-kb_FREZjJc4Q"e*8T@@aY*5N5^/HE'/`gf/X%M2jLL%[d8TLA.k]8;F=%.JKVec,%_>a$SiCd;TU?.9Vj'@KOg&[Y;P'tMm(jhqUO!oJM%h>:*RAJ\+[L"cs%S("7AtOTh@9nNA?>R\2").%!sJmWLO_pMM0D?+#3g2.1n^a>m(j8//r?OLm?,$!*\8AZ"[^YaBC:q<C@GN$&K'ktLe?P^,<XGQBP>t!&U*Ij!eXeJ,&5$g[&V%c%aC:<\lKYoIeoY4`h5m5sde0QZILht&^B`<S''LY-,PkeT.tM#AkqBoQ>qmVUl172mO[?e9Q3>9VBV\][)C^8j,D@Dr4=&9h]m<6I%_7fif:\eR!`>i**j@@0/!S)bE05['c9fuF*S-Pc![a`D$ks7/:%E'@0dgj?VlkN&T[H8HZP&,RdM"Y$((bnT1NtPBZ[O@q,j\\?8%H:ttKPGAMI!UF5n8JAC\0I6Y%=OLGh:Hj.CXr@k%O^+<^@MtecP=H!?iKb1EI<c_Zp;.S4jE\+oIZk"WKP]!Ej9X.Z@3A-tQ:RbO%.obCcOE*t$opBa'7016[U6'DW7t4aQ7gq0a,R\23@E$s@gD'rMePP!c^5s.V3,a]XJ2838J@DstqKTi<=9Q%sG^A@;1893eHl?0$%L8aBn->c<b*G.Jbc:>kL)X^0ZbsN.?=VR-+!JB-i2Z2kdkL;ZVZ]+KX!J3BG#JoLFR#sD@+o.ul=sXqmNcf^MkMMG\o5g=pNs4m*%j9nt:l=fD<p%^So@DF92N1U`>YSlTm?PH6FQkG6(r7&!=/Mj9bR+e9D$@(VW2oA7S,+JR@iu@Wn//i8d_5=t,p"8$je^0UO;t(sY%-XR>=;o+2E?]1>CB+?q0>B2U.YE7gCHFoh<jpJ$))ltE'qMSX?P8k%6]r$<HoG&!iBO(/VOM7c%Mih!C+X3I'ej*SG0::]D7mgA(%Gj7:->$mg5HD#2[f4&84M*"NuCepP/Vq25-6p758YN)O`LA]QgFY#Od("l^k%]$F=5?()R%Sh%@!rDV>/OgZP$XFIQR"Q7_QT;:(%Hg59X@sJFXA$a`p^A'-e$b7_V#+L)Pn\m,U1]'SQ_0XqI(8Gdid\_H!8rMbD89;Y0pkS)iYD1Ock0rYY[FfBYp-Bn9%dt%7L\.!9%6aH:l6)6(m(,M"/VZi4D?%W(BDcb&gfT:HsneC/?C6kLofm-j4h,?g2=7ZcI6fJNWb^n'<T'oj!RPheeS'b;.3.^_t">VdrG_dsP%b3O*b0XE(WTt/gP1=pZV<1ON@"bF@4BlLo>?jkor>([iYMh>?:mOLS%eR9al4h-_iW[jR(+r7^X(O4_*h*k>^)!JdeY[asLOq7`W%04r$D8V\j6CoMp[,,?<I3D(m+qS8(cEjVX?b/G=!9SmW!,c3iKS)mh6'%/&,i$??\UiUf</6B`_]l6sh[lPiHWC>j]]B[q.oVpGQ%2M3Z>,qQ4p=Nm$j)H)HhKG'e=T<%-nJ)h$@3a(,6F[[@`b`Yb:dpJDg;HIJA.p[1]Hr>"r=n5.$U<eGUQm9hb]LEnPLo"CFjt:#`%i0>Vu8"c3mGm'_W,?YM-bqm^NjZI%5E/p9Sjc%CJ9kVQqm9IZg)87C?T/6qu6T2mEAnG\t-aaGJEOhLf/GZ*$b>c%C91F#0ME7/9%G^Ks"(=r$H!aIkPAJ^!.3AL^!Z.U<k@aghnUXXGgq#bI^M^%Gc9GTOojpr?!r8:T)[WVC+B:P7+Jl%FN=:`qh&/K4\7eVA6HkuG$%P2[qb$rRI;3Ktmn!(%("NUg56<eq2]EoM$$/@MV`G)%X_3Y6pg$8P:(R%fNT?M9'TlIdR;b]B$Nap=!$AL"U%jW<`RVqI!hRZc>L%873[T'HiDeq>ugdhGdEb[rA0MlQXrF^Du;MUci/j::,IKgBra<Bco1)@`UM$1==\h"m*ic"iH$'h]`r9k-`!B@FIfq_dX^E"J3*c%HJfCVQefNf=U2C0rjQu[n8_MFSmofdX0VA1Xm.7)>*"b!!_F(.dUeQG>-R5<;o/aG"tGd`lM@Xr>?Jp3r[E9SLkm[./Snj)`"oqe%<*kL,V<$FD]arU.=@F!q)rn1__$#Cp;je/c5ZVV-mV3+Yd&%VH/U/*T'@di0])#m)a9Jsp):aQjF!tk@<G]1F/kX)]dg'I/4<H?c%A8kb_RQaPed%pL9VQhG_i'%DI"Z*5X>X3S)5c47RkqumD+;Ae#Qsc=tHB*#Yn6GI1??(S@@f'<=0!7&]%O.tI'rT*n(00p(2*E07%aTYb*$s!>'*K\%LU*<*-a!d<-Cb.!`Kaj`U.B6na`#;>HJdb;W]olW>&]q1t(%oqoCO+FJEF^*.[=m>SXRm8dE@JMRH(4XUW+I?c%E2=a<?BLoG6l3rmeWHQj7EG:i0ijosK5k/[`2FXl:?42q1H7#.$n[VbA>Qfo65Sak2K%KtAZeR![ARshffDcU3!F?i%tY=@$Zh%p%Dda"F#_#_Z/(e%?,!FKA)'Kr@95]'U4VcFEEue%9U^id:1dZdDJ(u1?#Z]hthgol-RWTs3#Lt/HWnd31l,$D`9N<j[A?(e5!$.L$%85l?sR$P!1O0,=>f@plR1."\]-+RF29jPtJQ])HD/<QgpMT(8&/\;cD4"JR0IF.^t2G/&,Et!(hWGs4aQ+gK9<G?E#8=AV\DFu$/%cPI2(-IE(QC:EglFA))LBh25]j#;f[YQJY@QRk3KM$ZsQ?Z*qa,tH]8i.*#?UhXLVq+:P@ZC'd$I,n.g2A])L-2p4VWS/9&jTk9i%q(\KeW7pT_GqM'*HA`hXXs$Be2LMVLq3O8OH)bg_%8!S6/kJsKmu\kqlQAne-@R*n<3;KFUo9Fs.QX@_1pU(d>ll4=%e[Xr)mWH9%F6\t]]6d.nq;S=@gf.H]7NBte:&<*Dfr8dMA>c`8OItfF\3_NcDCsquk(`e5b6Z?%q5KMhRLel+8Ui$\Oe_2Q/O6595;6n@VQ((H%#uo8*DuDt1)\Q.fj>Wm7\l(Doc`g_iV514f/S(lm#A4$^)_tE-_J=(il8JL`rhONl+3:t:-X2'"pDT1OJ4*BjHh9au.Wp.bW`#a\%E.q$!9i=t#:d&n;)_AB'FBr9tELGr4kdI-2c)Bt.mH]XQmC8/:(YjMM0*:LZT(NN6+ZZ#>)+af/?>S2uOh;Q`F][/2P)O0f'EA"P%P$Qno4kUZ+N8*KV`?o5PVcZl^*)cA)obQg0D@<!OdX@QnPSgt?pBb+\Ttj]`hP-oYc[J*lId!7cb3$T/hr@!4*B'qo,j[L0LEe!@%"V]@/379:R%MHq([,\qB^2=O.epbJ--[:r"aAZsPFZF>0LU_tJd`5Wh;+TFpV^-@t;`PI&7VQUmFfJ^mVm>RZlG>/&5MU<>m]=TW%Ce>%X&Z+cGluF"KVb4YA7.A"%#>4b.]ZWl_G&qcH;=3<L$Ods1&t)Ks@(7uN9CO"!W4dipKtHPF/X8j$9Xp!fWq+70#WfbMJ30QB%r7Bh3'W@<%frD8g7")*(Ii)O3#pX'mM8U8I[AU]-olF1R<!?@^f=GkL%LZ7K/Dtfi,LkWm]WJreQWN'uE4jOiiI+=B9Z%-V84:dI%cSjR=3mK>*lFgPC7l<K,6J6]3pMQ4bN,=X2C;1UZ_XiA6)e>)]KDc'k$`[-cUtAc<6Iscq?+-RN3u#-mJE[5%f<@X$6=OIV.hT9t%:mlAL;K*g>@B5C@E5Gsq1-0Be=;0YHXcP)Di,q=fc\n]_H<o/Bq#i-W/"La:Nh&Nt0T%6j:L,DXWc[4&DAT__42Cp-$Q%7A2/GV3%*'^,Q?(&Lr6^,9jnQtKu6+)=HEqO_'oRrneAHk4+3ZOf>D!me#"m4hO[YNRlZN[0O]<TQsbGHl5Fq%MnadUR=>]705-?pU!.YOYl%P7*BdS0>Dg;*kV-:n%RkCbF?$37>-<fY-m4GN]?-W@O3cB_@%UPiha\+iIf*+nOXm(X=m^DkVGc/&?rPC=6*RAYSu']gJcML6N=,%/VV%bDec8#(,T98SYMm6MGu52f0`QIBR>!4aJ#-k68"nt6D;3BJf^4*FJP-gkXb*odP'tX$3*mq<0(SR$*M<hha,rdAW\K)`Hb3c%oOel$_UH@oS:P($UP1<u:(`VgPR)^R\l^qGfMVY:4O!m0PqFL-#Gs7V\)TDUE*QqQ+ZTV++[r&Y/;Pj2X-/U7kXSpSM,Mpi=_c$:%?Y\k:Tg+#bkXVb6ljK1[@h\g>Bjfk05mTnDl68kcau'EX.srl\f.>gFC[88J?lHjUoV8;`>94Q::Qlj)7G/s27uAd$Qro`)'cn,S%i`3LX-qI(l!='!2VJX3-*#r+mAK.lo26Lo%0G2G3"fZ5h?s_g]ba_NoTHLY2ARg720+(TU>/IXunl%s:au-A]=mJnG)Wls0'UBK`%M^'^P@9Gm!Q!Js\<u%o,]i\>%RrC5;U,T*\'bMM'<+FgY+BA7LNYP#2Cr4<(a@+\UWl&a,Cn`&K?GNdslVTg@i"6-l;&>]M86qW0%hQpOEK%.4`e?HgD&d9^-P\gDE<VNdaGZ@T+(J89Aj_pCFL6%+LrI@t'M*SLE`0O`=BQYr7p*pnE9NmK^lR#kdj[]aO#T_s..[PI5%&/Pfk1kA(]8lH<';H(nuJ<Vm.S'"tHND(CO1hEC&-#K*,7k<3(,`l9WA?e\--H]1`U5<j=ncNe;d]WuA:KfbUN=m9Ur(4Z3?grjt%"_D1N#Y@k$bH8q[7"iGL;sPVGF_0-k=t`9#=ugWu*J<TFiJGT\<26V]V/,1Mc7g*0)RXp%(Y'p*&4JHk:J!NB\2$RA/ts8\f(3HL%o0Pt]8/s%VXWk>WCJ/>g&g`itO9T%$I904hZ*!0]Z1+;tgfC4GeT?C2M4j?T^I*DsPWO-gYW`!bU#6=;"mj,4XM`MLV\6`T/p1$.%3rDDp)'-*4/fk-a=;d[77:`0@;.(Z-W(%^`jH#lc/^T#::,(6(;!EOk/9:HPcAWrn;(b]ca]Wq/5q"l%DMt$3VN\&cPbLU#U3[E3%4O[.Wd"uL4cH*=,iF$b"^e_h%8'E7NVLk.fJJ0O?D<?B1-rL$Y#p&#8$_O%5EkY\Q^]^OZ_E3?B9Oaqu/)>WiIRGb9Hm@tjiF8n:%4cJ5@&l:4>/M`AMfV$)3Jchol@t[X2eWGHW"[!t;7s'PH7-M`=r5\V'$K'tf.EKXBOa-/D"jRZ?qF;$%#4R>NHjJ>u96ZaikZS^m%&A$pc7+01'\teb'#[o#On0Wl/KW^c)'".i!"C]*!HIiDf+UV!1^(Ba<@^7SO%rm-(<eP:o98$p/cbBtR2RP3T]AN>PoBSU)B5!GX%L/j%Rl^e[V>]!#o&FUT@.8m6VqJb`G[0$YqNL@B9j7om4!JaF6!Wea'1q@%5P^J9RP62JeAZZ-:b<rY)qM%("Rq_J"X<-^7+hC?b%AHK20,:&.(.san4C(L$_0R5>ln9@bL6EJo]J\qRqdbWOE7h:UsLSukC-47rAJWM#L3bY@a]AuU30Y?/9V=Yp_9>4pl'cMUrK>*dh%4RE;q%LT:h2*ibXja_?%Q%N\MMRJ[@GU*-t"b@V/*"3(*Q,^43E9K@unm>CtM1`NE.ssRH^4_&i^:iI]TTAPf3S^I.@%CJ"30L)7%n3Joo)m#GUUkE0/obk.5:(^@I%Or2o%E&fY-n+aI?I^9+YUHFfS=ruQK+W"GHKN6l>,i.t3i-U%B5,/Z6/R:%KVPX,dU8hK,+Vji%Vh3H>)*tLh)q>VnF?'u8i^>K$=jI2F8=9>F0JN8W=JCg`/8Lgc3WMZ4-`S4R@9Q)Jaal=a[#7d.#qH34&Yu8m@3?m67LYMC#UDFi%M;Ke[T%'T[fl3mV6bk/WF6+Z^$aRKm3OP\i%KKEHL7PI[o1?WLEFt-k%j0J>+-\/)H;tTW_pTbliBfLXdFj-\XLYc\3UR:C$W`*t%+Dp2b+<7P^BhAmb&bDg`7nrChm4.D?U_D#]3fD]-W?`<6=LqqRT^^mO^pO<oPQo7)rM5)7_F\;S3J]t:Hhb/lV@1t:E9<U==>&fI%$'#CZKdQ`-VAk6tNS=%.=%gC*\#$kH_JI&]VSH?OC4T$&"r0T8esYaoggIdo_qq&#e7"-WK&$k&C:X_D"aX$&-lV7i.SLUKncY9_%InfC:/X^'K#VMW*lQBfHmAC.?UV"f5_)@)eBatk2%W0QIg7eR:$\Ye'Gm4_QhYHYDY_Q;4K[G*c5lOCgs1L=,(-&N8)/@l035]6W%g(B(pAl9*11E713R2S;0LVX%7W.khj>D61JMWf9EX!&Y,3T.ZoL:Mp/#L'^'Efh_Q$A95Y9"X,;iN$qG,n$*s9/(.i%X2koH=J?L%:1Y40VtKc!SMg`d/LR8_[*e)gQ>EHZ4<Ujl[b!Rc$T?';m=>QUU-4=+6F?P8D@0XRV^1"GI%L_Ii2"/Nh.oAdUnE"$/dfR3PWN-<%8\)2s(0=3E>bRuKFeR9.p%?5`OkH2q_[%h+,(CjgS0,\icled:m1'`f8`.7=0T.F',*YJaU-`s/D$f%<hi.rUAtMa'7/a%kZ;(:E%iH*O%HrS-(].(d?3KYeE@jLE,Pd0Wm=uHj25ruD@OQ]"sbdlcdG*:=+UGVGUbK&rS7$D4c#bOu*9"nk<nm?KqAAic$6G5Ei?L:kr%d*0Un2088u!/*7mbK.UHP<Z8uAG:g']Zj/G5$p5N074aUmO&g;8*CTq1c1*`3<^[coYCesD'_G!9Kku]/^I6AP%P.6lGa(SCU^>e%:o*]b/dV?n*>eiHqWa_@7S/%\&HCEWLQ;KCk53,hi4RnVk67_(b[ou"XK9fp0,LnVY",hQ=Xro;YZ%Li26\)'&CZqETP.ZZn5""s%G`ps-);,.t+ru$h4a5kT^rFk8/"/'#5\-'o_.`8rOtq3j?O4\L..[+)R9G2L/2>[-JZZ8Rnl3:8XQM&36<Bc^p"!0KUA8CgYt4TB%:b5L&E#og<%-5Ri6DbSos60+JW&dq."?U<8T1m_Uj"M:WZ^3?12RQ"nTkHQVi2!I!6*a#^3RD*0"umBe:XCUi;m99!`'UZ+';u&a%B7a0(H.Be>@3tBP-L\J.Lt)]\7LF5uiDo&6SNIH4\uJ/MC7RE@E#q]DV2@*4%?N$mN78M^nT[`(.afmWV4p[gO=Z,&8jt?G$onrB%MK[uO]4(p56G8'BJL_I2?Z5HNH;^H2b``f&[%q<#RZAM8d*r0.!Oi.m&dH:4FfS#%0D.kSW6`:Lon:6JiGr<pcG0LX-r>T;!=+KH%KF6mZl+o/g4?6#]%IC;;+^VP(*)G;2Yd^DnEk]#N`/+a6a4+`F>ne_]%(M>cKO#HCVh8Bu,"pG%JU`7E2Xb&D0]k&BYg2UoUNZDJ%fR#OB+mN$"%i,H9>@:Ai$h$FVI_PS#kB-NQfUN='hm8+Om1r[U!em37$+=Fj70Y=O!Fm"cM<UK$*%7hW"%AJrr+oK[$7oWD>.BMU%TF+-l(5Q]n\.intIr#XN!h4t^\`d?p(*Ol/Z;bs-6OLO4f-HV(=j-?nXK;&OFq<.,QKf]48n<_h'eO5.'[(JfgC`+T\.[.n`1^=;%9ar_En0HAoRp6%=$UY!]ZOeaT3/A*E(%2p+KiYZD>$ug;5[]ia]2GVg21UPujo\RlZ&G-j(4cd_DC*5F^`Faf\*-Rs(-c<b,L.Jk%e3.7X%TlIpBrJYQn/>+TDsfoT#+GW.S7eR"&F_Mm`[@B:YLHiCkD3d[q'*#lbegF5F&Iu$W05WW]*/\03mZ;V5bCXPmZ\\?St[k\%>4fp:E;gToUL6f1cd%$u.SsMIBe*FG(9l>8_<G$B'rR&npe/mJ>)W?2e#onX/3=>+P2\VYcUDAu\itgt!(i^o51IS3X*k!@3)Ss;%kjZe3X9394''MGmX7oH/CC6!hl)#X<7A3I;3!O>0\PT:O%!"\7FAc[T_HThPd1TWh6DL#j99b*QM&^$EJIH9+JOOhC(5"ie6']_(%EM,D&g`d@trKmSf!"!!T9M9n&EqU^:6%'SD5Ch_q9Ac\mb)o\X.eTOi,"GZK_JrW.IA,)k%QFH1/$XUjL/Wabk=]E=$E4i.mLgsr%rGW]?>t`^>oO148c,==W88Dl4Oh,17Db&kZ-bW_SUl:ab2NC<Hp#n4LOo;@<Kh#Ymp#t2AN?A2pNnJe!OblnA2Bu,g$+-W.N!tA=%o-Oa*NY0C.T#:&6$Xr/*p<_:cME#PHBYP#"aaqh822IU50uDm^3=tIm1aAc-G?#OR)!4-]%#!38_%r#VlnL1]UEWniN6oMA$f0R1%U2&hGo*A'P[#Q03$'Q.#,Bi.m))[B*K^,U2ZT<G"O4Zc\+0"kX4klV'QZ[$74<9Q<OsB]CigH.\1H)8<q)AjDRh0cRj]Rk__a\;_%FJ4+`c[BRZGqLaMTMbl7Up%D;=+I.6eHIk\<b?3W6TJT`YPa+qJMc\j'N`DKV5Fg)mO`Q#CiV*.`?AWsp-YLq:`L^2Sc10KAF>Ml%<GBi0I7We9d(U<?U>B``mB\:sf,1cH&7"%I/:@02+0iClF0UGJg+3>@f@Tj)XM"'c/-BY]_d"I0*6SF8V^W!Oa\*[Xlb);GYs"u]%rmK$&gS5gpPsO;6lIU&,M1rO3moXd;X5(_h"!o/%ccoT3NDU>(QEMR\GWmIr+ZGengub:V8Rit^GHaf-=Q@_]ZVg/2qd^JiMfupn%O.8_9c>#>E@.I<oo]2qH0)>+DrTqW.hZY?n)t0&`32`5gQ,+LpQ(Icsh>Q4m^lY0_ElJWjD*VodfJeA[lf&N1E[Z*+J;'Tqj1Vb-%i^WC,0FRj5*2.^\q<`COj:utcN*"1N6aPmE:^\jBDr]Y/96"Vf/c7.>0:,\*Fh@gV_<QnWqqYm#6`E/s`c?c[8?hZ=pCr?0G8IL7%amk+RV<l&'XS1Fe!nG`LO?i2B"&Q^*JD.WF+bMj^-pTA:9epBAX5N'[JnYUInT#LYCf+%5,tA^r^.M:9c&WZ69)aZI1!VZej40<?%dLT'MQ5VEB9;r)ZOt^2qZ]r.L%qL_o$!)?^*BMJ(it$Z_0gSHnrIU_L[ql(El?A@)E`E9NnJ3N6,P>(daJ#:\3m]oTMIoj]AYbD+%beRpQbaLm/Xig"EaF_ngDO)!jH8Q(.0!g=iPU1U^mM2+rlB^cO><`M8_cGRq@S8>Z;Q$>9D7iq^)2]tu.WrLc\&p,:D(UG;gZ:>"%/(0_Q(;`P'Ks98l>V\c!C>:SQN"^jaOeK1.^C*Gu'B=deVZ#RbgHs#]h'PfZ\aHo.]X^PS2N]?W.(F+%(m!c:F2saa\++L,0W`m\%bT7GrK@\rJ:Hban8nh15eoGG<Ag+`/Vjq?7_ieJj4KF]Abc.J-L$XLIR%Mt-l?EYN6=je8V8t-(@3qJdrO6`],S+!:h%okca7(Wh%)r1n!0/R(J09-"6YF7H!B,TE(*uNJk2U5q*BUq#*TNR!ZQ_'Ud$dQ$74%nfr,XBd)ilKk&6`73l-#NAX->c@gg9af`bdh!%8/kaY%5\Q(uX9bd<adQa)"!IH3!RGG%c'XZJ!,#gc11iZt!(bVt*F`oa2I;J!Ab#3PAq@q\!LjP9f]\k0Lg1'Flf?uTAgn[TisP;&M2-O#%aB,,%!)^f8!%ad,O>?]uF9!]>`"a`-M,8bd6\<b_;NWasS%T/&-m:(GAkAtj3k@p[=uIm/B1(0jhG#j[+Hh=XZY"el5X[rm2/*L:%<E'nb?:2l:mg]&XBA.muLTi"1AG.nMc&gY6@8orB3:J5`LE5;D)`Y,<CDMF?&qFM1KTqV<NK,KiRuf>0)$3A"!Wl!e$dt8:)1bB9%;4:!;E9HQ(S"Pf97<Sd?chBkOQebMbLWZkn:u)g(5HHWH)UjA43\k+@1n-?gj>c!08h<^:!RKDW?\Z0;W29U3`f%?@5`gCUo.AqY%5.eTt;gl7l=P+>f0&ZNs!Qc*!@iu&D"`?Zp1nCi=lUPAWDrVMk7F,^^m&I8>_r-db!LQC-CZ/3F7TFX,<jkHhd[-IK2Mk_qQlhI4%s!8JLQ0WI-m.5J5Z[bU.16_Jho!\meC5\Zl?9JTt/Mji47Qn0k*6-V5U",Z!Uc'\YaZgT0#`[IWRqn5alal-l,1X(Y&Q2h]&\H0-%oS%5sD]ONINN1m4NmQ"<0/Z&@9h$]l)*_4"7&bM@,;N-eW/WCR;3d..f_(bNXBd2AWbuR3aNU,*c*PcqP_$8V59&o>/F('6M:'kd%=@p\Q]-%gePknQbg8HT7:DI;D8TRrb@a`s3Dp"3a9=gSdd*lL`YpJtnD'/H']o[q(9mfsbR..!&;kZrlc'+6rR@f0nm9F7dOYf,\%Jl#Ru`arc%B]]\8lH2eRY08.8mAF5*b1']S8P%l+ZI#F)'8.p5?K@A+qq79h0Vs,$kYdj6H*NEp<M<#6)gO0!4u2DC2,Ee*,&(VI%n-DJJb"RK<0/01[UP'_c;,3$oUsTcle:-RliC<&\[',G!aJ9g?NYc_82[`,d&s'K[P_C*RdFf?-87NgmW,$1SNeQee)5F6c'W&6k%'QoP[M],Z^Kc6ehDMtT==63(<.u0FqD.S[o6(p`()E9$Q7NX0ZP]E-,,t^0;;RfR7D+6-IeCQJgo!<M\n0V)7c_Rob;5P]:b#u%$%(*C\T()tEpk`a;c)3h^?1s2XJN39;)-G)%F+,ut1*;.[%m@lnWXi5lI$.C5&_Af\:"D.-R[4CK)1n16i,!o0@cJ)Vbe(,DR+=3Bf%9T'*dL26!KHh+Qt,1P.L"mX)DQ<BPo0kkX$S>nW,SPX!,<ACS3P]i(J8aC=^(D"[e>;Ra*Z"^J9^<?^Oqpre5FSo,PUUt8[:HZF(%;GUPp/;,jMMuMdD9_,Oca@&S.8XZ(^:Ve4\\ZN\-q0HYmW*f@PE4d`bS''c&EOn`0(ID2!.At?b?3iXEPBq7.HX7S2OZPlg3oadK%'B;XlTdqo2&t\X!81o\^JoFPXe^)OJ;AMS\]0n2e#-1[05Q&_!&)6.E4RS8[HRt6XEF2)2[>)+3#kaFC:([9T6?st>(8IGiq]JAp%ZC`3;r:'78^E1\@0>;i3bF]ljHMM=5^O,hSkJr(eKD=_mcVI?oIsh.XnR'mTDa$:sqY9dKn*BGoT0GL=L;/64E"?fHIsLofV698/%?Ms<CbNI3dJ,eQlpRaX`H2d2;l&-Xt\3KEE5@9EhT&5$Fp\;_Z?bcO/a1m)up=&1`UZe'=qHj)=Rms5c4!266p?BiJO'fPIF[!P9%nB7`mc];F_qWl22^Y]"^q=CKpX*C4j1["c;Qi?F%0<8b*Ic1)f.J`B.G<^K[MIDq"rs=L"T)Ms:rpKchVXg4[+'uU-Fo:`aO)MdY%o@qacmIp&/`Ll#"Hi!1+c24-*SfchfqW<:"*oDAC3-tPqbPhH'^3b>*oq'[2a'X>moX>FC?\78j?MrbHs7l)5d%Jrq~>%AI9_PrivateDataEnd